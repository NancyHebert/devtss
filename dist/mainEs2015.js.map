{"version":3,"sources":["main.js"],"names":["env","envs","be_url","be","uniweb_url","uniweb","fomsso_url","fomsso","locales","en","message","fr","Vue","use","VueI18n","defaultLanguage","$","attr","config","lang","Object","keys","forEach","locale","component","template","props","methods","toggle","e","cutKeepingTags","elem","reqCount","grabText","missCount","contents","each","nodeType","Node","TEXT_NODE","data","substr","Math","min","length","ELEMENT_NODE","childPart","text","count","outerHTML","match","localName","computed","shortdesc","returnval","desc","truncate","$t","inputText","truncated","outputText","html","el","allConversations","allUnreadCount","alpha","alphaButtonArray","alphabuttons","availableDate","body","clickedLoginBtn","clickedResearcher","clickedResearcherAcademicUnit","clickedResearcherId","clickedResearcherName","clickedResearcherPositionTitle","clickedResearcherUsername","contactedResearcherId","conversationResearchers","createAccountFailed","cv","cvFiles","cvStudent","email","fileName","filteredResearchers","filteredResearchersAvailability","freeText","hasConversations","interestsChoices","internal","isAvailable","isSelected","isUnAvailable","key","levelOfInstruction","loading","loggedIn","loginFailed","loginState","messageList","model","name","noReply","password","profile","programCode","programName","programs","rememberMe","researcherAvailability","researcherAvailabilityArr","researcherAvailableId","researcherConversations","researcherInterests","researcherIsAvailable","researcherName","researchers","result","role","selectedInterestLeaf","selectedInterests","selectedResearcherConversations","student_profile_array","student_profile","studentConversations","studentCv","studentHasCv","studentHasTranscripts","studentID","studentName","studentProfile","students","studentTranscripts","theName","theResearcherTalkedToStudent","theSelectedLanguage","token","transcripts","transcriptsStudent","unread","uoUser","user","userGuid","userId","username","userName","userRole","verificationCode","viewPasswordClicked","created","retrieve","console","log","document","title","getResearchers","getPrograms","store","storeVariable","localVariable","sessionStorage","setItem","localStorage","retrieveVariable","retrieveValue","getItem","viewProfile","event","preventDefault","removeClass","modal","viewConversations","uploadCv","student_username","files","target","file","FormData","append","url","modelRoute","fileUrl","$http","post","headers","then","response","getCv","viewStudentProfile","studentUsername","getStudentProfile","hidePassword","find","viewPassword","urlRoute","get","processCv","filename","fileObj","push","deleteCv","encodeURIComponent","delete","uploadTranscripts","getTranscripts","processTranscripts","transcript","deleteTranscript","clickedTranscript","viewResearcherProfile","id","researcherPositionTitle","researcherAcademicUnit","researcherId","selectedResearcherId","val","selR","membership_information","first_name","last_name","checkStudentTalkedToResearcher","student","talkedWith","researcher","parseInt","researcherid","login","contactResearcher","getResearcherAvailability","theUrl","available_date","today","Date","formatDate","processResearcherAvailability","checkResearcherSelected","selected","findGrantTitle","funding_title","saveAvailability","trim","availabilityContent","researcherAvailable","saveMessage","messageContent","dd","getDate","mm","getMonth","guid","researcher_uniweb_number","researcher_username","researcher_name","students_id","student_name","is_from_student","yyyy","getFullYear","sentDT","$nextTick","messageRead","isFromStudent","read_date","toISOString","content","put","getMessageList","sendInitialMessage","position_title","academic_unit","sendMessage","studentUserId","textareaId","updateProfile","profileContent","level_of_instruction","program_code","parsed_program_code","isNaN","theurl","getStudent","status","createProfile","application","readUserRole","credentials","parseJwt","updateStateEngine","buttonClickUpdateChecked","value","theValue","theIndex","interestChoicesObj","isFound","interestObj","inArray","prop","index","toString","filterResearchers","extractAlphaFilter","refreshFilteredList","updateChecked","checked","choice","indexx","indexOf","splice","createInterestList","research_interests","anInterest","leaf","interest","sort","toggleLanguage","newLang","getStudents","processStudents","filter","item","process_student_profile","processStudentProfile","userID","addClass","hide","show","change","theResearchers","processUniwebFeed","onCreateAccount","toLowerCase","onVerifyEmail","onValidateVerificationCode","enteredVerificationCode","onEmailPassword","undefined","processExternalUser","newState","onTryAgain","onResendEmail","postEmail","onVerificationCode","getStudentConversations","getResearcherConversations","onModalClose","on","researcherID","conversations","groupBy","studentname","studentemail","studentusername","studentArr","studentObj","oneconversations","conversation","propertyNameStudentName","propertyValueStudentName","propertyNameStudentUserName","propertyValueStudentUserName","propertyNameStudentId","propertyValueStudentId","propertyNameTalkedWith","propertyValueTalkedWith","propertyName","propertyValue","cntr","c","pNew","isUnread","date","year","pad","month","day","formattedDate","numb","researcherArr","researcherObj","researcherHasReplied","theconversations","aConversation","array","f","groups","o","group","JSON","stringify","map","radioLevelClick","level","theLevel","radioYesClick","radioNoClick","remove","jwtToken","base64Url","split","base64","replace","parse","window","atob","logout","clear","theEmail","processRole","authorize","myInterests","selInterest","theInterest","alphabet","alphabetButtons","letter","letterUppercase","toUpperCase","researcherLastInitials","firstchar","charAt","includes","alphabutton","_","onFilterFreetext","wasFound","biography","bio","academic_biography","selected_publications","art","journal_articles","article_title","onFilterFreetextClear"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA,IAAIA,MAAM,MAAV;;AAEA,IAAIC,OAAO;AACV,UAAQ;AACN,cAAU,gCADJ;AAEL,cAAU,wCAFL;AAGL,UAAM;AAHD,GADE;AAMV,aAAW;AACT,cAAU,oBADD;AAER,cAAU,oBAFF;AAGR,UAAM;AAHE;AAND,CAAX;;AAaA;AACA,IAAIC,SAASD,KAAKD,GAAL,EAAUG,EAAvB;AACA,IAAIC,aAAaH,KAAKD,GAAL,EAAUK,MAA3B;AACA,IAAIC,aAAaL,KAAKD,GAAL,EAAUO,MAA3B;;AAEA,IAAIC,UAAU;AACZC,MAAI;AACFC,aAAS;AACP,sBAAgB,SADT;AAEP,uBAAiB,gBAFV;AAGP,kBAAY,oGAHL;AAIP,uBAAiB,gBAJV;AAKP,oBAAc,wBALP;AAMP,wBAAkB,gBANX;AAOP,gBAAU,QAPH;AAQP,gCAA0B,yBARnB;AASP,eAAS,yIATF;AAUP,mBAAa,WAVN;AAWP,gBAAU,QAXH;AAYP,6BAAuB,qBAZhB;AAaP,mBAAa,sBAbN;AAcP,qBAAe,0BAdR;AAeP,mBAAa,2DAfN;AAgBP,eAAS,OAhBF;AAiBP,eAAS,OAjBF;AAkBP,cAAQ,oBAlBD;AAmBP,yBAAmB,kBAnBZ;AAoBP,yBAAmB,kBApBZ;AAqBP,iCAA2B,yBArBpB;AAsBP,qBAAe,gDAtBR;AAuBP,oBAAc,kDAvBP;AAwBP,+BAAyB,yBAxBlB;AAyBP,iBAAW,SAzBJ;AA0BP,mCAA6B,oEA1BtB;AA2BP,kBAAY,UA3BL;AA4BP,mBAAa,mBA5BN;AA6BP,uBAAiB,eA7BV;AA8BP,wBAAkB,gBA9BX;AA+BP,+BAAyB,+FA/BlB;AAgCP,mBAAa,iBAhCN;AAiCP,6BAAuB,qBAjChB;AAkCP,6BAAuB,qBAlChB;AAmCP,6BAAuB,mCAnChB;AAoCP,qBAAe,iCApCR;AAqCP,YAAM,IArCC;AAsCP,uBAAiB,0BAtCV;AAuCP,iBAAW,2BAvCJ;AAwCP,qBAAe,kBAxCR;AAyCP,mBAAa,kCAzCN;AA0CP,2BAAqB,mBA1Cd;AA2CP,mBAAa,WA3CN;AA4CP,gCAA0B,wBA5CnB;AA6CP,sBAAgB,mBA7CT;AA8CP,sCAAgC,oFA9CzB;AA+CP,oBAAc,oCA/CP;AAgDP,eAAS,gBAhDF;AAiDP,sBAAgB,6BAjDT;AAkDP,iBAAW,SAlDJ;AAmDP,6BAAuB,0BAnDhB;AAoDP,kCAA4B,oHApDrB;AAqDP,qBAAe,mBArDR;AAsDP,uBAAiB,2BAtDV;AAuDP,oBAAc,YAvDP;AAwDP,sBAAgB,iCAxDT;AAyDP,wBAAkB,4BAzDX;AA0DP,kBAAY,+BA1DL;AA2DP,iCAA2B,8BA3DpB;AA4DP,6BAAuB,qBA5DhB;AA6DP,eAAS,kDA7DF;AA8DP,0BAAoB,mDA9Db;AA+DP,aAAO,MA/DA;AAgEP,yBAAmB,gGAhEZ;AAiEP,6BAAuB,qBAjEhB;AAkEP,0BAAoB,mBAlEb;AAmEP,4BAAsB,qBAnEf;AAoEP,wBAAkB,iCApEX;AAqEP,mBAAa,iBArEN;AAsEP,mCAA6B,6BAtEtB;AAuEP,0BAAoB,YAvEb;AAwEP,4BAAsB,cAxEf;AAyEP,uBAAiB,SAzEV;AA0EP,qCAA+B,uBA1ExB;AA2EP,8BAAwB,gBA3EjB;AA4EP,sCAAgC,wBA5EzB;AA6EP,4BAAsB,cA7Ef;AA8EP,sBAAgB,gBA9ET;AA+EP,mBAAa,mBA/EN;AAgFP,gBAAU,UAhFH;AAiFP,YAAM,IAjFC;AAkFP,sBAAgB,mCAlFT;AAmFP,6BAAuB,0CAnFhB;AAoFP,eAAS,QApFF;AAqFP,wBAAkB,yFArFX;AAsFP,mBAAa,kFAtFN;AAuFP,kBAAY,yCAvFL;AAwFP,iBAAW,eAxFJ;AAyFP,cAAQ,MAzFD;AA0FP,2BAAqB,uEA1Fd;AA2FP,oBAAc,2EA3FP;AA4FP,mBAAa,kBA5FN;AA6FP,2BAAqB,oBA7Fd;AA8FP,oBAAc,qBA9FP;AA+FP,eAAS,oBA/FF;AAgGP,uBAAiB,gHAhGV;AAiGP,yBAAmB,wDAjGZ;AAkGP,wCAAkC,mCAlG3B;AAmGP,6BAAuB,sBAnGhB;AAoGP,sBAAgB,yEApGT;AAqGP,iBAAW,4BArGJ;AAsGP,mBAAa,qBAtGN;AAuGP,qBAAe,aAvGR;AAwGP,oBAAc,cAxGP;AAyGP,0BAAoB,kBAzGb;AA0GP,6BAAuB,wDA1GhB;AA2GP,4BAAsB,oBA3Gf;AA4GP,eAAS,qBA5GF;AA6GP,uBAAiB,uDA7GV;AA8GP,uBAAiB,+EA9GV;AA+GP,6BAAuB,iDA/GhB;AAgHP,0BAAoB,uCAhHb;AAiHP,gBAAU,QAjHH;AAkHP,iBAAW,SAlHJ;AAmHP,0BAAqB,2CAnHd;AAoHP,mBAAa,cApHN;AAqHP,yBAAmB,+DArHZ;AAsHP,iBAAW,UAtHJ;AAuHP,aAAO,OAvHA;AAwHP,cAAQ,OAxHD;AAyHP,sBAAgB,eAzHT;AA0HP,gBAAU,qHA1HH;AA2HP,6BAAuB,oCA3HhB;AA4HP,gCAA0B,gCA5HnB;AA6HP,YAAM,IA7HC;AA8HP,0BAAoB,uCA9Hb;AA+HP,iCAA2B,2CA/HpB;AAgIP,uBAAiB,uBAhIV;AAiIP,uBAAiB,gFAjIV;AAkIP,gBAAU,oBAlIH;AAmIP,kBAAY,WAnIL;AAoIP,aAAO,OApIA;AAqIP,iBAAW,SArIJ;AAsIP,iBAAW,UAtIJ;AAuIP,mBAAa,YAvIN;AAwIP,sBAAgB,iDAxIT;AAyIP,0BAAoB,mBAzIb;AA0IP,2BAAqB,oBA1Id;AA2IP,sBAAgB,cA3IT;AA4IP,YAAM,WA5IC;AA6IP,qBAAe,aA7IR;AA8IP,gBAAU,QA9IH;AA+IP,8BAAwB,sBA/IjB;AAgJP,4BAAsB,oBAhJf;AAiJP,4BAAsB,oBAjJf;AAkJP,sBAAgB,cAlJT;AAmJP,gBAAU,kBAnJH;AAoJP,kBAAY,WApJL;AAqJP,iBAAW,UArJJ;AAsJP,aAAO,oBAtJA;AAuJP,cAAQ,MAvJD;AAwJP,sBAAgB,cAxJT;AAyJP,cAAQ,MAzJD;AA0JP,gBAAU,QA1JH;AA2JP,sBAAgB,cA3JT;AA4JP,wBAAkB,gBA5JX;AA6JP,yBAAmB,4BA7JZ;AA8JP,gBAAU,QA9JH;AA+JP,sBAAgB,cA/JT;AAgKP,cAAQ,MAhKD;AAiKP,iBAAW,WAjKJ;AAkKP,cAAQ,OAlKD;AAmKP,iBAAW,UAnKJ;AAoKP,cAAQ,sBApKD;AAqKP,eAAS,gBArKF;AAsKP,uBAAgB,QAtKT;AAuKP,yBAAmB,0EAvKZ;AAwKP,yBAAmB,iBAxKZ;AAyKP,mBAAa,oIAzKN;AA0KP,iBAAW,kCA1KJ;AA2KP,gCAA0B,uEA3KnB;AA4KP;AACA,sBAAgB,eA7KT;AA8KP,sBAAgB,4HA9KT;AA+KP,sBAAgB,yKA/KT;AAgLP,+BAAyB,6BAhLlB;AAiLP,cAAQ,MAjLD;AAkLP,oBAAc,YAlLP;AAmLP,2BAAqB,yDAnLd;AAoLP,2BAAqB,mBApLd;AAqLP,8BAAwB,wEArLjB;AAsLP,qBAAe,aAtLR;AAuLP,mBAAa,kBAvLN;AAwLP,aAAO,0BAxLA;AAyLP,YAAM,YAzLC;AA0LP,gBAAU,SA1LH;AA2LP,kBAAY,WA3LL;AA4LP,sBAAgB,oBA5LT;AA6LP,mBAAa,2BA7LN;AA8LP,4BAAsB,oBA9Lf;AA+LP,uBAAiB,qBA/LV;AAgMP,sBAAgB,cAhMT;AAiMP,iBAAW,eAjMJ;AAkMP,mBAAa,aAlMN;AAmMP,uBAAiB,gBAnMV;AAoMP,gBAAU,SApMH;AAqMP,iBAAW,uHArMJ;AAsMP,uBAAiB,gBAtMV;AAuMP,uBAAiB,kEAvMV;AAwMP,iBAAW,kEAxMJ;AAyMP,sBAAgB,cAzMT;AA0MP,oBAAc,sCA1MP;AA2MP,iBAAW,SA3MJ;AA4MP,eAAS,YA5MF;AA6MP,aAAO,KA7MA;AA8MP,kBAAY,WA9ML;AA+MP,mBAAa;AA/MN;AADP,GADQ;AAoNZC,MAAI;AACFD,aAAS;AACP,sBAAgB,SADT;AAEP,uBAAiB,YAFV;AAGP,kBAAY,+GAHL;AAIP,uBAAiB,yBAJV;AAKP,oBAAc,2BALP;AAMP,wBAAkB,yBANX;AAOP,gBAAU,SAPH;AAQP,gCAA0B,6BARnB;AASP,eAAS,wKATF;AAUP,mBAAa,YAVN;AAWP,gBAAU,SAXH;AAYP,6BAAuB,6BAZhB;AAaP,mBAAa,6BAbN;AAcP,qBAAe,6CAdR;AAeP,mBAAa,oEAfN;AAgBP,eAAS,SAhBF;AAiBP,eAAS,QAjBF;AAkBP,cAAQ,wBAlBD;AAmBP,yBAAmB,yBAnBZ;AAoBP,yBAAmB,uBApBZ;AAqBP,iCAA2B,wBArBpB;AAsBP,qBAAe,wDAtBR;AAuBP,oBAAc,sEAvBP;AAwBP,+BAAyB,0BAxBlB;AAyBP,iBAAW,WAzBJ;AA0BP,mCAA6B,2EA1BtB;AA2BP,kBAAY,WA3BL;AA4BP,mBAAa,mBA5BN;AA6BP,uBAAiB,eA7BV;AA8BP,wBAAkB,iBA9BX;AA+BP,+BAAyB,qGA/BlB;AAgCP,mBAAa,0BAhCN;AAiCP,6BAAuB,iBAjChB;AAkCP,6BAAuB,oBAlChB;AAmCP,6BAAuB,kDAnChB;AAoCP,qBAAe,kCApCR;AAqCP,YAAM,IArCC;AAsCP,uBAAiB,0BAtCV;AAuCP,iBAAW,mCAvCJ;AAwCP,qBAAe,oBAxCR;AAyCP,mBAAa,0CAzCN;AA0CP,2BAAqB,2BA1Cd;AA2CP,mBAAa,oBA3CN;AA4CP,gCAA0B,iCA5CnB;AA6CP,sBAAgB,uBA7CT;AA8CP,sCAAgC,+FA9CzB;AA+CP,oBAAc,6BA/CP;AAgDP,eAAS,oBAhDF;AAiDP,sBAAgB,6BAjDT;AAkDP,iBAAW,SAlDJ;AAmDP,6BAAuB,+BAnDhB;AAoDP,kCAA4B,4IApDrB;AAqDP,qBAAe,iCArDR;AAsDP,uBAAiB,qCAtDV;AAuDP,oBAAc,eAvDP;AAwDP,sBAAgB,oCAxDT;AAyDP,wBAAkB,2BAzDX;AA0DP,kBAAY,8BA1DL;AA2DP,iCAA2B,mCA3DpB;AA4DP,6BAAuB,2BA5DhB;AA6DP,eAAS,4DA7DF;AA8DP,0BAAoB,2CA9Db;AA+DP,aAAO,SA/DA;AAgEP,yBAAmB,gGAhEZ;AAiEP,6BAAuB,qBAjEhB;AAkEP,0BAAoB,wBAlEb;AAmEP,4BAAsB,uBAnEf;AAoEP,wBAAkB,2CApEX;AAqEP,mBAAa,8BArEN;AAsEP,mBAAa,4BAtEN;AAuEP,gBAAU,UAvEH;AAwEP,mCAA6B,iCAxEtB;AAyEP,0BAAoB,gBAzEb;AA0EP,4BAAsB,uBA1Ef;AA2EP,uBAAiB,UA3EV;AA4EP,qCAA+B,0BA5ExB;AA6EP,8BAAwB,qBA7EjB;AA8EP,sCAAgC,8BA9EzB;AA+EP,4BAAsB,kBA/Ef;AAgFP,sBAAgB,wBAhFT;AAiFP,YAAM,SAjFC;AAkFP,sBAAgB,iDAlFT;AAmFP,6BAAuB,iDAnFhB;AAoFP,eAAS,aApFF;AAqFP,wBAAkB,iDArFX;AAsFP,mBAAa,iFAtFN;AAuFP,iBAAW,wBAvFJ;AAwFP,cAAQ,SAxFD;AAyFP,2BAAqB,mEAzFd;AA0FP,oBAAc,uEA1FP;AA2FP,mBAAa,sBA3FN;AA4FP,2BAAqB,eA5Fd;AA6FP,oBAAc,eA7FP;AA8FP,eAAS,oBA9FF;AA+FP,uBAAiB,sIA/FV;AAgGP,yBAAmB,6EAhGZ;AAiGP,wCAAkC,yCAjG3B;AAkGP,6BAAuB,wBAlGhB;AAmGP,sBAAgB,8FAnGT;AAoGP,iBAAW,6BApGJ;AAqGP,mBAAa,iBArGN;AAsGP,qBAAe,gBAtGR;AAuGP,oBAAc,qBAvGP;AAwGP,0BAAoB,mBAxGb;AAyGP,6BAAuB,2DAzGhB;AA0GP,4BAAsB,wBA1Gf;AA2GP,eAAS,2BA3GF;AA4GP,uBAAiB,sDA5GV;AA6GP,uBAAiB,sIA7GV;AA8GP,6BAAuB,sFA9GhB;AA+GP,0BAAoB,8CA/Gb;AAgHP,gBAAU,oBAhHH;AAiHP,iBAAW,gBAjHJ;AAkHP,0BAAqB,uDAlHd;AAmHP,mBAAa,iBAnHN;AAoHP,yBAAmB,2DApHZ;AAqHP,iBAAW,WArHJ;AAsHP,aAAO,QAtHA;AAuHP,cAAQ,OAvHD;AAwHP,sBAAgB,oBAxHT;AAyHP,gBAAU,sJAzHH;AA0HP,6BAAuB,4CA1HhB;AA2HP,gCAA0B,kDA3HnB;AA4HP,YAAM,KA5HC;AA6HP,0BAAoB,wCA7Hb;AA8HP,iCAA2B,wDA9HpB;AA+HP,uBAAiB,0BA/HV;AAgIP,uBAAiB,0FAhIV;AAiIP,gBAAU,oBAjIH;AAkIP,kBAAY,gBAlIL;AAmIP,aAAO,QAnIA;AAoIP,iBAAW,QApIJ;AAqIP,iBAAW,aArIJ;AAsIP,mBAAa,gCAtIN;AAuIP,sBAAgB,6CAvIT;AAwIP,0BAAoB,0BAxIb;AAyIP,2BAAqB,2BAzId;AA0IP,sBAAgB,cA1IT;AA2IP,YAAM,gBA3IC;AA4IP,qBAAe,oBA5IR;AA6IP,gBAAU,WA7IH;AA8IP,8BAAwB,6BA9IjB;AA+IP,4BAAsB,uBA/If;AAgJP,4BAAsB,wBAhJf;AAiJP,sBAAgB,+BAjJT;AAkJP,gBAAU,qBAlJH;AAmJP,kBAAY,mBAnJL;AAoJP,iBAAW,YApJJ;AAqJP,aAAO,wBArJA;AAsJP,cAAQ,OAtJD;AAuJP,cAAQ,aAvJD;AAwJP,gBAAU,WAxJH;AAyJP,sBAAgB,eAzJT;AA0JP,wBAAkB,2BA1JX;AA2JP,yBAAmB,0CA3JZ;AA4JP,gBAAU,cA5JH;AA6JP,sBAAgB,oBA7JT;AA8JP,cAAQ,SA9JD;AA+JP,iBAAW,cA/JJ;AAgKP,cAAQ,UAhKD;AAiKP,iBAAW,eAjKJ;AAkKP,cAAQ,6BAlKD;AAmKP,eAAS,kBAnKF;AAoKP,uBAAgB,gBApKT;AAqKP,yBAAmB,qFArKZ;AAsKP,yBAAmB,sBAtKZ;AAuKP,mBAAa,iKAvKN;AAwKP,iBAAW,oCAxKJ;AAyKP,gCAA0B,qFAzKnB;AA0KP;AACA,sBAAgB,gBA3KT;AA4KP,sBAAgB,gIA5KT;AA6KP,sBAAgB,iMA7KT;AA8KP,+BAAyB,kCA9KlB;AA+KP,cAAQ,UA/KD;AAgLP,oBAAc,uBAhLP;AAiLP,2BAAqB,oGAjLd;AAkLP,2BAAqB,wBAlLd;AAmLP,8BAAwB,oFAnLjB;AAoLP,qBAAe,kBApLR;AAqLP,mBAAa,uBArLN;AAsLP,aAAO,mCAtLA;AAuLP,YAAM,QAvLC;AAwLP,gBAAU,UAxLH;AAyLP,kBAAY,qBAzLL;AA0LP,sBAAgB,wBA1LT;AA2LP,mBAAa,kCA3LN;AA4LP,4BAAsB,wBA5Lf;AA6LP,uBAAiB,uBA7LV;AA8LP,sBAAgB,gBA9LT;AA+LP,iBAAW,sBA/LJ;AAgMP,mBAAa,UAhMN;AAiMP,gBAAU,SAjMH;AAkMP,iBAAW,qIAlMJ;AAmMP,uBAAiB,2BAnMV;AAoMP,uBAAiB,gFApMV;AAqMP,iBAAW,gFArMJ;AAsMP,sBAAgB,WAtMT;AAuMP,oBAAc,6DAvMP;AAwMP,iBAAW,WAxMJ;AAyMP,eAAS,SAzMF;AA0MP,aAAO,KA1MA;AA2MP,kBAAY,YA3ML;AA4MP,mBAAa;AA5MN;AADP;AApNQ,CAAd;;AAsaA;AACAE,IAAIC,GAAJ,CAAQC,OAAR;;AAGA;AACA,IAAIC,kBAAkBC,EAAE,MAAF,EAAUC,IAAV,CAAe,MAAf,CAAtB;AACAL,IAAIM,MAAJ,CAAWC,IAAX,GAAkBJ,eAAlB;;AAEA;AACAK,OAAOC,IAAP,CAAYb,OAAZ,EAAqBc,OAArB,CAA6B,UAAUH,IAAV,EAAgB;AAC3CP,MAAIW,MAAJ,CAAWJ,IAAX,EAAiBX,QAAQW,IAAR,CAAjB;AACD,CAFD;;AAMAP,IAAIY,SAAJ,CAAc,sBAAd,EAAsC;AAC/BC,YAAU,wDADqB;AAE/BC,SAAO,CAAC,MAAD;AAFwB,CAAtC;;AAKAd,IAAIY,SAAJ,CAAc,wBAAd,EAAwC;AACjCC,YAAU,sDADuB;AAEjCC,SAAO,CAAC,eAAD;AAF0B,CAAxC;;AAQAd,IAAIY,SAAJ,CAAc,iBAAd,EAAiC;AAC/BC,YAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADqB,CAAjC;;AAmIAb,IAAIY,SAAJ,CAAc,mBAAd,EAAmC;AAC5BC,YAAU,qDADkB;AAE5BC,SAAO,CAAC,MAAD;AAFqB,CAAnC;;AAKAd,IAAIY,SAAJ,CAAc,2BAAd,EAA2C;AACpCC,YAAU,wDAD0B;AAEpCC,SAAO,CAAC,SAAD;AAF6B,CAA3C;;AAKA;;AAEAd,IAAIY,SAAJ,CAAc,qBAAd,EAAqC;AAC/BC,YAAU,iHADqB;AAE/BC,SAAO,CAAC,aAAD,CAFwB;AAG/B;AACA;AACA;AACA;AACAC,WAAS;AACPC,YAAQ,gBAAUC,CAAV,EAAa;AACnB;;AAED;AAJM;AAPsB,CAArC;;AAeA;AACA,SAASC,cAAT,CAAyBC,IAAzB,EAA+BC,QAA/B,EAAyC;AACvC,MAAIC,WAAW,EAAf;AAAA,MACIC,YAAYF,QADhB;AAEAhB,IAAEe,IAAF,EAAQI,QAAR,GAAmBC,IAAnB,CAAwB,YAAW;AACjC,YAAQ,KAAKC,QAAb;AACE,WAAKC,KAAKC,SAAV;AACE;AACAN,oBAAY,KAAKO,IAAL,CAAUC,MAAV,CAAiB,CAAjB,EAAmBP,SAAnB,CAAZ;AACAA,qBAAaQ,KAAKC,GAAL,CAAS,KAAKH,IAAL,CAAUI,MAAnB,EAA2BV,SAA3B,CAAb;AACA;AACF,WAAKI,KAAKO,YAAV;AACE;AACA,YAAIC,YAAYhB,eAAe,IAAf,EAAqBI,SAArB,CAAhB;AACAD,oBAAYa,UAAUC,IAAtB;AACAb,qBAAaY,UAAUE,KAAvB;AACA;AAXJ;AAaA,QAAId,aAAa,CAAjB,EAAoB;AAClB;AACA,aAAO,KAAP;AACD;AACF,GAlBD;AAmBA,SAAO;AACLa;AACE;AACAhB,SAAKkB,SAAL,CAAeC,KAAf,CAAqB,WAArB,EAAkC,CAAlC,IACEjB,QADF,GAEE,IAFF,GAESF,KAAKoB,SAFd,GAE0B,GALvB;AAMLH,WAAOhB,WAAWE;AANb,GAAP;AAQD;;AAIDtB,IAAIY,SAAJ,CAAc,mBAAd,EAAmC;AACjCE,SAAO,CAAC,MAAD,EAAS,MAAT,CAD0B;AAEjCD,YAAU,8BAFuB;;AAIjC2B,YAAU;AACRC,eAAW,qBAAY;AACrB,UAAIC,kBAAJ;AACA,UAAI,KAAKnC,IAAL,KAAc,IAAlB,EAAwB;AACtB,YAAI,KAAKoC,IAAL,CAAU5C,EAAd,EAAkB;AAChB2C,sBAAY,KAAKE,QAAL,CAAc,KAAKD,IAAL,CAAU5C,EAAxB,EAA2B,GAA3B,CAAZ;AACD,SAFD,MAEO;AACL2C,sBAAY,6BAA6B,KAAKG,EAAL,CAAQ,6BAAR,CAA7B,GAAsE,QAAtE,GAAiF,KAAKD,QAAL,CAAc,KAAKD,IAAL,CAAU9C,EAAxB,EAA2B,GAA3B,CAA7F;AACD;AACF,OAND,MAMO;AACL,YAAI,KAAK8C,IAAL,CAAU9C,EAAd,EAAkB;AAChB6C,sBAAY,KAAKE,QAAL,CAAc,KAAKD,IAAL,CAAU9C,EAAxB,EAA2B,GAA3B,CAAZ;AACD,SAFD,MAEO;AACL6C,sBAAY,6BAA6B,KAAKG,EAAL,CAAQ,6BAAR,CAA7B,GAAsE,QAAtE,GAAiF,KAAKD,QAAL,CAAc,KAAKD,IAAL,CAAU5C,EAAxB,EAA2B,GAA3B,CAA7F;AACD;AACF;AACD,aAAO2C,SAAP;AACD;AAjBO,GAJuB;;AAwBjC3B,WAAS;AACP6B,cAAU,kBAAUE,SAAV,EAAqB1B,QAArB,EAA+B;AACvC,UAAID,OAAQf,EAAE,UAAQ0C,SAAR,GAAkB,QAApB,EAA8B,CAA9B,CAAZ,CADuC,CACO;AAC9C,UAAIC,YAAY7B,eAAeC,IAAf,EAAqBC,QAArB,CAAhB;AACA,UAAI4B,aAAa5C,EAAE2C,UAAUZ,IAAZ,EAAkBc,IAAlB,EAAjB;AACA,UAAIF,UAAUX,KAAV,IAAmBhB,QAAvB,EAAiC;AAAE;AACjC,eAAO4B,aAAa,UAApB;AACD,OAFD,MAEO;AACL,eAAOA,UAAP;AACD;AACF;AAVM;AAxBwB,CAAnC;;AAsCA,IAAIhD,GAAJ,CAAQ;AACJkD,MAAI,MADA;AAEJtB,QAAM;AACMuB,sBAAkB,EADxB;AAEFC,oBAAgB,CAFd;AAGFC,WAAO,EAHL;AAIFC,sBAAkB,EAJhB;AAKFC,kBAAc,EALZ;AAMFC,mBAAe,IANb;AAOFC,UAAM,EAPJ;AAQFC,qBAAiB,KARf;AASFC,uBAAmB,EATjB;AAUFC,mCAA+B,EAV7B;AAWFC,yBAAqB,EAXnB;AAYFC,2BAAuB,EAZrB;AAaFC,oCAAgC,EAb9B;AAcFC,+BAA2B,EAdzB;AAeFC,2BAAuB,EAfrB;AAgBFC,6BAAyB,EAhBvB;AAiBFC,yBAAqB,KAjBnB;AAkBFC,QAAI,EAlBF;AAmBFC,aAAS,EAnBP;AAoBFC,eAAW,EApBT;AAqBFC,WAAO,IArBL;AAsBFC,cAAU,EAtBR;AAuBFC,yBAAqB,EAvBnB;AAwBFC,qCAAiC,EAxB/B;AAyBFC,cAAU,EAzBR;AA0BFC,sBAAkB,KA1BhB;AA2BFC,sBAAmB,EA3BjB;AA4BFC,cAAU,KA5BR;AA6BFC,iBAAa,KA7BX;AA8BFC,gBAAY,KA9BV;AA+BFC,mBAAe,KA/Bb;AAgCFC,SAAK,OAhCH;AAiCFC,wBAAoB,EAjClB;AAkCFC,aAAS,IAlCP;AAmCFC,cAAU,KAnCR;AAoCFC,iBAAa,KApCX;AAqCFC,gBAAY,YArCV;AAsCFzF,aAAS,EAtCP;AAuCF0F,iBAAa,EAvCX;AAwCFC,WAAOjF,MAxCL;AAyCFkF,UAAM,EAzCJ;AA0CFC,aAAS,KA1CP;AA2CFC,cAAU,EA3CR;AA4CFC,aAAS,KA5CP;AA6CFC,iBAAa,EA7CX;AA8CFC,iBAAa,EA9CX;AA+CFC,cAAU,EA/CR;AAgDFC,gBAAY,KAhDV;AAiDFC,4BAAwB,EAjDtB;AAkDFC,+BAA2B,EAlDzB;AAmDFC,2BAAuB,IAnDrB;AAoDFC,6BAAyB,EApDvB;AAqDFC,yBAAqB,EArDnB;AAsDFC,2BAAuB,KAtDrB;AAuDFC,oBAAgB,EAvDd;AAwDFC,iBAAc,IAxDZ;AAyDFC,YAAO,EAzDL;AA0DFC,UAAM,SA1DJ;AA2DFC,0BAAsB,EA3DpB;AA4DFC,uBAAmB,EA5DjB;AA6DFC,qCAAiC,EA7D/B;AA8DFC,2BAAuB,EA9DrB;AA+DFC,qBAAiB,IA/Df;AAgEFC,0BAAsB,EAhEpB;AAiEFC,eAAW,EAjET;AAkEFC,kBAAc,KAlEZ;AAmEFC,2BAAuB,KAnErB;AAoEFC,eAAW,EApET;AAqEFC,iBAAa,EArEX;AAsEFC,oBAAgB,EAtEd;AAuEFC,cAAU,IAvER;AAwEFC,wBAAoB,EAxElB;AAyEFC,aAAS,EAzEP;AA0EFC,kCAA8B,KA1E5B;AA2EFC,yBAAqB,IA3EnB;AA4EFC,WAAO,EA5EL;AA6EFC,iBAAa,EA7EX;AA8EFC,wBAAoB,EA9ElB;AA+EFC,YAAQ,KA/EN;AAgFFC,YAAQ,KAhFN;AAiFFC,UAAM,EAAC,QAAQ,SAAT,EAjFJ;AAkFFC,cAAU,EAlFR;AAmFFC,YAAQ,EAnFN;AAoFFC,cAAU,EApFR;AAqFFC,cAAU,EArFR;AAsFFC,cAAU,EAtFR;AAuFFC,sBAAkB,EAvFhB;AAwFFC,yBAAqB;;AAxFnB,GAFF;AA6FJC,WAAS,mBAAY;;AAEnB,SAAKhD,IAAL,GAAY,KAAKiD,QAAL,CAAc,MAAd,EAAsB,KAAKjD,IAA3B,CAAZ;AACA,SAAKnB,KAAL,GAAa,KAAKoE,QAAL,CAAc,OAAd,EAAsB,KAAKpE,KAA3B,CAAb;AACA,SAAKoC,IAAL,GAAY,KAAKgC,QAAL,CAAc,MAAd,EAAqB,KAAKhC,IAA1B,CAAZ;AACA,SAAKyB,MAAL,GAAc,KAAKO,QAAL,CAAc,QAAd,EAAuB,KAAKP,MAA5B,CAAd;AACA,SAAKC,QAAL,GAAgB,KAAKM,QAAL,CAAc,UAAd,EAA0B,KAAKL,QAA/B,CAAhB;AACAM,YAAQC,GAAR,CAAY,2BAA2B,KAAKR,QAA5C;AACA,SAAKvD,QAAL,GAAiB,KAAK6D,QAAL,CAAc,UAAd,EAAyB,KAAK7D,QAA9B,MAA4C,MAA7D,CARmB,CAQmD;AACtE,SAAKO,QAAL,GAAiB,KAAKsD,QAAL,CAAc,UAAd,EAAyB,KAAKtD,QAA9B,MAA4C,MAA7D,CATmB,CASmD;AACtE,SAAKE,UAAL,GAAkB,KAAKoD,QAAL,CAAc,YAAd,EAA2B,KAAKpD,UAAhC,CAAlB;AACA,SAAKM,OAAL,GAAgB,KAAK8C,QAAL,CAAc,SAAd,EAAwB,KAAK9C,OAA7B,MAA0C,MAA1D,CAXmB,CAWgD;AACnE;AACA;AACA,SAAKjB,gBAAL,GAAyB,KAAK+D,QAAL,CAAc,kBAAd,EAAiC,KAAK/D,gBAAtC,MAA4D,MAArF,CAdmB,CAc2E;AAC9F,SAAKxB,cAAL,GAAsB,KAAKuF,QAAL,CAAc,gBAAd,EAA+B,KAAKvF,cAApC,CAAtB;AACA,SAAK6C,UAAL,GAAkB,KAAK0C,QAAL,CAAc,YAAd,EAA2B,KAAK1C,UAAhC,CAAlB;AACA,SAAK2B,mBAAL,GAA2B,KAAKe,QAAL,CAAc,qBAAd,EAAoC,KAAKf,mBAAzC,CAA3B;;AAEA;AACAxH,MAAE,MAAF,EAAUC,IAAV,CAAe,MAAf,EAAuB,KAAKuH,mBAA5B;AACA5H,QAAIM,MAAJ,CAAWC,IAAX,GAAkB,KAAKqH,mBAAvB;AACAkB,aAASC,KAAT,GAAiB,aAAa,KAAKlG,EAAL,CAAQ,6BAAR,CAAb,GAAsD,GAAtD,GAA4D,KAAKA,EAAL,CAAQ,aAAR,CAA7E,CAtBmB,CAsBkF;;AAErG,SAAKmG,cAAL;AACA,SAAKC,WAAL;AAED,GAxHG;AAyHJlI,WAAS;;AAEPmI,WAAO,eAASC,aAAT,EAAwBC,aAAxB,EAAuC;AAC5CC,qBAAeC,OAAf,CAAuBH,aAAvB,EAAqCC,aAArC;AACA,UAAI,KAAKnD,UAAT,EAAqB;AACnBsD,qBAAaD,OAAb,CAAqBH,aAArB,EAAmCC,aAAnC;AACD;AACF,KAPM;;AASPT,cAAU,kBAASa,gBAAT,EAA2BJ,aAA3B,EAA0C;AAClD,UAAIK,gBAAgBF,aAAaG,OAAb,CAAqBF,gBAArB,CAApB;AACA,UAAIC,kBAAkB,IAAtB,EAA4B;AAC1BA,wBAAgBJ,eAAeK,OAAf,CAAuBF,gBAAvB,CAAhB;AACA,YAAIC,kBAAkB,IAAtB,EAA4B;AAC1BA,0BAAgBL,aAAhB;AACD;AACF;AACD,aAAOK,aAAP;AACD,KAlBM;;AAoBPE,iBAAa,qBAASC,KAAT,EAAgB;AAC3BA,YAAMC,cAAN;AACAzJ,QAAE,WAAF,EAAe0J,WAAf,CAA2B,IAA3B;AACA1J,QAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACD,KAxBM;AAyBPC,uBAAmB,2BAAUJ,KAAV,EAAiB;AAClCA,YAAMC,cAAN;AACAzJ,QAAE,qBAAF,EAAyB2J,KAAzB,CAA+B,MAA/B;AACD,KA5BM;AA6BPE,cAAU,kBAAU5B,QAAV,EAAoBuB,KAApB,EAA2B;AAAA;;AACnCA,YAAMC,cAAN;AACA;AACA,UAAIK,mBAAmB7B,QAAvB;AACA,UAAI8B,QAAQP,MAAMQ,MAAN,CAAaD,KAAzB;AACA,UAAIE,OAAO,IAAIC,QAAJ,EAAX;AACAD,WAAKE,MAAL,CAAY,IAAZ,EAAkBJ,MAAM,CAAN,CAAlB;AACA;AACA,UAAIK,MAAMlL,MAAV;AACA;AACA,UAAImL,aAAa,cAAYP,gBAAZ,GAA6B,MAA9C;AACA,UAAIQ,UAAUF,MAAIC,UAAlB;;AAGA,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyBL,IAAzB,EAA+B;AACzBQ,iBAAS;AACR,0BAAgB;AADR;AADgB,OAA/B,EAIOC,IAJP,CAIY,UAACC,QAAD,EAAc;AAClB;;AAEA;AACE,cAAKC,KAAL,CAAWd,gBAAX;AACF;;AAGP,OAZD,EAYG,UAACa,QAAD,EAAc;AACT;AACA;AACA;AACA;AACP,OAjBD;AAmBD,KA9DM;AA+DPE,wBAAoB,4BAASC,eAAT,EAA0B;AAC5CtC,cAAQC,GAAR,CAAY,8BAAZ;AACAD,cAAQC,GAAR,CAAY,qBAAqBqC,eAAjC;AACA,WAAKC,iBAAL,CAAuBD,eAAvB;AACD,KAnEM;AAoEPE,kBAAc,sBAAUxB,KAAV,EAAiB;AAC5BA,YAAMC,cAAN;AACAzJ,QAAE,OAAF,EAAWiL,IAAX,CAAgB,oBAAhB,EAAsChL,IAAtC,CAA2C,MAA3C,EAAmD,UAAnD;AACA,WAAKoI,mBAAL,GAA2B,KAA3B;AAEF,KAzEM;AA0EP6C,kBAAc,sBAAU1B,KAAV,EAAiB;AAC5BA,YAAMC,cAAN;AACAzJ,QAAE,OAAF,EAAWiL,IAAX,CAAgB,wBAAhB,EAA0ChL,IAA1C,CAA+C,MAA/C,EAAuD,MAAvD;AACA,WAAKoI,mBAAL,GAA2B,IAA3B;AACF,KA9EM;AA+EPuC,WAAO,eAAU3C,QAAV,EAAoBuB,KAApB,EAA2B;AAAA;;AAE5B;AACA,UAAIM,mBAAmB7B,QAAvB;AACA;AACA,UAAImC,MAAMlL,MAAV;;AAEA;AACA,UAAImL,aAAa,cAAYP,gBAAZ,GAA6B,OAA9C;AACA,UAAIqB,WAAWf,MAAIC,UAAnB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAeD,QAAf,EAAyBT,IAAzB,CAA8B,UAACC,QAAD,EAAc;AACxC;AACA,eAAK7D,SAAL,GAAiB6D,QAAjB;AACA,eAAKU,SAAL;AAEH,OALD,EAKG,UAACV,QAAD,EAAc;AACb;AACA;AACH,OARD;AASL,KAnGM;AAoGPU,eAAW,qBAAY;;AAEjB,UAAIpB,OAAO,EAAX;;AAFiB;AAAA;AAAA;;AAAA;AAIjB,6BAAe,KAAKnD,SAAL,CAAetF,IAA9B,8HAAoC;AAAA,cAA3BwC,EAA2B;;AACxB,cAAIsB,OAAOtB,EAAX;AACA,cAAIsH,WAAWtH,EAAf;AACA,cAAIuH,UAAU,EAACD,kBAAD,EAAd;AACArB,eAAKuB,IAAL,CAAUF,QAAV;AACA,eAAKvE,YAAL,GAAoB,IAApB;AACX;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYjB,WAAK7C,SAAL,GAAiB+F,IAAjB;AACL,KAjHM;AAkHPwB,cAAU,kBAAUxD,QAAV,EAAoBqD,QAApB,EAA8B9B,KAA9B,EAAqC;AAAA;;AAC3C;AACA;AACA,UAAIM,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACAO,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACA,UAAI1F,QAAJ;AACAA,iBAAWsH,mBAAmBJ,QAAnB,CAAX;AACA;AACA;AACA,UAAIlB,MAAMlL,MAAV;AACA,UAAI+K,OAAO,cAAYH,gBAAZ,GAA6B,OAA7B,GAAqC1F,QAAhD;AACA,UAAIkG,UAAUF,MAAIH,IAAlB;;AAEA,WAAKM,KAAL,CAAWoB,MAAX,CAAkBrB,OAAlB,EAA2BI,IAA3B,CAAgC,UAACC,QAAD,EAAc;AACxC;AACA;AACA,eAAK5D,YAAL,GAAoB,KAApB;AAEH,OALH,EAKK,UAAC4D,QAAD,EAAc;AACb;AACA;AACH,OARH;AAUH,KA1IM;AA2IPiB,uBAAmB,2BAAU3D,QAAV,EAAoBuB,KAApB,EAA2B;AAAA;;AAE5CA,YAAMC,cAAN;AACA;AACA,UAAIK,mBAAmB7B,QAAvB;AACA,UAAI8B,QAAQP,MAAMQ,MAAN,CAAaD,KAAzB;AACA,UAAIE,OAAO,IAAIC,QAAJ,EAAX;AACAD,WAAKE,MAAL,CAAY,YAAZ,EAA0BJ,MAAM,CAAN,CAA1B;AACA;AACA,UAAIK,MAAM,gCAAV;AACA,UAAIC,aAAa,cAAYP,gBAAZ,GAA6B,cAA9C;AACA,UAAIQ,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyBL,IAAzB,EAAgCS,IAAhC,CAAqC,UAACC,QAAD,EAAc;AAC3C;AACA,eAAKkB,cAAL,CAAoB/B,gBAApB;AAEP,OAJD,EAIG,UAACa,QAAD,EAAc;AACT;AACA;AACA;AACP,OARD;AAUD,KAlKM;AAmKPkB,oBAAgB,wBAAU5D,QAAV,EAAoBuB,KAApB,EAA2B;AAAA;;AAErC;AACA,UAAIM,mBAAmB7B,QAAvB;AACA;AACA;AACA,UAAImC,MAAMlL,MAAV;AACA,UAAImL,aAAa,cAAYP,gBAAZ,GAA6B,cAA9C;AACA,UAAIqB,WAAWf,MAAIC,UAAnB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAeD,QAAf,EAAyBT,IAAzB,CAA8B,UAACC,QAAD,EAAc;AACxC;AACA,eAAKtD,kBAAL,GAA0BsD,QAA1B;AACA,eAAKmB,kBAAL;AAEH,OALD,EAKG,UAACnB,QAAD,EAAc;AACb;AACA;AACH,OARD;AASL,KAtLM;AAuLPmB,wBAAoB,8BAAY;AAC1B,UAAI/B,QAAQ,EAAZ;;AAD0B;AAAA;AAAA;;AAAA;AAG1B,8BAAuB,KAAK1C,kBAAL,CAAwB7F,IAA/C,mIAAqD;AAAA,cAA5CuK,UAA4C;;AACzC,cAAIzG,OAAOyG,UAAX;AACAhC,gBAAMyB,IAAN,CAAWlG,IAAX;AACA,eAAK0B,qBAAL,GAA6B,IAA7B;AACX;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAS1B,WAAKW,kBAAL,GAA0B,EAACoC,YAAD,EAA1B;AACL,KAjMM;AAkMPiC,sBAAkB,0BAAU/D,QAAV,EAAoBqD,QAApB,EAA8B9B,KAA9B,EAAqC;AAAA;;AACnD,UAAIyC,oBAAmBzC,MAAMQ,MAA7B;AACA;AACA,UAAIF,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACAO,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACA,UAAI1F,QAAJ;AACAA,iBAAWsH,mBAAmBJ,QAAnB,CAAX;AACA;AACA,UAAIlB,MAAMlL,MAAV;AACA;AACA,UAAI+K,OAAO,cAAYH,gBAAZ,GAA6B,eAA7B,GAA6C1F,QAAxD;AACA,UAAIkG,UAAUF,MAAIH,IAAlB;;AAGA,WAAKM,KAAL,CAAWoB,MAAX,CAAkBrB,OAAlB,EAA2BI,IAA3B,CAAgC,UAACC,QAAD,EAAc;;AAE5C,eAAKkB,cAAL,CAAoB/B,gBAApB;AAED,OAJD,EAIG,UAACa,QAAD,EAAc;AACjB;AACE;AACD,OAPD;AASH,KA1NM;AA2NPuB,2BAAuB,+BAASC,EAAT,EAAa3C,KAAb,EAAoB;;AAEzCA,YAAMC,cAAN;AACAjB,cAAQC,GAAR,CAAY,mBAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKlF,iBAAjB;AACA,UAAI6I,uBAAJ;AACA,UAAIC,sBAAJ;AACA,UAAIC,YAAJ;AACA,UAAIlG,cAAJ;AACA,UAAImG,uBAAuBJ,EAA3B;AACA,WAAK1I,mBAAL,GAA4B8I,oBAA5B;AACA,WAAKhJ,iBAAL,GAAyB,EAAzB;;AAEAvD,QAAE,aAAF,EAAiBwM,GAAjB,CAAqB,EAArB;;AAbyC;AAAA;AAAA;;AAAA;AAezC,8BAAkB,KAAKnG,WAAvB,mIAAoC;AAAA,cAA1BoG,IAA0B;;;AAElC,cAAIA,KAAKN,EAAL,KAAYI,oBAAhB,EAAsC;AACpC;AACA,iBAAKhJ,iBAAL,CAAuBiI,IAAvB,CAA4BiB,IAA5B;AACAjE,oBAAQC,GAAR,CAAY,wBAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKlF,iBAAjB;AACA,iBAAKG,qBAAL,GAA6B+I,KAAKC,sBAAL,CAA4BC,UAA5B,GAAyC,GAAzC,GAA+CF,KAAKC,sBAAL,CAA4BE,SAAxG;AACA;AACA;AACA;AACD;AAEF;AA5BwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BzC,UAAI,KAAKrJ,iBAAL,CAAuB3B,MAAvB,IAAiC,CAArC,EAAwC;AACtC;AACD,OAFD,MAEO;;AAEL5B,UAAE,yBAAF,EAA6B2J,KAA7B,CAAmC,MAAnC;;AAEA,YAAI,KAAKpD,IAAL,KAAc,EAAlB,EAAsB;AAClB;AACA;AACA,cAAI,KAAKd,OAAL,KAAiB,IAArB,EAA2B;AACzBzF,cAAE,yBAAF,EAA6B2J,KAA7B,CAAmC,MAAnC;AACA;AACA,iBAAKkD,8BAAL;AACD,WAJD,MAIQ;AACN7M,cAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACD;AAEJ,SAXD,MAWO;AACH;AACA3J,YAAE,yBAAF,EAA6B2J,KAA7B,CAAmC,MAAnC;AACH;AACF;AACF,KA/QM;AAgRPkD,oCAAgC,0CAAW;AAAA;AAAA;AAAA;;AAAA;;AAEvC,8BAAoB,KAAKhG,oBAAzB,mIAA+C;AAAA,cAAtCiG,OAAsC;AAAA;AAAA;AAAA;;AAAA;;AAEvC,kCAAuBA,QAAQC,UAA/B,mIAA2C;AAAA,kBAAlCC,UAAkC;;;AAErC,kBAAIvJ,sBAAsBwJ,SAAS,KAAKxJ,mBAAd,CAA1B;;AAEA,kBAAIuJ,WAAWE,YAAX,KAA4BzJ,mBAAhC,EAAqD;AAC/C,qBAAK8D,4BAAL,GAAoC,IAApC;AACA;AACL,eAHD,MAGO;AACD,qBAAKA,4BAAL,GAAoC,KAApC;AACL;AACN;AAZsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa9C;AAfsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB1C,KAjSM;AAkSP4F,WAAO,eAAS3D,KAAT,EAAgB;AACrBA,YAAMC,cAAN;AACA;AACA,WAAKnG,eAAL,GAAuB,IAAvB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKG,qBAAL,GAA6B,EAA7B;;AAEA8E,cAAQC,GAAR,CAAY,0BAA0B,KAAKnF,eAA3C;AACAtD,QAAE,QAAF,EAAYwM,GAAZ,CAAgB,EAAhB;AACAxM,QAAE,cAAF,EAAkBwM,GAAlB,CAAsB,EAAtB;AACAxM,QAAE,WAAF,EAAewM,GAAf,CAAmB,EAAnB;AACAxM,QAAE,WAAF,EAAewM,GAAf,CAAmB,EAAnB;AACAxM,QAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACD,KA/SM;AAgTPyD,uBAAmB,2BAAS5D,KAAT,EAAgB;AACjCxJ,QAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACD,KAlTM;AAmTP0D,+BAA2B,mCAAUf,YAAV,EAAwB;AAAA;;AAEjD,UAAIgB,SAAS,+BAAb;AACA,UAAIjD,aAAa,kBAAgBiC,YAAjC;;AAEA,UAAInB,WAAWmC,SAASjD,UAAxB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAeD,QAAf,EAAyBT,IAAzB,CAA8B,UAACC,QAAD,EAAc;AAC1C;AACA,eAAK7E,sBAAL,GAA8B6E,QAA9B;AACAnC,gBAAQC,GAAR,CAAY,6BAAZ;AACAD,gBAAQC,GAAR,CAAY,OAAK3C,sBAAjB;AACA,YAAI1C,gBAAgB,OAAK0C,sBAAL,CAA4BtE,IAA5B,CAAiC+L,cAArD;AACA/E,gBAAQC,GAAR,CAAY,mBAAmBrF,aAA/B;AACA,YAAIoK,QAAQ,IAAIC,IAAJ,EAAZ;AACAD,gBAAQ,OAAKE,UAAL,CAAgBF,KAAhB,CAAR;AACAhF,gBAAQC,GAAR,CAAY,WAAW+E,KAAvB;AACA,YAAIpK,gBAAgBoK,KAApB,EAA2B;AACzB,iBAAKG,6BAAL,CAAmCrB,YAAnC,EAAiDlJ,aAAjD;AACD;AAEF,OAdD;AAeD,KAzUM;AA0UPwK,6BAAyB,iCAASZ,UAAT,EAAqB;AAC5C,aAAOA,WAAWa,QAAX,IAAuB,IAA9B;AACD,KA5UM;AA6UPC,oBAAgB,wBAASd,UAAT,EAAqB;AACnC,aAAOA,WAAWe,aAAlB;AACD,KA/UM;AAgVPJ,mCAA+B,uCAASrB,YAAT,EAAuBlJ,aAAvB,EAAsC;AAAA;AAAA;AAAA;;AAAA;;AAEnE,8BAAwB,KAAKiD,WAA7B,mIAA0C;AAAA,cAAhC2G,UAAgC;;AACxCxE,kBAAQC,GAAR,CAAY,+BAAZ;AACA,cAAIuE,WAAWb,EAAX,IAAiBG,YAArB,EAAmC;AACjC9D,oBAAQC,GAAR,CAAY,mCAAZ;AACAuE,uBAAWO,cAAX,GAA4BnK,aAA5B;AACAoF,oBAAQC,GAAR,CAAY,oDAAoDuE,WAAWO,cAA3E;AACA/E,oBAAQC,GAAR,CAAY,wCAAwCrF,aAApD;AACAoF,oBAAQC,GAAR,CAAY,YAAZ;AACAD,oBAAQC,GAAR,CAAYuE,UAAZ;AACAxE,oBAAQC,GAAR,CAAY,2BAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKpC,WAAjB;AACA;AACD;AACF;AAfkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBnEmC,cAAQC,GAAR,CAAY,kBAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKpC,WAAjB;AACD,KAlWM;AAmWP2H,sBAAkB,0BAAU7B,EAAV,EAAc3C,KAAd,EAAqB;AAAA;;AACrC,UAAIxB,SAASmE,EAAb;AACA,UAAI/I,gBAAgBpD,EAAE,OAAF,EAAWwM,GAAX,GAAiByB,IAAjB,EAApB;AACA,UAAIC,sBAAsB,EAA1B;AACA,UAAIC,sBAAsBnO,EAAE,eAAF,EAAmBiL,IAAnB,CAAwB,eAAxB,EAAyCuB,GAAzC,EAA1B;AACA,UAAI2B,wBAAwB,WAA5B,EAAyC;AACvC,aAAKhI,qBAAL,GAA6B,IAA7B;AACD,OAFD,MAEO;AACL,aAAKA,qBAAL,GAA6B,KAA7B;AACD;;AAED,UAAIxB,cAAc,KAAKwB,qBAAvB;AACA+H,4BAAsB,EAAClG,cAAD,EAASrD,wBAAT,EAAsBvB,4BAAtB,EAAtB;AACA;AACA,UAAIgH,MAAMlL,MAAV;AACA,UAAIiM,WAAWf,GAAf;;AAEA,WAAKG,KAAL,CAAWC,IAAX,CAAgBW,QAAhB,EAA0B+C,mBAA1B,EAAgDxD,IAAhD,CAAqD,UAACC,QAAD,EAAc;AAC3D;AACA,eAAKxE,qBAAL,GAA6B,IAA7B;AACA,eAAO,OAAKA,qBAAZ;AACH,OAJL,EAIO,UAACwE,QAAD,EAAc;AACb;AACA,eAAKxE,qBAAL,GAA6B,KAA7B;AACA,eAAO,OAAKA,qBAAZ;AACH,OARL;AASD,KA7XM;AA8XPiI,iBAAa,qBAAU5E,KAAV,EAAiB;AAAA;;AAC5B,UAAIxB,SAAS,KAAKA,MAAlB,CAD4B,CACF;AAC1B,UAAI8B,mBAAmB,KAAK7B,QAA5B;AACAO,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACA,UAAIzG,OAAOrD,EAAE,aAAF,EAAiBwM,GAAjB,EAAX;AACA,UAAI6B,iBAAiB,EAArB;AACA,UAAIb,QAAQ,IAAIC,IAAJ,EAAZ;AACA,UAAIa,KAAKd,MAAMe,OAAN,EAAT;AACA,UAAIC,KAAKhB,MAAMiB,QAAN,KAAiB,CAA1B,CAR4B,CAQC;AAC7B,UAAIC,OAAO,KAAK3G,QAAhB;AACA,UAAI4G,2BAA2B,KAAKlL,mBAApC;AACA,UAAImL,sBAAsB,KAAKhL,yBAA/B;AACA4E,cAAQC,GAAR,CAAY,yBAAyBmG,mBAArC;AACA,UAAIC,kBAAkB,KAAKnL,qBAA3B;AACA,UAAIoL,cAAc7B,SAASjF,MAAT,CAAlB;AACA,UAAI+G,eAAe,KAAKzJ,IAAxB;AACA,UAAI0J,eAAJ;AACA,UAAI,KAAKzI,IAAL,KAAc,SAAlB,EAA6B;AACzByI,0BAAkB,IAAlB;AACH,OAFD,MAEO;AACHA,0BAAkB,KAAlB;AACH;;AAED,UAAIC,OAAOzB,MAAM0B,WAAN,EAAX;AACA,UAAGZ,KAAG,EAAN,EAAS;AACLA,aAAG,MAAIA,EAAP;AACH;AACD,UAAGE,KAAG,EAAN,EAAS;AACLA,aAAG,MAAIA,EAAP;AACH;;AAEH,UAAIW,SAASb,KAAG,GAAH,GAAOE,EAAP,GAAU,GAAV,GAAcS,IAA3B;AACAZ,uBAAiB,EAACQ,gCAAD,EAAkBD,wCAAlB,EAAuC9E,kCAAvC,EAAyDiF,0BAAzD,EAAuE1L,UAAvE,EAA6E2L,gCAA7E,EAAjB,CAhC8B,CAgCmF;AACjH;AACA;AACA,UAAI5E,MAAMlL,MAAV;AACA,UAAImL,aAAa,WAAjB;AACA,UAAIC,UAAUF,MAAIC,UAAlB;;AAEG,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyB+D,cAAzB,EAA0C3D,IAA1C,CAA+C,UAACC,QAAD,EAAc;AACtD;AACA,eAAKyE,SAAL,CAAe,YAAY;AACzB,cAAI,KAAK7I,IAAL,KAAc,SAAlB,EAA6B;AAC3B,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,mBAAO,KAAKA,gBAAZ;AAED,WALD,MAKO,IAAI,KAAK+B,IAAL,KAAc,YAAlB,EAAgC;AACrC,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,mBAAO,KAAKA,gBAAZ;AAED,WALM,MAKA;AACL;AACD;AAEF,SAfD;AAgBP,OAlBA,EAkBE,UAACmG,QAAD,EAAc;AACT;AACA,eAAKnG,gBAAL,GAAwB,KAAxB;AACA,eAAKsE,KAAL,CAAW,kBAAX,EAA8B,OAAKtE,gBAAnC;AACA,eAAO,OAAKA,gBAAZ;AACP,OAvBA;AAyBF,KA9bM;;AAgcP6K,iBAAa,qBAAUlD,EAAV,EAAcG,YAAd,EAA4BlG,cAA5B,EAA4C0E,eAA5C,EAA6D5D,WAA7D,EAA0E7D,IAA1E,EAAgFiM,aAAhF,EAA+F9F,KAA/F,EAAsG;AAAA;;AAC7G;AACAA,YAAMC,cAAN;;AAEA,UAAIkF,2BAA2B1B,SAASX,YAAT,CAA/B;AACA,UAAIuC,kBAAkBzI,cAAtB;AACA;AACA,UAAI2I,eAAe7H,WAAnB;AACA,UAAI4C,mBAAmBgB,eAAvB;AACAtC,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACA,UAAIyF,SAAJ;AACA,UAAI/B,QAAQ,IAAIC,IAAJ,EAAZ;AACA,UAAI8B,SAAJ;AACA/G,cAAQC,GAAR,CAAY,gBAAgB0D,EAA5B;AACAoD,kBAAY/B,MAAMgC,WAAN,EAAZ;;AAEA,UAAInM,OAAOA,IAAX;;AAEA,UAAI2L,kBAAkBM,aAAtB;;AAEA,UAAIG,UAAU,EAACd,kDAAD,EAA2BE,gCAA3B,EAA4C/E,kCAA5C,EAA8DiF,0BAA9D,EAA4E1L,UAA5E,EAAkF2L,gCAAlF,EAAmGO,oBAAnG,EAAd;;AAGJ;AACA;AACA,UAAInF,MAAMlL,MAAV;AACA,UAAImL,aAAa,cAAY8B,EAA7B;AACA,UAAI7B,UAAUF,MAAIC,UAAlB;;AAGA,WAAKE,KAAL,CAAWmF,GAAX,CAAepF,OAAf,EAAwBmF,OAAxB,EAAiC/E,IAAjC,CAAsC,UAACC,QAAD,EAAc;AAC5C;;AAEJ,gBAAKyE,SAAL,CAAe,YAAY;AACvB,eAAKxH,MAAL,GAAc,KAAd;AACA,eAAK+H,cAAL;AACA;AACA,iBAAO,KAAK/H,MAAZ;AACH,SALD;AAOH,OAVD,EAUG,UAAC+C,QAAD,EAAc;AACT;AACA;AACA;AACA;AACA,gBAAK/C,MAAL,GAAc,IAAd;AACA,eAAO,QAAKA,MAAZ;AACP,OAjBD;AAqBD,KAnfM;AAofPgI,wBAAoB,4BAAUzD,EAAV,EAAcrB,eAAd,EAA+B5D,WAA/B,EAA4CsC,KAA5C,EAAmD;AAAA;;AAErE,UAAIxB,SAAS,KAAKA,MAAlB,CAFqE,CAE3C;AAC1B,UAAI3E,OAAOrD,EAAE,aAAF,EAAiBwM,GAAjB,EAAX;AACAhE,cAAQC,GAAR,CAAY,MAAZ;AACAD,cAAQC,GAAR,CAAYpF,IAAZ;AACA,UAAIgL,iBAAiB,EAArB;AACA,UAAIW,eAAJ;AACA,UAAIL,wBAAJ;AACA,UAAIkB,cAAJ;AACA,UAAIC,aAAJ;AACA,UAAIjB,eAAJ;AACA,UAAIC,WAAJ;AACA,UAAIC,eAAe7H,WAAnB;AACA,UAAIiF,KAAKA,EAAT;AACA,UAAIrC,gBAAJ;;AAGA,UAAI,KAAKvD,IAAL,KAAc,SAAlB,EAA6B;;AAEzByI,0BAAkB,IAAlB;;AAEA,YAAI,KAAKvL,mBAAL,KAA6B,EAAjC,EAAqC;AACnCkL,qCAA2BxC,EAA3B;AACA3D,kBAAQC,GAAR,CAAY,6BAA6BkG,wBAAzC;AAED,SAJD,MAIO;AACLA,qCAA2B,KAAKlL,mBAAhC;AACA+E,kBAAQC,GAAR,CAAY,6BAA6BkG,wBAAzC;AACD;;AAED,YAAI,KAAKjL,qBAAL,KAA+B,EAAnC,EAAuC;AACjCmL,4BAAkB7O,EAAE,iBAAF,EAAqBwM,GAArB,GAA2ByB,IAA3B,EAAlB;AACAzF,kBAAQC,GAAR,CAAY,oBAAoBoG,eAAhC;AACL,SAHD,MAGO;AACDA,4BAAkB,KAAKnL,qBAAvB;AACA8E,kBAAQC,GAAR,CAAY,oBAAoBoG,eAAhC;AACL;;AAEDgB,yBAAiB,KAAKlM,8BAAtB;AACAmM,wBAAgB,KAAKtM,6BAArB;AACAsL,sBAAc7B,SAASjF,MAAT,CAAd;AACA+G,uBAAe7H,WAAf;AACAsB,gBAAQC,GAAR,CAAY,iBAAiBsG,YAA7B;AACAjF,2BAAmBgB,eAAnB;AACAtC,gBAAQC,GAAR,CAAY,qBAAqBqB,gBAAjC;AAEH,OA7BD,MA6BO;;AAEHkF,0BAAkB,KAAlB;AACAL,mCAA2B,KAAK3G,MAAhC;AACA6G,0BAAkB,KAAKvJ,IAAvB;AACA;AACAwE,2BAAmBgB,eAAnB;AACAiE,uBAAe7H,WAAf;AACH;;AAEDyH,iCAA2B1B,SAAS0B,wBAAT,CAA3B;AACAN,uBAAiB,EAACM,kDAAD,EAA2BE,gCAA3B,EAA4C/E,kCAA5C,EAA8DiF,0BAA9D,EAA4E1L,UAA5E,EAAkF2L,gCAAlF,EAAjB,CA1DqE,CA0DgD;AACrHxG,cAAQC,GAAR,CAAY,gBAAZ;AACAD,cAAQC,GAAR,CAAY4F,cAAZ;AACA;AACA,UAAIjE,MAAMlL,MAAV;AACA;AACA,UAAImL,aAAa,WAAjB;AACA,UAAIC,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyB+D,cAAzB,EAAyC3D,IAAzC,CAA8C,UAACC,QAAD,EAAc;AACpD;AACA,gBAAKyE,SAAL,CAAe,YAAY;AACzB,cAAI,KAAK7I,IAAL,KAAc,SAAlB,EAA6B;AAC3B,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,iBAAK+C,4BAAL,GAAoC,IAApC;AACAvH,cAAE,yBAAF,EAA6B2J,KAA7B,CAAmC,MAAnC;AACAnB,oBAAQC,GAAR,CAAY,kDAAZ;AACAzI,cAAE,qBAAF,EAAyB2J,KAAzB,CAA+B,MAA/B;;AAEA,iBAAKgG,cAAL;AACA,mBAAO,KAAKpI,4BAAL,EAAmC,KAAK/C,gBAA/C;AAED,WAXD,MAWO,IAAI,KAAK+B,IAAL,KAAc,YAAlB,EAAgC;;AAErC,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,iBAAK+C,4BAAL,GAAoC,IAApC;AACAvH,cAAE,yBAAF,EAA6B2J,KAA7B,CAAmC,MAAnC;AACAnB,oBAAQC,GAAR,CAAY,kDAAZ;AACAzI,cAAE,qBAAF,EAAyB2J,KAAzB,CAA+B,MAA/B;AACA,iBAAKgG,cAAL;AACA,mBAAO,KAAKpI,4BAAL,EAAmC,KAAK/C,gBAA/C;AAED,WAXM,MAWA;AACL;AACD;AACF,SA1BD;AA6BP,OA/BD,EA+BG,UAACmG,QAAD,EAAc;AACT;AACA;AACA;AACA;AACA,gBAAKpD,4BAAL,GAAoC,KAApC;AACA,gBAAK/C,gBAAL,GAAwB,KAAxB;AACA,gBAAKsE,KAAL,CAAW,kBAAX,EAA8B,QAAKtE,gBAAnC;AACA,eAAO,QAAK+C,4BAAL,EAAmC,QAAK/C,gBAA/C;AAEP,OAzCD;AA0CD,KAjmBM;AAkmBPuL,iBAAa,qBAAUC,aAAV,EAAyB7D,EAAzB,EAA6BrB,eAA7B,EAA8C5D,WAA9C,EAA2DsC,KAA3D,EAAkE;AAAA;;AAE7E,UAAIxB,SAAS,KAAKA,MAAlB,CAF6E,CAEnD;AAC1B,UAAIiI,aAAa,iBAAgBD,aAAjC;AACAxH,cAAQC,GAAR,CAAYwH,UAAZ;AACA,UAAI5M,OAAOrD,EAAEiQ,UAAF,EAAczD,GAAd,EAAX;AACAhE,cAAQC,GAAR,CAAY,MAAZ;AACAD,cAAQC,GAAR,CAAYpF,IAAZ;AACA,UAAIgL,iBAAiB,EAArB;AACA,UAAIW,eAAJ;AACA,UAAIL,wBAAJ;AACA,UAAIkB,cAAJ;AACA,UAAIC,aAAJ;AACA,UAAIjB,eAAJ;AACA,UAAIC,WAAJ;AACA,UAAIC,eAAe7H,WAAnB;AACA,UAAIiF,KAAKA,EAAT;AACA,UAAIrC,gBAAJ;;AAGA,UAAI,KAAKvD,IAAL,KAAc,SAAlB,EAA6B;;AAEzByI,0BAAkB,IAAlB;;AAEA,YAAI,KAAKvL,mBAAL,KAA6B,EAAjC,EAAqC;AACnCkL,qCAA2BxC,EAA3B;AACA3D,kBAAQC,GAAR,CAAY,6BAA6BkG,wBAAzC;AAED,SAJD,MAIO;AACLA,qCAA2B,KAAKlL,mBAAhC;AACA+E,kBAAQC,GAAR,CAAY,6BAA6BkG,wBAAzC;AACD;;AAED,YAAI,KAAKjL,qBAAL,KAA+B,EAAnC,EAAuC;AACjCmL,4BAAkB7O,EAAE,iBAAF,EAAqBwM,GAArB,GAA2ByB,IAA3B,EAAlB;AACAzF,kBAAQC,GAAR,CAAY,oBAAoBoG,eAAhC;AACL,SAHD,MAGO;AACDA,4BAAkB,KAAKnL,qBAAvB;AACA8E,kBAAQC,GAAR,CAAY,oBAAoBoG,eAAhC;AACL;;AAEDgB,yBAAiB,KAAKlM,8BAAtB;AACAmM,wBAAgB,KAAKtM,6BAArB;AACAsL,sBAAc7B,SAASjF,MAAT,CAAd;AACA+G,uBAAe7H,WAAf;AACAsB,gBAAQC,GAAR,CAAY,iBAAiBsG,YAA7B;AACAjF,2BAAmBgB,eAAnB;AACAtC,gBAAQC,GAAR,CAAY,qBAAqBqB,gBAAjC;AAEH,OA7BD,MA6BO;;AAEHkF,0BAAkB,KAAlB;AACAL,mCAA2B,KAAK3G,MAAhC;AACA6G,0BAAkB,KAAKvJ,IAAvB;AACA;AACAwE,2BAAmBgB,eAAnB;AACAtC,gBAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACAiF,uBAAe7H,WAAf;AACAsB,gBAAQC,GAAR,CAAY,kBAAkBsG,YAA9B;AACH;;AAEDJ,iCAA2B1B,SAAS0B,wBAAT,CAA3B;AACAN,uBAAiB,EAACM,kDAAD,EAA2BE,gCAA3B,EAA4C/E,kCAA5C,EAA8DiF,0BAA9D,EAA4E1L,UAA5E,EAAkF2L,gCAAlF,EAAjB,CA9D6E,CA8DwC;AACrHxG,cAAQC,GAAR,CAAY,gBAAZ;AACAD,cAAQC,GAAR,CAAY4F,cAAZ;AACA;AACA;AACA,UAAIjE,MAAMlL,MAAV;AACA,UAAImL,aAAa,WAAjB;AACA,UAAIC,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyB+D,cAAzB,EAAyC3D,IAAzC,CAA8C,UAACC,QAAD,EAAc;AACpD;AACA,gBAAKyE,SAAL,CAAe,YAAY;AACzB,cAAI,KAAK7I,IAAL,KAAc,SAAlB,EAA6B;AAC3B,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,iBAAK+C,4BAAL,GAAoC,IAApC;;AAEA;AACAvH,cAAE,8BAAF,EAAkCwM,GAAlC,CAAsC,EAAtC;AACA,iBAAKmD,cAAL;AACA,mBAAO,KAAKpI,4BAAL,EAAmC,KAAK/C,gBAA/C;AAED,WAVD,MAUO,IAAI,KAAK+B,IAAL,KAAc,YAAlB,EAAgC;;AAErC,iBAAK/B,gBAAL,GAAwB,IAAxB;AACA,iBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;AACA,iBAAK+C,4BAAL,GAAoC,IAApC;AACA;AACAvH,cAAE,8BAAF,EAAkCwM,GAAlC,CAAsC,EAAtC;AACA,iBAAKmD,cAAL;AACA,mBAAO,KAAKpI,4BAAL,EAAmC,KAAK/C,gBAA/C;AAED,WAVM,MAUA;AACL;AACD;AACF,SAxBD;AA2BP,OA7BD,EA6BG,UAACmG,QAAD,EAAc;AACT;AACA;AACA;AACA;AACA,gBAAKpD,4BAAL,GAAoC,KAApC;AACA,gBAAK/C,gBAAL,GAAwB,KAAxB;AACA,gBAAKsE,KAAL,CAAW,kBAAX,EAA8B,QAAKtE,gBAAnC;AACA,eAAO,QAAK+C,4BAAL,EAAmC,QAAK/C,gBAA/C;AAEP,OAvCD;AAwCD,KAjtBM;AAktBP0L,mBAAe,uBAASjI,QAAT,EAAmBuB,KAAnB,EAA0B;AAAA;;AAEvC,UAAI2G,iBAAiB,EAArB;AACA,UAAI7K,OAAOtF,EAAE,OAAF,EAAWwM,GAAX,GAAiByB,IAAjB,EAAX;AACAzF,cAAQC,GAAR,CAAY,cAAcnD,IAA1B;AACA,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKwD,KAAL,CAAW,MAAX,EAAmB,KAAKxD,IAAxB;AACA;AACAkD,cAAQC,GAAR,CAAY,UAAU,KAAKnD,IAA3B;AACA,UAAInB,QAAQ,KAAKA,KAAjB;AACA,WAAK8D,QAAL,GAAgB,KAAKM,QAAL,CAAc,UAAd,EAA0B,KAAKN,QAA/B,CAAhB;AACAO,cAAQC,GAAR,CAAY,6BAA6B,KAAKR,QAA9C;;AAEA,UAAImI,uBAAuB,KAAKrL,kBAAhC;AACAyD,cAAQC,GAAR,CAAY,0BAA0B2H,oBAAtC;;AAEA,UAAIC,eAAerQ,EAAE,wDAAF,EAA4DwM,GAA5D,EAAnB;AACA,UAAI8D,sBAAoBrD,SAASoD,YAAT,CAAxB;AACA7H,cAAQC,GAAR,CAAY,yBAAyB6H,mBAArC;AACA9H,cAAQC,GAAR,CAAY,+BAA+B8H,MAAMD,mBAAN,CAA3C;AACA,UAAGC,MAAMD,mBAAN,CAAH,EAA+B;AAC3BA,8BAAoB,CAApB;AAEH;AACD;AACA;AACAH,uBAAiB,EAAC7K,UAAD,EAAOnB,YAAP,EAAciM,0CAAd,EAAoCC,cAAcC,mBAAlD,EAAjB,CA1BuC,CA0BkD;;AAEzF9H,cAAQC,GAAR,CAAY0H,cAAZ;;AAGA;AACA;AACA,UAAIK,SAAStR,MAAb;;AAEA,UAAImL,aAAa,cAAapC,QAA9B;AACA,UAAImC,MAAMoG,SAAOnG,UAAjB;;AAGA,WAAKE,KAAL,CAAWmF,GAAX,CAAetF,GAAf,EAAoB+F,cAApB,EAAqCzF,IAArC,CAA0C,UAACC,QAAD,EAAc;;AAEhD;AACA,gBAAKyE,SAAL,CAAe,YAAY;AACzB5G,kBAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACA,eAAKwI,UAAL,CAAgB,KAAKxI,QAArB;AACD,SAHD;AAIP,OAPD,EAOG,UAAC0C,QAAD,EAAc;AACT;AACAnC,gBAAQC,GAAR,CAAY,0BAA0BkC,SAAS+F,MAA/C;AACP,OAVD;AAYD,KArwBM;AAswBPC,mBAAe,uBAAS1I,QAAT,EAAmBuB,KAAnB,EAA0B;AAAA;;AAEvC;AACA;;AAEA,UAAI2G,iBAAiB,EAArB;AACA;AACA,WAAK7K,IAAL,GAAY,KAAKiD,QAAL,CAAc,MAAd,EAAsB,KAAKjD,IAA3B,CAAZ;AACA,UAAIA,OAAO,KAAKA,IAAhB;AACAkD,cAAQC,GAAR,CAAY,UAAU,KAAKnD,IAA3B;AACA,WAAK2C,QAAL,GAAgBA,QAAhB;AACAO,cAAQC,GAAR,CAAY,cAAc,KAAKR,QAA/B;;AAEA,WAAKa,KAAL,CAAW,UAAX,EAAsB,KAAKb,QAA3B;;AAEA;;AAEA,UAAI2I,cAAc,KAAlB;AACA,UAAIzM,QAAQ,KAAKA,KAAjB;AACA,UAAIiM,uBAAuBpQ,EAAE,yBAAF,EAA6BiL,IAA7B,CAAkC,oCAAlC,EAAwEuB,GAAxE,EAA3B;AACAhE,cAAQC,GAAR,CAAY,0BAA0B2H,oBAAtC;;AAEA,UAAIC,eAAerQ,EAAE,wDAAF,EAA4DwM,GAA5D,EAAnB;AACA,UAAI8D,sBAAoBrD,SAASoD,YAAT,CAAxB;AACA,UAAGE,MAAMD,mBAAN,CAAH,EAA+B;AAC3BA,8BAAoB,CAApB;AACF;AACF;AACAD,qBAAepD,SAASoD,YAAT,CAAf;AACA,UAAGE,MAAMF,YAAN,CAAH,EAAwB;AACtBA,uBAAa,CAAb;AACD;;AAEDF,uBAAiB,EAAC7K,UAAD,EAAOnB,YAAP,EAAc8D,kBAAd,EAAwBmI,0CAAxB,EAA8CC,0BAA9C,EAAjB,CAjCuC,CAiCuC;AAC9E;AACA;AACA,UAAIjG,MAAMlL,MAAV;;AAGA,UAAImL,aAAa,UAAjB;AACA,UAAIC,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWC,IAAX,CAAgBF,OAAhB,EAAyB6F,cAAzB,EAA0CzF,IAA1C,CAA+C,UAACC,QAAD,EAAc;AACrD;;AAEA,YAAI,QAAKjG,QAAL,KAAkB,IAAtB,EAA4B;;AAE1B,kBAAKO,QAAL,GAAgB,IAAhB;AACA,kBAAK6D,KAAL,CAAW,UAAX,EAAsB,QAAK7D,QAA3B;;AAEA,kBAAKmK,SAAL,CAAe,YAAY;AACzB,iBAAKyB,YAAL,CAAkB1M,KAAlB;AACD,WAFD;AAID,SATD,MASO;;AAELqE,kBAAQC,GAAR,CAAY,mBAAZ;AACA,cAAI2B,MAAM9K,aAAY,UAAtB;AACA,cAAIwR,cAAc,EAAC,YAAY,QAAK7I,QAAlB,EAA4B,YAAY,QAAKzC,QAA7C,EAAuD,eAAeoL,WAAtE,EAAmF,QAAQ,QAAKtL,IAAhG,EAAlB;AACA,kBAAKiF,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,EAAqB0G,WAArB,EAAkCpG,IAAlC,CAAuC,UAACC,QAAD,EAAc;AACnD;AACAnC,oBAAQC,GAAR,CAAY,aAAZ;AACAD,oBAAQC,GAAR,CAAYqI,WAAZ;AACA,oBAAKrJ,KAAL,GAAakD,SAASF,OAAT,CAAiB,OAAjB,CAAb;AACAjC,oBAAQC,GAAR,CAAY,YAAZ;AACAD,oBAAQC,GAAR,CAAY,QAAKhB,KAAjB;AACA,oBAAKK,IAAL,GAAY,QAAKiJ,QAAL,CAAc,QAAKtJ,KAAnB,CAAZ;AACA,gBAAItD,QAAQ,QAAK2D,IAAL,CAAU3D,KAAtB;AACA,oBAAKc,QAAL,GAAgB,IAAhB;AACA,oBAAK6D,KAAL,CAAW,UAAX,EAAsB,QAAK7D,QAA3B;AACA,oBAAKlB,mBAAL,GAA2B,KAA3B;;AAEA;AACA/D,cAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;;AAEA,oBAAKyF,SAAL,CAAe,YAAY;AAC1B,mBAAKyB,YAAL,CAAkB1M,KAAlB;AACA,aAFD;AAKD,WArBD,EAqBG,UAACwG,QAAD,EAAc;AACb;AACCnC,oBAAQC,GAAR,CAAYkC,QAAZ;AACAnC,oBAAQC,GAAR,CAAYkC,SAAS+F,MAArB;AACA,oBAAKM,iBAAL,CAAuB,YAAvB;AACJ,WA1BD;AA4BD;AAIR,OAjDD,EAiDG,UAACrG,QAAD,EAAc;AACT;AACAnC,gBAAQC,GAAR,CAAYkC,QAAZ;AACAnC,gBAAQC,GAAR,CAAY,0BAA0BkC,SAAS+F,MAA/C;AACP,OArDD;AAuDD,KAv2BM;AAw2BPO,8BAA0B,kCAASC,KAAT,EAAgB1H,KAAhB,EAAuB;AAAE;;AAEjD,WAAK5E,UAAL,GAAkB,KAAlB;AACA,UAAIuM,WAAWD,KAAf;AACA,UAAIE,QAAJ;AACA;;AAEA,UAAID,QAAJ,EAAc;AACV3I,gBAAQC,GAAR,CAAY,cAAc0I,QAA1B;AACA,YAAIE,qBAAqB,EAAzB;AACA,aAAKzM,UAAL,GAAkB,IAAlB;AACA,YAAI0M,UAAU,KAAd;;AAJU;AAAA;AAAA;;AAAA;AAMV,gCAAwB,KAAK7M,gBAA7B,mIAA+C;AAAA,gBAAtC8M,WAAsC;;;AAE7C/I,oBAAQC,GAAR,CAAY,aAAZ;AACAD,oBAAQC,GAAR,CAAY8I,WAAZ;;AAEA,gBAAIA,YAAYJ,QAAZ,KAA0BA,QAA9B,EAAwC;AACtCG,wBAAU,IAAV;AACA;AACD;AAEF;AAhBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBV,YAAIA,YAAY,KAAhB,EAAuB;AACrB9I,kBAAQC,GAAR,CAAY,iCAAZ;AACAD,kBAAQC,GAAR,CAAYzI,EAAEwR,OAAF,CAAUL,QAAV,EAAoB,KAAK1M,gBAAzB,KAA8C,IAA1D;AACA+D,kBAAQC,GAAR,CAAa,KAAKhE,gBAAlB;;AAEA2M,qBAAWpR,EAAEwR,OAAF,CAAUL,QAAV,EAAoB,KAAK1K,iBAAzB,CAAX;AACA4K,+BAAqB,EAACD,kBAAD,EAAWD,kBAAX,EAArB;AACA,eAAK1M,gBAAL,CAAsB+G,IAAtB,CAA2B6F,kBAA3B;AACA7I,kBAAQC,GAAR,CAAY,cAAa2I,QAAzB;AACApR,YAAE,gBAAgBoR,QAAlB,EAA4BK,IAA5B,CAAiC,SAAjC,EAA4C,IAA5C;AACD;AAEJ,OA9BD,MA8BO;AACH,aAAK7M,UAAL,GAAkB,KAAlB;AACA8M,gBAAQ1R,EAAEwR,OAAF,CAAUL,QAAV,EAAoB,KAAK1K,iBAAzB,CAAR;AACAiL,gBAAQA,MAAMC,QAAd;AACA3R,UAAE,gBAAe0R,KAAjB,EAAwBD,IAAxB,CAA6B,SAA7B,EAAwC,KAAxC;AACH;;AAED,WAAKG,iBAAL;AACA,WAAKC,kBAAL;AACA,WAAKC,mBAAL;AACD,KAv5BM;AAw5BPC,mBAAe,uBAASb,KAAT,EAAgBQ,KAAhB,EAAuBlI,KAAvB,EAA8B;AAAE;;AAEzC,WAAK5E,UAAL,GAAkB,KAAlB;AACA,UAAIuM,WAAWD,KAAf;AACA,UAAIE,WAAWM,KAAf;;AAEA,UAAIlI,MAAMQ,MAAN,CAAagI,OAAjB,EAA0B;;AAEpBxI,cAAMQ,MAAN,CAAagI,OAAb,GAAuB,IAAvB;AACAhS,UAAEwJ,MAAMQ,MAAR,EAAgByH,IAAhB,CAAqB,SAArB,EAAgC,IAAhC;AACA,YAAIJ,qBAAqB,EAAzB;AACA,aAAKzM,UAAL,GAAkB,IAAlB;;AAEA,YAAI5E,EAAEwR,OAAF,CAAUL,QAAV,EAAoB,KAAK1M,gBAAzB,KAA4C,IAAhD,EAAsD;AAClD4M,+BAAqB,EAACD,kBAAD,EAAWD,kBAAX,EAArB;AACA,eAAK1M,gBAAL,CAAsB+G,IAAtB,CAA2B6F,kBAA3B;AACA;AACH;AAGN,OAdD,MAcO;AACD7H,cAAMQ,MAAN,CAAagI,OAAb,GAAuB,KAAvB,CADC,CAC6B;AAC9B,aAAKpN,UAAL,GAAkB,KAAlB,CAFC,CAEwB;;AAFxB;AAAA;AAAA;;AAAA;AAID,gCAAoB,KAAKH,gBAAzB,mIAA2C;AAAA,gBAAjCwN,MAAiC;;AACrC,gBAAIC,SAAS,KAAKzN,gBAAL,CAAsB0N,OAAtB,CAA8BF,MAA9B,CAAb;;AAEA,gBAAIb,aAAaa,OAAOb,QAApB,IAAgC5H,MAAMQ,MAAN,CAAagI,OAAb,KAAyB,KAA7D,EAAoE;AACnE,mBAAKvN,gBAAL,CAAsB2N,MAAtB,CAA6BF,MAA7B,EAAqC,CAArC;;AAEAlS,gBAAE,gBAAgBoR,QAAlB,EAA4BK,IAA5B,CAAiC,SAAjC,EAA4C,KAA5C;AAEA;AACN;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcN;;AAEL,WAAKG,iBAAL;AACA,WAAKC,kBAAL;AACA,WAAKC,mBAAL;AAED,KAh8BM;AAi8BPO,wBAAoB,8BAAY;AAC5B,WAAK5L,iBAAL,GAAyB,EAAzB;AAD4B;AAAA;AAAA;;AAAA;AAE5B,8BAAuB,KAAKJ,WAA5B,mIAAyC;AAAA,cAAhC2G,UAAgC;;;AAGjC,cAAIA,WAAWsF,kBAAX,IAAiC,IAArC,EAA2C;AAAA;AAAA;AAAA;;AAAA;;AAEzC,qCAAuBtF,WAAWsF,kBAAlC,wIAAsD;AAAA,oBAA7CC,UAA6C;;;AAEpD,oBAAIA,cAAc,IAAlB,EAAwB;;AAEtB,sBAAIC,OAAOD,WAAWE,QAAX,CAAoB,CAApB,CAAX;AACA;;AAEA,sBAAIzS,EAAEwR,OAAF,CAAUgB,IAAV,EAAgB,KAAK/L,iBAArB,KAAyC,IAA7C,EAAmD;AAC/C,yBAAKA,iBAAL,CAAuB+E,IAAvB,CAA4BgH,IAA5B;AACH;;AAEF,uBAAK/L,iBAAL,CAAuBiM,IAAvB;;AAED;AACA;AACA;;AAIC,iBAjBD,MAiBO;;AAEL;;AAED;AAEF;AA3BwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6B1C,WA7BD,MA6BO;AACL;AACD;AAEF;AAtCqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwC7B,KAz+BI;AA0+BLC,oBAAgB,wBAASnJ,KAAT,EAAgB;AAC9BA,YAAMC,cAAN;;AAEA,UAAI,KAAKjC,mBAAL,KAA6B,IAAjC,EAAuC;AACrC,YAAIoL,UAAU,IAAd;AACD,OAFD,MAEO;AACL,YAAIA,UAAU,IAAd;AACD;;AAED5S,QAAE,MAAF,EAAUC,IAAV,CAAe,MAAf,EAAuB2S,OAAvB;AACAhT,UAAIM,MAAJ,CAAWC,IAAX,GAAkByS,OAAlB;AACAlK,eAASC,KAAT,GAAiB,aAAa,KAAKlG,EAAL,CAAQ,6BAAR,CAAb,GAAsD,GAAtD,GAA4D,KAAKA,EAAL,CAAQ,aAAR,CAA7E,CAX8B,CAWuE;AACrG,WAAK+E,mBAAL,GAA2BoL,OAA3B;AACA,WAAK9J,KAAL,CAAW,qBAAX,EAAiC,KAAKtB,mBAAtC;AACD,KAx/BI;AAy/BLqL,iBAAa,uBAAW;AAAA;;AAEpB,UAAIxI,aAAa,WAAjB;AACA;AACA,UAAID,MAAM,gCAAV;AACA,UAAIE,UAAUF,MAAIC,UAAlB;AACA;AACA,WAAKpC,QAAL,GAAgB,KAAKM,QAAL,CAAc,UAAd,EAA0B,KAAKL,QAA/B,CAAhB;AACAM,cAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;;AAEA,WAAKsC,KAAL,CAAWa,GAAX,CAAed,OAAf,EAAwBI,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACvC;;AAEA,gBAAKvD,QAAL,GAAgBuD,SAASnJ,IAAzB,CAA8B;AAC9B,gBAAKsR,eAAL;;AAEA,gBAAK1D,SAAL,CAAe,YAAY;AAC3B,eAAKxE,KAAL,CAAW,KAAK3C,QAAhB;AACA,eAAK4D,cAAL,CAAoB,KAAK5D,QAAzB;AACC,SAHD;AAKH,OAXD,EAWG,UAAC0C,QAAD,EAAc;AACb;AACA;AACH,OAdD;AAgBH,KAnhCI;AAohCJmI,qBAAiB,2BAAW;AAAA;;AAC3B;AACA;AACA,UAAIhG,UAAU,KAAK1F,QAAL,CAAc2L,MAAd,CAAqB,UAACC,IAAD;AAAA,eAAUA,KAAK7G,EAAL,KAAY,QAAKnE,MAA3B;AAAA,OAArB,CAAd;AACA;AACA,UAAI8E,QAAQlL,MAAR,GAAiB,CAArB,EAAwB;AACpB,aAAK6O,UAAL,CAAgB,KAAKzI,MAArB;AACH,OAFD,MAEO;AACHhI,UAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACH;AAEF,KA/hCI;AAgiCLoB,uBAAmB,2BAAS9C,QAAT,EAAmB;AAAA;;AACpC,UAAI6B,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,iCAAiCqB,gBAA7C;AACA,UAAIO,aAAa,eAAeP,gBAAhC;AACA,UAAI0G,SAAS,+BAAb;AACA,UAAIpG,MAAMoG,SAAOnG,UAAjB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAehB,GAAf,EAAoBM,IAApB,CAAyB,UAACC,QAAD,EAAc;AACjC;AACE,gBAAK/D,eAAL,GAAuB+D,SAASnJ,IAAhC;AACAgH,gBAAQC,GAAR,CAAY,sBAAZ;AACAD,gBAAQC,GAAR,CAAY,QAAK7B,eAAjB;AACA,gBAAKqM,uBAAL,CAA6BnJ,gBAA7B;AACP,OAND,EAMG,UAACa,QAAD,EAAc;AACX;AACAnC,gBAAQC,GAAR,CAAY,OAAZ;AACAD,gBAAQC,GAAR,CAAYkC,QAAZ;AACAnC,gBAAQC,GAAR,CAAYkC,SAAS+F,MAArB;AACL,OAXD;AAaD,KApjCI;AAqjCLuC,6BAAyB,iCAAShL,QAAT,EAAmB;AAC1C,UAAI6B,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,qBAAqBqB,gBAAjC;AACAtB,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;AACA,UAAI,KAAKlD,eAAT,EAA0B;AACxB,aAAKD,qBAAL,GAA6B,EAA7B;AACA,aAAKA,qBAAL,CAA2B6E,IAA3B,CAAgC,KAAK5E,eAArC;AACA4B,gBAAQC,GAAR,CAAY,gCAAgC,KAAK9B,qBAAjD;AACA,aAAKiE,KAAL,CAAWd,gBAAX;AACA,aAAK+B,cAAL,CAAoB/B,gBAApB;AACA9J,UAAE,0BAAF,EAA8B2J,KAA9B,CAAoC,MAApC;AACD;AACF,KAjkCI;AAkkCL8G,gBAAY,oBAASxI,QAAT,EAAmB;AAAA;;AAC3B,UAAI6B,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,iCAAiCqB,gBAA7C;;AAEA,UAAIO,aAAa,eAAeP,gBAAhC;AACA;AACA,UAAI0G,SAAS,+BAAb;AACA,UAAIpG,MAAMoG,SAAOnG,UAAjB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAehB,GAAf,EAAoBM,IAApB,CAAyB,UAACC,QAAD,EAAc;AACnC;AACE,gBAAKmC,OAAL,GAAenC,SAASnJ,IAAxB;AACAgH,gBAAQC,GAAR,CAAY,cAAZ;AACAD,gBAAQC,GAAR,CAAY,QAAKqE,OAAjB;AACA,gBAAKoG,qBAAL,CAA2BpJ,gBAA3B;AACL,OAND,EAMG,UAACa,QAAD,EAAc;AACb;AACA;AACH,OATD;AAWH,KAtlCI;AAulCLuI,2BAAuB,+BAASjL,QAAT,EAAmB;AACtC,UAAIkL,SAASlG,SAAS,KAAKjF,MAAd,CAAb;AACA,UAAI8B,mBAAmB7B,QAAvB;AACAO,cAAQC,GAAR,CAAY,qBAAqBqB,gBAAjC;AACAtB,cAAQC,GAAR,CAAY,sBAAsBqB,gBAAlC;;AAEA,UAAI,KAAKgD,OAAT,EAAkB;AACZtE,gBAAQC,GAAR,CAAY,wBAAZ;AACAD,gBAAQC,GAAR,CAAY,KAAKqE,OAAjB;AACA,aAAKrH,OAAL,GAAe,IAAf;AACA+C,gBAAQC,GAAR,CAAY,kBAAkB,KAAKhD,OAAnC;AACA,aAAK0B,cAAL,GAAsB,EAAtB;AACA,aAAK2B,KAAL,CAAW,SAAX,EAAqB,KAAKrD,OAA1B;AACA,aAAK0B,cAAL,CAAoBqE,IAApB,CAAyB,KAAKsB,OAA9B;AACAtE,gBAAQC,GAAR,CAAY,qBAAZ;AACAD,gBAAQC,GAAR,CAAY,KAAKtB,cAAjB;AACA,aAAKyD,KAAL,CAAWd,gBAAX;AACA,aAAK+B,cAAL,CAAoB/B,gBAApB;;AAEA;;;AAbY;AAAA;AAAA;;AAAA;AAgBZ,iCAAiB,KAAK3C,cAAtB,wIAAsC;AAAA,gBAA7B6L,IAA6B;;AACpC;AACE;AACA;AACA,iBAAK1N,IAAL,GAAY0N,KAAK1N,IAAjB;AACA,iBAAKwD,KAAL,CAAW,MAAX,EAAkB,KAAKxD,IAAvB;;AAEA;AACA,iBAAKP,kBAAL,GAA0BiO,KAAK5C,oBAA/B;AACA,gBAAG,KAAKrL,kBAAL,KAA4B,KAA/B,EAAqC;AACnC;AACA;AACA;AACA/E,gBAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACApT,gBAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;;AAGF;AAEC,aAVD,MAUO;AACL;AACA;AACA;AACA1J,gBAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACApT,gBAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;AAED;;AAID1J,cAAE,iBAAF,EAAqBiL,IAArB,CAA0B,iBAA1B,EAA6CoI,IAA7C;;AAGA,iBAAK3N,WAAL,GAAmBsN,KAAK3C,YAAxB;AACA7H,oBAAQC,GAAR,CAAY,iBAAiB,KAAK/C,WAAlC;AACA,gBAAG,KAAKA,WAAL,IAAoB,CAAvB,EAAyB;AACvB8C,sBAAQC,GAAR,CAAY,yBAAyBuK,KAAK3C,YAA1C;AACA;AACArQ,gBAAE,MAAF,EAAUoT,QAAV,CAAmB,QAAnB;AACApT,gBAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;AACA1J,gBAAE,sCAAF,EAA0CiL,IAA1C,CAA+C,iBAA/C,EAAkEqI,IAAlE;AACAtT,gBAAE,sCAAF,EAA0CiL,IAA1C,CAA+C,QAA/C,EAAyDuB,GAAzD,CAA6D,KAAK9G,WAAlE,EAA+E6N,MAA/E;AACA;AAED,aATD,MASK;AACH/K,sBAAQC,GAAR,CAAY,wBAAwB,KAAK/C,WAAzC;AACA;AACA1F,gBAAE,MAAF,EAAU0J,WAAV,CAAsB,QAAtB;AACA1J,gBAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACD;AAEJ;;AAED;AArEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsEZ,YAAI,KAAK1O,QAAL,KAAkB,IAAtB,EAA4B;AAC1B8D,kBAAQC,GAAR,CAAY,kBAAZ;AACAzI,YAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACA3J,YAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACD,SAJD,MAIO;AACLnB,kBAAQC,GAAR,CAAY,kBAAZ;AACA,eAAKuI,iBAAL,CAAuB,YAAvB;AACD;;AAGD,aAAKrB,cAAL;AAGL,OAnFD,MAmFO;AACD,aAAKlK,OAAL,GAAe,KAAf;AACA,aAAKqD,KAAL,CAAW,SAAX,EAAqB,KAAKrD,OAA1B;AACAzF,UAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACA3J,UAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AAEL;AAEJ,KAxrCI;AAyrCLf,oBAAgB,0BAAW;AAAA;;AACvB;AACA;AACA,UAAIwB,MAAMhL,aAAa,YAAvB;AACA;AACA,UAAIoU,iBAAiB,EAArB;;AAEA;AACA,WAAKjJ,KAAL,CAAWa,GAAX,CAAehB,GAAf,EAAoBM,IAApB,CAAyB,UAACC,QAAD,EAAc;AACnC;AACA,gBAAKtE,WAAL,GAAmBsE,SAASnJ,IAA5B;AACA;AACA,gBAAKiS,iBAAL;AACH,OALD,EAKG,UAAC9I,QAAD,EAAc;AACb;AACA;AACH,OARD;AASH,KA1sCI;AA2sCL+I,qBAAiB,2BAAW;AACxB,WAAKzL,QAAL,GAAgBjI,EAAE,QAAF,EAAYwM,GAAZ,GAAkBmH,WAAlB,GAAgC1F,IAAhC,EAAhB;AACAzF,cAAQC,GAAR,CAAY,kBAAkB,KAAKR,QAAnC;AACA,WAAKzC,QAAL,GAAgBxF,EAAE,cAAF,EAAkBwM,GAAlB,GAAwByB,IAAxB,EAAhB;AACA,WAAK3I,IAAL,GAAYtF,EAAE,WAAF,EAAewM,GAAf,GAAqByB,IAArB,EAAZ;AACA,WAAKnF,KAAL,CAAW,MAAX,EAAkB,KAAKxD,IAAvB;AACAkD,cAAQC,GAAR,CAAY,UAAS,KAAKnD,IAA1B;AACA,UAAInB,QAAQ,KAAK8D,QAAjB;AACA,WAAKa,KAAL,CAAW,UAAX,EAAsB,KAAKb,QAA3B;;AAEA,UAAI2I,cAAc,KAAlB;;AAEA,UAAI,KAAKpL,QAAL,KAAkB,EAAlB,IAAwB,KAAKyC,QAAL,KAAkB,EAA1C,IAAgD,KAAK3C,IAAL,KAAc,EAAlE,EAAsE;;AAEhEtF,UAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACA3J,UAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AAEL,OALD,MAKO;AACD;AACA,aAAK5F,mBAAL,GAA2B,IAA3B;AACA/D,UAAE,mCAAF,EAAuCsT,IAAvC;AACA,aAAKtC,iBAAL,CAAuB,eAAvB;AACA;AACA;AACL;AAEJ,KAruCI;AAsuCL4C,mBAAe,uBAAUpK,KAAV,EAAiB;AAC9B,UAAIrF,QAAQnE,EAAE,QAAF,EAAYwM,GAAZ,GAAkBmH,WAAlB,GAAgC1F,IAAhC,EAAZ;AACAzF,cAAQC,GAAR,CAAY,WAAWtE,KAAvB;AACA,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAK2E,KAAL,CAAW,OAAX,EAAmB,KAAK3E,KAAxB;AACA,WAAKO,QAAL,GAAgB,KAAhB;AACA,WAAKoE,KAAL,CAAW,UAAX,EAAsB,KAAKpE,QAA3B;AACA8D,cAAQC,GAAR,CAAY,kBAAkB,KAAK/D,QAAnC;AACA,WAAKmM,YAAL,CAAkB1M,KAAlB;AACD,KA/uCI;AAgvCL0P,gCAA4B,oCAAUrK,KAAV,EAAiB;;AAEzC,UAAIsK,0BAA0B9T,EAAE,mBAAF,EAAuBwM,GAAvB,GAA6ByB,IAA7B,EAA9B;;AAEA,UAAI6F,4BAA4B,KAAKhP,GAArC,EAA0C;;AAEpC;AACL,OAHD,MAGO;AACD;AACL;AACJ,KA1vCI;AA2vCLiP,qBAAiB,yBAASvK,KAAT,EAAgB;AAAA;;AAE7B,WAAKvB,QAAL,GAAgBjI,EAAE,QAAF,EAAYwM,GAAZ,GAAkBmH,WAAlB,GAAgC1F,IAAhC,EAAhB;AACAzF,cAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACA,WAAKzC,QAAL,GAAgBxF,EAAE,cAAF,EAAkBwM,GAAlB,GAAwByB,IAAxB,EAAhB;AACA,UAAI2C,cAAc,KAAlB;;AAEA,UAAI,KAAKpL,QAAL,KAAkB,EAAlB,IAAwB,KAAKyC,QAAL,KAAkB,EAA9C,EAAkD;AAC5C;AACA,YAAI9D,QAAQ,KAAK8D,QAAjB;;AAEAjI,UAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;;AAEA;;AAEA,YAAIS,MAAM9K,aAAa,MAAvB;;AAEA,YAAIwR,cAAc,EAAC,YAAY,KAAK7I,QAAlB,EAA4B,YAAY,KAAKzC,QAA7C,EAAuD,eAAeoL,WAAtE,EAAlB;;AAEA,aAAKrG,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,EAAqB0G,WAArB,EAAkCpG,IAAlC,CAAuC,UAACC,QAAD,EAAc;AACjD;AACAnC,kBAAQC,GAAR,CAAYkC,SAASnJ,IAArB;AACAgH,kBAAQC,GAAR,CAAYkC,SAAS+F,MAArB;AACAlI,kBAAQC,GAAR,CAAYkC,SAASF,OAArB;AACA,kBAAKhD,KAAL,GAAakD,SAASF,OAAT,CAAiB,OAAjB,CAAb;AACAjC,kBAAQC,GAAR,CAAY,YAAZ;AACAD,kBAAQC,GAAR,CAAY,QAAKhB,KAAjB;AACA,kBAAKK,IAAL,GAAY,QAAKiJ,QAAL,CAAc,QAAKtJ,KAAnB,CAAZ;AACA,cAAItD,QAAQ,QAAK2D,IAAL,CAAU3D,KAAtB;;AAGA,cAAInE,EAAE,WAAF,EAAewM,GAAf,OAAyBwH,SAA7B,EAAyC;AACvC,oBAAK1O,IAAL,GAAYtF,EAAE,WAAF,EAAewM,GAAf,GAAqByB,IAArB,EAAZ;AACAzF,oBAAQC,GAAR,CAAY,UAAU,QAAKnD,IAA3B;AACA,oBAAKwD,KAAL,CAAW,MAAX,EAAmB,QAAKxD,IAAxB;AACD;;AAED,kBAAKwD,KAAL,CAAW,UAAX,EAAuB,QAAKb,QAA5B;AACAjI,YAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACA,kBAAK1E,QAAL,GAAgB,IAAhB;AACA,kBAAK6D,KAAL,CAAW,UAAX,EAAuB,QAAK7D,QAA5B;AACAuD,kBAAQC,GAAR,CAAY,mBAAmB,QAAKxD,QAApC;AACA,kBAAKC,WAAL,GAAmB,KAAnB;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAK2L,YAAL,CAAkB1M,KAAlB;AACA;AAEH,SAjCD,EAiCG,UAACwG,QAAD,EAAc;AACbnC,kBAAQC,GAAR,CAAY,cAAZ;AACA,kBAAKvD,WAAL,GAAmB,IAAnB;AACAlF,YAAE,2BAAF,EAA+BsT,IAA/B;AACA9K,kBAAQC,GAAR,CAAY,sBAAsB,QAAKvD,WAAvC;AACA,kBAAK8L,iBAAL,CAAuB,eAAvB;AACA;AACH,SAxCD;AAyCL,OArDD,MAqDO;AACDxI,gBAAQC,GAAR,CAAY,sCAAZ;AACA,aAAKvD,WAAL,GAAmB,IAAnB;AACAsD,gBAAQC,GAAR,CAAY,sBAAsB,KAAKvD,WAAvC;AACA,eAAO,OAAO,KAAKA,WAAnB;AACL;AAEJ,KA9zCI;AA+zCL+O,yBAAqB,+BAAW;;AAE5B,WAAKjM,MAAL,GAAc,GAAd;AACA,WAAKc,KAAL,CAAW,QAAX,EAAoB,KAAKd,MAAzB;AACA,WAAK1C,IAAL,GAAY,KAAKiD,QAAL,CAAc,MAAd,EAAsB,KAAKjD,IAA3B,CAAZ;AACA,UAAInB,QAAQgF,aAAaG,OAAb,CAAqB,OAArB,CAAZ,CAL4B,CAKe;AAC3C,WAAKmH,UAAL,CAAgB,KAAKzI,MAArB;;AAEA,UAAI,KAAKG,QAAL,KAAkB,SAAtB,EAAkC;AAC/BnI,UAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACF,OAFD,MAEQ;AACL3J,UAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACA3J,UAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACF;AAEJ,KA90CI;AA+0CLqH,uBAAmB,2BAASkD,QAAT,EAAmB;AACpC,WAAK/O,UAAL,GAAkB+O,QAAlB;AACA,WAAKpL,KAAL,CAAW,YAAX,EAAwB,KAAK3D,UAA7B;AACD,KAl1CI;AAm1CLgP,gBAAY,oBAAS3K,KAAT,EAAgB;AAC1B,WAAKwH,iBAAL,CAAuB,WAAvB;AACD,KAr1CI;AAs1CLoD,mBAAe,yBAAY;AACvB,WAAKpD,iBAAL,CAAuB,WAAvB;AACH,KAx1CI;;AA01CLqD,eAAW,mBAASlQ,KAAT,EAAgB;AACrB,UAAIkG,aAAa,WAAjB;AACA,UAAIyC,UAAU,EAAE3I,OAAO,4BAAT,EAAd;AACA;AACL,KA91CI;AA+1CLmQ,wBAAoB,4BAAS9K,KAAT,EAAgB;AAClC,UAAIpB,mBAAmBpI,EAAE,mBAAF,EAAuBwM,GAAvB,GAA6ByB,IAA7B,EAAvB;;AAEA,UAAI7F,qBAAqB,KAAKtD,GAA9B,EAAmC;AACjC,aAAKkM,iBAAL,CAAuB,YAAvB;AACD,OAFD,MAEO;AACL,aAAKA,iBAAL,CAAuB,YAAvB;AACD;AAEF,KAx2CI;AAy2CLrB,oBAAgB,0BAAW;AAAA;;AACzB,UAAItF,aAAa,UAAjB;AACA;AACA,UAAID,MAAM,gCAAV;AACA,UAAIA,MAAMlL,MAAV;AACA,UAAIoL,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAed,OAAf,EAAwBI,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACrC;;AAEA,gBAAKvF,WAAL,GAAmBuF,SAASnJ,IAA5B;AACAgH,gBAAQC,GAAR,CAAY,kCAAZ;AACAD,gBAAQC,GAAR,CAAY,QAAKrD,WAAjB;;AAEA,YAAI,QAAKmB,IAAL,KAAc,SAAlB,EAA6B;AACzBiC,kBAAQC,GAAR,CAAY,kBAAZ;AACA,kBAAK8L,uBAAL;AAEH,SAJD,MAIO,IAAI,QAAKhO,IAAL,KAAc,YAAlB,EAAgC;AACnCiC,kBAAQC,GAAR,CAAY,oBAAZ;AACA;AACA,kBAAK+L,0BAAL;AACA;AAEH,SANM,MAMA;AACL;AACD;AAEF,OArBL;AAuBD,KAv4CI;AAw4CLC,kBAAc,wBAAY;AACtBjM,cAAQC,GAAR,CAAY,mBAAZ;AACAzI,QAAE,sBAAF,EAA0B0U,EAA1B,CAA6B,wBAA7B,EAAuD,YAAY;AACjElM,gBAAQC,GAAR,CAAY,qBAAZ;AACAzI,UAAE,aAAF,EAAiBwM,GAAjB,CAAqB,EAArB;AACD,OAHD;AAIH,KA94CI;AA+4CL3D,iBAAa,uBAAY;AAAA;;AAErB,UAAIwB,aAAa,aAAjB;AACA;AACA;AACA,UAAID,MAAMlL,MAAV;AACA,UAAIoL,UAAUF,MAAIC,UAAlB;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAed,OAAf,EAAwBI,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACvC,gBAAK/E,QAAL,GAAgB+E,SAASnJ,IAAzB;AACH,OAFD;AAIH,KA35CI;AA45CLgT,gCAA4B,sCAAY;;AAEtC,WAAK1Q,uBAAL,GAA+B,EAA/B;;AAEA,UAAI,CAAC,KAAKuC,WAAV,EAAuB;AAAE;AAAS;;AAJI;AAAA;AAAA;;AAAA;AAMpC,+BAAuB,KAAKA,WAA5B,wIAAyC;AAAA,cAAhC2G,UAAgC;;;AAEvC,cAAIA,WAAWb,EAAX,KAAkB,KAAKnE,MAA3B,EAAmC;;AAEjC,gBAAI2M,eAAe1H,SAASD,WAAWb,EAApB,CAAnB;AACA,gBAAIyI,gBAAgB,KAAKxP,WAAL,CAAiB2N,MAAjB,CAAwB,UAACC,IAAD;AAAA,qBAAUA,KAAKrE,wBAAL,KAAkCgG,YAA5C;AAAA,aAAxB,CAApB;;AAEA,gBAAIC,cAAchT,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,mBAAK4C,gBAAL,GAAwB,IAAxB;AACA,mBAAKsE,KAAL,CAAW,kBAAX,EAA8B,KAAKtE,gBAAnC;;AAEA,kBAAI8B,SAAS,KAAKuO,OAAL,CAAaD,aAAb,EAA4B,UAAS5B,IAAT,EACvC;AACE,uBAAO,CAACA,KAAKrE,wBAAN,EAAgCqE,KAAKjE,YAArC,CAAP;AACD,eAHU,CAAb;;AAKA,kBAAI+F,WAAJ;AACA,kBAAIC,YAAJ;AACA,kBAAI/E,aAAJ;AACA,kBAAIgF,eAAJ;AACA,kBAAIC,aAAa,EAAjB;AACA,kBAAIC,aAAa,EAAjB;;AAd4B;AAAA;AAAA;;AAAA;AAgB5B,uCAA6B5O,MAA7B,wIAAqC;AAAA,sBAA5B6O,gBAA4B;AAAA;AAAA;AAAA;;AAAA;;AAEnC,2CAA0BA,gBAA1B,wIAA4C;AAAA,0BAAlCC,YAAkC;;;AAExCN,oCAAcM,aAAarG,YAA3B;AACAiG,wCAAkBI,aAAatL,gBAA/B;AACAkG,sCAAgBgF,gBAAgB9S,KAAhB,CAAsB,SAAtB,EAAiC,CAAjC,CAAhB;AACA6S,qCAAeK,aAAajR,KAA5B;AACA+Q,mCAAa,EAAClF,4BAAD,EAAgB8E,wBAAhB,EAA6BE,gCAA7B,EAA8CD,0BAA9C,EAAb;;AAEA,0BAAIK,aAAa7F,SAAb,KAA2B,IAA/B,EAAqC;AAC/B,6BAAKhK,OAAL,GAAe,IAAf;AACL,uBAFD,MAEO;AACD,6BAAKA,OAAL,GAAe,KAAf;AACL;;AAED0P,iCAAWzJ,IAAX,CAAgB0J,UAAhB;AAEH;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA9BmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCnC,sBAAIG,0BAA0B,MAA9B;AACA,sBAAIC,wBAAJ;AACAA,6CAA2BR,WAA3B;AACAK,mCAAiBE,uBAAjB,IAA4CC,wBAA5C;;AAEA,sBAAIC,8BAA8B,UAAlC;AACA,sBAAIC,4BAAJ;AACAA,iDAA+BR,eAA/B;AACAG,mCAAiBI,2BAAjB,IAAgDC,4BAAhD;;AAEA,sBAAIC,wBAAwB,eAA5B;AACA,sBAAIC,sBAAJ;AACAA,2CAAyB1F,aAAzB;AACAmF,mCAAiBM,qBAAjB,IAA0CC,sBAA1C;;AAEA,sBAAIC,yBAAyB,YAA7B;AACA,sBAAIC,0BAA0B,EAA9B;AACAA,4CAA0BV,UAA1B;AACAC,mCAAiBQ,sBAAjB,IAA2CC,uBAA3C;AAED;AApE2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsE5B,kBAAIC,eAAe,eAAnB;AACA,kBAAIC,gBAAgB,EAApB;AACAA,8BAAgBxP,MAAhB;AACA0G,yBAAW6I,YAAX,IAA2BC,aAA3B;;AAEA,kBAAIH,yBAAyB,YAA7B;AACA,kBAAIC,0BAA0B,EAA9B;AACAA,wCAAyBX,UAAzB;AACAjI,yBAAW2I,sBAAX,IAAqCC,uBAArC;;AAGA,mBAAK9R,uBAAL,CAA6B0H,IAA7B,CAAkCwB,UAAlC;;AAEA,kBAAI+I,OAAO,CAAX;AAnF4B;AAAA;AAAA;;AAAA;AAoF5B,uCAAcnB,aAAd,wIAA6B;AAAA,sBAApBoB,CAAoB;;;AAE5B,sBAAKA,EAAEzG,SAAF,KAAgB,IAAhB,IAAwByG,EAAEhH,eAAF,KAAsB,IAAnD,EAAyD;AAChD+G,2BAAOA,OAAO,CAAd;AACP;;AAED,uBAAK/S,cAAL,GAAsB+S,IAAtB;AACA,uBAAKjN,KAAL,CAAW,gBAAX,EAA4B,KAAK9F,cAAjC;AACD;AA5F2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8F5B,kBAAIiT,OAAO,YAAX;AACAjJ,yBAAWiJ,IAAX,IAAmBF,IAAnB;;AAEA,kBAAIA,OAAO,CAAX,EAAc;AACZ/I,2BAAWkJ,QAAX,GAAsB,IAAtB;AACA,qBAAKtO,MAAL,GAAc,IAAd;AACD,eAHD,MAGO;AACLoF,2BAAWkJ,QAAX,GAAsB,KAAtB;AACA,qBAAKtO,MAAL,GAAc,KAAd;AACD;AAEF,aAzGD,MAyGO;AACHoF,yBAAWkJ,QAAX,GAAsB,KAAtB;AACA,mBAAKtO,MAAL,GAAc,KAAd;AACH;AAEF;AAEF;AA7HmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgIvC,KA5hDI;AA6hDL8F,gBAAY,oBAASyI,IAAT,EAAe;;AAEzB,UAAIA,OAAO,IAAI1I,IAAJ,CAAS0I,IAAT,CAAX;AACA,UAAIC,OAAQC,IAAIF,KAAKjH,WAAL,EAAJ,CAAZ;AACA,UAAIoH,QAAQD,IAAIF,KAAK1H,QAAL,KAAkB,CAAtB,CAAZ;AACA,UAAI8H,MAAQF,IAAIF,KAAK5H,OAAL,EAAJ,CAAZ;AACA,UAAIiI,gBAAgBJ,OAAM,GAAN,GAAWE,KAAX,GAAkB,GAAlB,GAAuBC,GAA3C;;AAEA,eAASF,GAAT,CAAaI,IAAb,EAAmB;AACjB,eAAO,CAACA,OAAO,EAAP,GAAY,GAAZ,GAAkB,EAAnB,IAAyBA,IAAhC;AACD;;AAED,aAAOD,aAAP;AACD,KA1iDI;AA2iDLjC,6BAAyB,mCAAY;;AAEnC,UAAIK,aAAJ;AACA,UAAI5H,UAAJ;AACA,UAAIhF,SAASiF,SAAS,KAAKjF,MAAd,CAAb;AACA,UAAI8B,mBAAmB,KAAKgD,OAAL,CAAa7E,QAApC;;AAEA,WAAKpB,oBAAL,GAA4B,EAA5B;;AAEA,UAAI,KAAKM,cAAT,EAAyB;AACvBqB,gBAAQC,GAAR,CAAY,qBAAZ;AADuB;AAAA;AAAA;;AAAA;AAEnB,iCAAoB,KAAKtB,cAAzB,wIAAyC;AAAA,gBAAhC2F,OAAgC;;;AAEvC8H,4BAAgB,KAAKxP,WAAL,CAAiB2N,MAAjB,CAAwB,UAACC,IAAD;AAAA,qBAAUA,KAAKlJ,gBAAL,KAA0BA,gBAApC;AAAA,aAAxB,CAAhB;AACAtB,oBAAQC,GAAR,CAAY,eAAZ;AACAD,oBAAQC,GAAR,CAAYmM,aAAZ;;AAEE,gBAAIA,cAAchT,MAAd,GAAuB,CAAvB,IAA4B,KAAKqG,QAAL,KAAkB6B,gBAAlD,EAAoE;AAClEtB,sBAAQC,GAAR,CAAY,uBAAZ;;AAGA,mBAAKjE,gBAAL,GAAwB,IAAxB;AACA,mBAAKsE,KAAL,CAAW,kBAAX,EAA+B,KAAKtE,gBAApC;;AAEA,kBAAI8B,SAAS,KAAKuO,OAAL,CAAaD,aAAb,EAA4B,UAAS5B,IAAT,EAAe;AAClD,uBAAO,CAACA,KAAKrE,wBAAN,CAAP;AACL,eAFY,CAAb;;AAIA,kBAAIzB,YAAJ;AACA,kBAAIwJ,gBAAgB,EAApB;AACA,kBAAIC,gBAAgB,EAApB;AACA,kBAAIrK,YAAJ;AACA,kBAAIlG,cAAJ;AACA,kBAAIgG,uBAAJ;AACA,kBAAIC,sBAAJ;AACA,kBAAI2D,aAAJ;AACA,kBAAIlF,eAAJ;AACA,kBAAI8L,uBAAuB,KAA3B;;AApBkE;AAAA;AAAA;;AAAA;AAsBhE,uCAA6BtQ,MAA7B,wIAAqC;AAAA,sBAA5BuQ,gBAA4B;AAAA;AAAA;AAAA;;AAAA;;AAEnC,2CAA2BA,gBAA3B,wIAA6C;AAAA,0BAAnCC,aAAmC;;;AAE3C5J,qCAAe4J,cAAcnI,wBAA7B;;AAEA7D,wCAAkBgM,cAAchN,gBAAhC;AACAkG,sCAAgBlF,gBAAgB5I,KAAhB,CAAsB,SAAtB,EAAiC,CAAjC,CAAhB;;AAEA,0BAAI4U,cAAc9H,eAAd,KAAkC,KAAtC,EAA+C;AAC7C4H,+CAAuB,IAAvB;AACD;;AAGD,0BAAIE,cAAcvH,SAAd,KAA4B,IAAhC,EAAsC;AACpC,6BAAKhK,OAAL,GAAe,IAAf;AACD,uBAFD,MAEO;AACL,6BAAKA,OAAL,GAAe,KAAf;AACD;;AAhB0C;AAAA;AAAA;;AAAA;AAkB3C,+CAAuB,KAAKc,WAA5B,wIAAyC;AAAA,8BAAhC2G,UAAgC;;;AAEvC,8BAAIV,eAAeW,SAASD,WAAWb,EAApB,CAAnB;AACA,8BAAKG,iBAAiBY,YAAtB,EAAoC;AAC9B9G,6CAAiB4G,WAAWN,sBAAX,CAAkCC,UAAlC,GAA+C,GAA/C,GAAqDK,WAAWN,sBAAX,CAAkCE,SAAxG;AACAR,sDAA0BY,WAAWN,sBAAX,CAAkCmD,cAAlC,CAAiD,CAAjD,CAA1B;AACAxD,qDAAyBW,WAAWN,sBAAX,CAAkCoD,aAAlC,CAAgD,CAAhD,CAAzB;AACA6G,4CAAgB,EAAC3G,4BAAD,EAAgB9C,0BAAhB,EAA8B9G,8BAA9B,EAA8CgG,gDAA9C,EAAuEC,8CAAvE,EAA+FuK,0CAA/F,EAAhB;AACAF,0CAAclL,IAAd,CAAmBmL,aAAnB;;AAEF,gCAAIhB,yBAAyB,YAA7B;AACA,gCAAIC,0BAA0B,EAA9B;AACAA,sDAA0Be,aAA1B;AACAE,6CAAiBlB,sBAAjB,IAA2CC,uBAA3C;AACH;AACF;AAjC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmC5C;AArCkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCpC;AA7D+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgElE,kBAAIC,eAAe,eAAnB;AACA,kBAAIC,gBAAgB,EAApB;AACAA,8BAAgBxP,MAAhB;AACAwG,sBAAQ+I,YAAR,IAAwBC,aAAxB;AACA;;AAEA,kBAAIH,yBAAyB,YAA7B;AACA,kBAAIC,0BAA0B,EAA9B;AACAA,wCAA0Bc,aAA1B;AACA5J,sBAAQ6I,sBAAR,IAAkCC,uBAAlC;;AAEA;;;AAGA,mBAAK/O,oBAAL,CAA0B2E,IAA1B,CAA+BsB,OAA/B;AACA;AACA;;AAEA,mBAAKD,8BAAL;;AAEA,kBAAIkJ,OAAO,CAAX;AApFkE;AAAA;AAAA;;AAAA;AAqFlE,uCAAcnB,aAAd,wIAA6B;AAAA,sBAApBoB,CAAoB;;AAC3B,sBAAKA,EAAEzG,SAAF,KAAgB,IAAhB,IAAwByG,EAAEhH,eAAF,KAAsB,KAAnD,EAA0D;AACtDxG,4BAAQC,GAAR,CAAY,qDAAZ;AACAsN,2BAAOA,OAAO,CAAd;AACH;;AAED,uBAAK/S,cAAL,GAAsB+S,IAAtB;AACA,uBAAKjN,KAAL,CAAW,gBAAX,EAA4B,KAAK9F,cAAjC;AACAwF,0BAAQC,GAAR,CAAY,yBAAyB,KAAKzF,cAA1C;AACD;AA9FiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiGlE,kBAAIiT,OAAO,YAAX;AACAnJ,sBAAQmJ,IAAR,IAAgBF,IAAhB;AACA;AACA,kBAAIA,OAAO,CAAX,EAAc;AACZvN,wBAAQC,GAAR,CAAY,wBAAZ;AACAqE,wBAAQoJ,QAAR,GAAmB,IAAnB;AACA;AACA,qBAAKtO,MAAL,GAAc,IAAd;AACAY,wBAAQC,GAAR,CAAY,gBAAgB,KAAKb,MAAjC;AAED,eAPD,MAOO;AACLY,wBAAQC,GAAR,CAAY,4BAAZ;AACAqE,wBAAQoJ,QAAR,GAAmB,KAAnB;AACA;AACA,qBAAKtO,MAAL,GAAc,KAAd;AACAY,wBAAQC,GAAR,CAAY,gBAAgB,KAAKb,MAAjC;AACD;AAEF,aAnHD,MAmHO;AACLY,sBAAQC,GAAR,CAAY,yBAAZ;AACAqE,sBAAQoJ,QAAR,GAAmB,KAAnB;AACA;AACA,mBAAKtO,MAAL,GAAc,KAAd;AACD;AAEJ;AAlIkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmItB,OAnIH,MAmIS;AACFY,gBAAQC,GAAR,CAAY,+BAAZ;AACC,eAAO,KAAP;AACL;;AAEDD,cAAQC,GAAR,CAAY,2BAAZ;AACAD,cAAQC,GAAR,CAAY,KAAK5B,oBAAjB;AAEH,KA/rDI;AAgsDLgO,aAAS,iBAAUkC,KAAV,EAAkBC,CAAlB,EAAsB;AAC3B,UAAIC,SAAS,EAAb;AACAF,YAAMzW,OAAN,CAAe,UAAU4W,CAAV,EACf;AACE,YAAIC,QAAQC,KAAKC,SAAL,CAAgBL,EAAEE,CAAF,CAAhB,CAAZ;AACAD,eAAOE,KAAP,IAAgBF,OAAOE,KAAP,KAAiB,EAAjC;AACAF,eAAOE,KAAP,EAAc3L,IAAd,CAAoB0L,CAApB;AAED,OAND;AAOA,aAAO9W,OAAOC,IAAP,CAAY4W,MAAZ,EAAoBK,GAApB,CAAyB,UAAUH,KAAV,EAAkB;AAChD,eAAOF,OAAOE,KAAP,CAAP;AACD,OAFM,CAAP;AAGH,KA5sDI;AA6sDLI,qBAAiB,yBAASC,KAAT,EAAgB;AAC/B,UAAIC,WAAWD,KAAf;AACA,UAAGC,aAAa,KAAhB,EAAsB;AACpBjP,gBAAQC,GAAR,CAAY,WAAZ;AACAzI,UAAE,0CAAF,EAA8C+S,MAA9C,CAAqD,eAArD,EAAsEtB,IAAtE,CAA2E,SAA3E,EAAsF,IAAtF;AACAzR,UAAE,0CAAF,EAA8C+S,MAA9C,CAAqD,eAArD,EAAsEtB,IAAtE,CAA2E,SAA3E,EAAsF,KAAtF;AACAzR,UAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACApT,UAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;AAED,OAPD,MAOK;AACHlB,gBAAQC,GAAR,CAAY,WAAZ;AACAzI,UAAE,0CAAF,EAA8C+S,MAA9C,CAAqD,eAArD,EAAsEtB,IAAtE,CAA2E,SAA3E,EAAsF,IAAtF;AACAzR,UAAE,0CAAF,EAA8C+S,MAA9C,CAAqD,eAArD,EAAsEtB,IAAtE,CAA2E,SAA3E,EAAsF,KAAtF;AACAzR,UAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACApT,UAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;AACD;AAGF,KA/tDI;AAguDLgO,mBAAe,yBAAY;AACzB;;AAEE1X,QAAE,iBAAF,EAAqBsT,IAArB;AACAtT,QAAE,MAAF,EAAUoT,QAAV,CAAmB,QAAnB;AACApT,QAAE,KAAF,EAAS0J,WAAT,CAAqB,QAArB;AACH,KAtuDI;AAuuDLiO,kBAAc,wBAAY;AACxB;;AAEE3X,QAAE,iBAAF,EAAqBqT,IAArB;AACArT,QAAE,MAAF,EAAU0J,WAAV,CAAsB,QAAtB;AACA1J,QAAE,KAAF,EAASoT,QAAT,CAAkB,QAAlB;AACApT,QAAE,wDAAF,EAA4DwM,GAA5D,CAAgE,EAAhE,EAAoE+G,MAApE;AAEH,KA/uDI;AAgvDLE,uBAAmB,6BAAW;AAAE;AAC5B;;AAD0B;AAAA;AAAA;;AAAA;AAG1B,+BAAuB,KAAKpN,WAA5B,wIAAyC;AAAA,cAAhC2G,UAAgC;;AACvCA,qBAAW,gBAAX,IAA+B,EAA/B;AACAA,qBAAW,UAAX,IAAyB,IAAzB;AACA,eAAKK,yBAAL,CAA+BL,WAAWb,EAA1C;AACD;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAS1B,WAAKkG,kBAAL;AACA,WAAKR,kBAAL;AACA,WAAKC,mBAAL;AACA,WAAKnC,cAAL;AACA3P,QAAE,kBAAF,EAAsB4X,MAAtB;AACH,KA9vDI;AA+vDL7G,cAAU,kBAAU8G,QAAV,EAAoB;AAC1B,UAAIC,YAAYD,SAASE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAhB;AACA,UAAIC,SAASF,UAAUG,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAb;AACA,aAAOb,KAAKc,KAAL,CAAWC,OAAOC,IAAP,CAAYJ,MAAZ,CAAX,CAAP;AACH,KAnwDI;AAowDLK,YAAQ,gBAAU7O,KAAV,EAAiB;AACrBA,YAAMC,cAAN;AACAN,mBAAamP,KAAb;AACArP,qBAAeqP,KAAf;AACA,WAAK7Q,KAAL,GAAa,EAAb;AACA,WAAKK,IAAL,CAAUvB,IAAV,GAAgB,EAAhB;AACA,WAAKA,IAAL,GAAY,EAAZ;AACA,WAAKtB,QAAL,GAAgB,KAAhB;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKnB,mBAAL,GAA2B,KAA3B;AACA,WAAKkE,QAAL,GAAgB,EAAhB;AACA,WAAKxC,OAAL,GAAe,KAAf;AACA,WAAKH,IAAL,GAAY,EAAZ;AACA,WAAKuB,oBAAL,GAA4B,EAA5B;AACA,WAAKZ,uBAAL,GAA+B,EAA/B;AACA,WAAKkB,cAAL,GAAsB,EAAtB;AACA,WAAKJ,YAAL,GAAoB,KAApB;AACA,WAAKC,qBAAL,GAA6B,KAA7B;AACA,WAAKxC,gBAAL,GAAwB,KAAxB;AACA,WAAK+C,4BAAL,GAAoC,KAApC;AACA,WAAKyJ,iBAAL,CAAuB,YAAvB;AACH,KAzxDI;AA0xDLH,kBAAc,sBAAU5I,QAAV,EAAoB;AAAA;;AAE9B,UAAIsQ,WAAWpU,KAAf;AACA,UAAIA,QAAQ,KAAKA,KAAjB;AACAqE,cAAQC,GAAR,CAAYtE,KAAZ;AACA,WAAK8D,QAAL,GAAgBA,QAAhB;AACA,WAAKa,KAAL,CAAW,OAAX,EAAmB,KAAK3E,KAAxB;AACAA,cAAQuH,mBAAmB,KAAKvH,KAAxB,CAAR;;AAEA;AACA;AACA,UAAIiG,MAAMlL,MAAV;AACA,UAAImL,aAAa,WAASpC,QAA1B;AACA,UAAImC,MAAMA,MAAIC,UAAd;;AAEA,WAAKE,KAAL,CAAWa,GAAX,CAAehB,GAAf,EAAoBM,IAApB,CAAyB,UAACC,QAAD,EAAc;AACnC;AACA,gBAAKxC,QAAL,GAAgBwC,QAAhB;AACA,gBAAK6N,WAAL;AAEH,OALD,EAKG,UAAC7N,QAAD,EAAc;AACb;AACA;;AAEH,OATD;AAWH,KApzDI;AAqzDL6N,iBAAa,uBAAY;AACrBhQ,cAAQC,GAAR,CAAY,aAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKN,QAAL,CAAc3G,IAA1B;AACA,WAAK+E,IAAL,GAAY,KAAK4B,QAAL,CAAc3G,IAAd,CAAmB+E,IAA/B;AACAiC,cAAQC,GAAR,CAAY,eAAe,KAAKlC,IAAhC;AACA,WAAKuC,KAAL,CAAW,MAAX,EAAkB,KAAKvC,IAAvB;;AAEA,cAAQ,KAAKA,IAAb;AACM,aAAK,SAAL;AACMiC,kBAAQC,GAAR,CAAY,iBAAZ;AACA,cAAI,KAAK/D,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,iBAAKO,QAAL,GAAgB,IAAhB;AACA,iBAAK6D,KAAL,CAAW,UAAX,EAAsB,KAAK7D,QAA3B;AACA,iBAAKwL,UAAL,CAAgB,KAAKxI,QAArB;AACD,WAJD,MAIO;AACH,iBAAKA,QAAL,GAAgB,KAAK9D,KAArB;AACA,iBAAK2E,KAAL,CAAW,UAAX,EAAsB,KAAKb,QAA3B;AACAO,oBAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACA,iBAAK+I,iBAAL,CAAuB,YAAvB;AACA,iBAAKP,UAAL,CAAgB,KAAKxI,QAArB;AACH;;AAED;AACN,aAAK,YAAL;AACMO,kBAAQC,GAAR,CAAY,oBAAZ;AACA;AACAD,kBAAQC,GAAR,CAAY,qBAAZ;AACAzI,YAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;;AAEA,eAAK3B,MAAL,GAAc,KAAKG,QAAL,CAAc3G,IAAd,CAAmB2K,EAAjC;AACA3D,kBAAQC,GAAR,CAAY,2BAA2B,KAAKT,MAA5C;AACA,eAAKc,KAAL,CAAW,QAAX,EAAoB,KAAKd,MAAzB;;AAEA;;AAEA,eAAK/C,QAAL,GAAgB,IAAhB;AACA,eAAK6D,KAAL,CAAW,UAAX,EAAsB,KAAK7D,QAA3B;;AAEA,cAAI,KAAK3B,eAAL,KAAyB,IAA7B,EAAmC;AAC7BkF,oBAAQC,GAAR,CAAY,cAAZ;AACA,iBAAKkH,cAAL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEL,WAbD,MAaO;AACD;AACL;AACD;AACN,aAAK,OAAL;AACM;AACAnH,kBAAQC,GAAR,CAAY,eAAZ;AACA;AACN;AACM;AACA,eAAKhD,OAAL,GAAe,KAAf;AACA,eAAKqD,KAAL,CAAW,SAAX,EAAqB,KAAKrD,OAA1B;AACA,cAAI,KAAKf,QAAL,KAAkB,IAAtB,EAA4B;AAC1B8D,oBAAQC,GAAR,CAAY,0BAAZ;AACAzI,cAAE,aAAF,EAAiB2J,KAAjB,CAAuB,MAAvB;AACA3J,cAAE,sBAAF,EAA0B2J,KAA1B,CAAgC,MAAhC;AACD,WAJD,MAIO;AACLnB,oBAAQC,GAAR,CAAY,0BAAZ;AACA,iBAAKuI,iBAAL,CAAuB,eAAvB;AACD;;AA/Db;AAqEM;AACM;AACA;AACN;AACM;AACA;AACA;AACM;AACA;AACN;AACM;AACZ;AACM;;;AAIZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KAj7DI;AAk7DLyH,eAAW,mBAAUxQ,QAAV,EAAoBzC,QAApB,EAA8B;AAAA;;AAErC,WAAKyC,QAAL,GAAgBjI,EAAE,WAAF,EAAewM,GAAf,GAAqBmH,WAArB,GAAmC1F,IAAnC,EAAhB;AACAzF,cAAQC,GAAR,CAAY,mBAAmB,KAAKR,QAApC;AACA,WAAKzC,QAAL,GAAgBxF,EAAE,WAAF,EAAewM,GAAf,GAAqByB,IAArB,EAAhB;AACA,UAAI2C,cAAc,KAAlB;;AAEA;AACA,UAAIxG,MAAM9K,aAAa,MAAvB;AACA;AACA,UAAIwR,cAAc,EAAC,YAAY,KAAK7I,QAAlB,EAA4B,YAAY,KAAKzC,QAA7C,EAAuD,eAAeoL,WAAtE,EAAlB;;AAEA,WAAKrG,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,EAAqB0G,WAArB,EAAkCpG,IAAlC,CAAuC,UAACC,QAAD,EAAc;AACjD;AACAnC,gBAAQC,GAAR,CAAY,SAAZ;AACAD,gBAAQC,GAAR,CAAY,QAAKR,QAAjB;AACA,gBAAKa,KAAL,CAAW,UAAX,EAAuB,QAAKb,QAA5B;AACA,gBAAKC,QAAL,GAAgB,QAAKK,QAAL,CAAc,UAAd,EAA0B,QAAKN,QAA/B,CAAhB;AACAO,gBAAQC,GAAR,CAAY,mBAAmB,QAAKP,QAApC;AACA,gBAAKT,KAAL,GAAakD,SAASF,OAAT,CAAiB,OAAjB,CAAb;AACAjC,gBAAQC,GAAR,CAAY,YAAZ;AACAD,gBAAQC,GAAR,CAAY,QAAKhB,KAAjB;;AAEA,gBAAKK,IAAL,GAAY,QAAKiJ,QAAL,CAAc,QAAKtJ,KAAnB,CAAZ;AACAe,gBAAQC,GAAR,CAAY,QAAKX,IAAjB;;AAEA,YAAI3D,QAAQ,QAAK2D,IAAL,CAAU3D,KAAtB;AACA,gBAAKA,KAAL,GAAaA,KAAb;AACA,gBAAK2E,KAAL,CAAW,OAAX,EAAmB,QAAK3E,KAAxB;AACA,gBAAKmB,IAAL,GAAY,QAAKwC,IAAL,CAAUxC,IAAtB;AACA,gBAAKwD,KAAL,CAAW,MAAX,EAAkB,QAAKxD,IAAvB;;AAGA,gBAAKuC,MAAL,GAAc,IAAd;AACA,gBAAKnD,QAAL,GAAgB,IAAhB;AACA,gBAAKoE,KAAL,CAAW,UAAX,EAAsB,QAAKpE,QAA3B;AACA,gBAAKQ,WAAL,GAAmB,KAAnB;;AAEA,gBAAK2L,YAAL,CAAkB,QAAK3I,QAAvB;AAEH,OA5BD,EA4BG,UAACyC,QAAD,EAAc;AACb;AACA,gBAAKzF,WAAL,GAAmB,IAAnB;AACAlF,UAAE,2BAAF,EAA+BsT,IAA/B;AACA,gBAAKrO,QAAL,GAAgB,KAAhB;AACA,gBAAK6D,KAAL,CAAW,UAAX,EAAsB,QAAK7D,QAA3B;AACA,eAAO,QAAKC,WAAL,EAAkB,QAAKD,QAA9B;AACH,OAnCD;AAoCA,WAAKY,UAAL,GAAkB7F,EAAE,aAAF,EAAiBgS,OAAnC;AACA,WAAKlJ,KAAL,CAAW,YAAX,EAAwB,KAAKjD,UAA7B;AACH,KAp+DI;;AAs+DL+L,uBAAmB,6BAAW;AAAE;;;AAAF;AAAA;AAAA;;AAAA;AAGxB,+BAAuB,KAAKvL,WAA5B,wIAAyC;AAAA,cAAhC2G,UAAgC;;;AAEvCA,qBAAW,UAAX,IAAyB,KAAzB;;AAEA;AACA,cAAI,KAAKvI,gBAAL,CAAsB7C,MAAtB,GAA+B,CAAnC,EAAsC;;AAEpC,gBAAI8W,cAAc1L,WAAWsF,kBAA7B;;AAEA,gBAAIoG,eAAe,IAAnB,EAAyB;AAAA;AAAA;AAAA;;AAAA;;AAEnB,uCAAwB,KAAKjU,gBAA7B,wIAA+C;AAAA,sBAAtCkU,WAAsC;AAAA;AAAA;AAAA;;AAAA;;AAE3C,2CAAuBD,WAAvB,wIAAoC;AAAA,0BAA3BnG,UAA2B;;;AAEhC,0BAAIqG,cAAcrG,WAAWE,QAAX,CAAoB,CAApB,CAAlB;;AAEE,0BAAIkG,YAAYxH,QAAZ,KAAyByH,WAA7B,EAA0C;;AAEpC;;AAEI5L,mCAAW,UAAX,IAAyB,IAAzB;AACJ;AACA;AACL;AAEN;AAf0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB9C;AAnBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBxB;AAEF,WA3BD,MA2BO;AACLxE,oBAAQC,GAAR,CAAY,mCAAZ;AACAuE,uBAAW,UAAX,IAAyB,IAAzB;AACD;AAEF;AAxCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0CxB,WAAK6E,kBAAL;AAIL,KAphEI;AAqhELC,yBAAqB,+BAAW;AAC9B,WAAKD,kBAAL;AACD,KAvhEI;AAwhELA,wBAAoB,8BAAY;AAC5B;AACA;AACA;AACA;AACF,UAAIgH,WAAW,6BAA6Bd,KAA7B,CAAmC,EAAnC,CAAf;AACA,UAAIe,kBAAkB,EAAtB;;AAEA,WAAK5V,gBAAL,GAAwB,EAAxB;;AAR8B;AAAA;AAAA;;AAAA;AAU9B,+BAAmB2V,QAAnB,wIAA6B;AAAA,cAApBE,MAAoB;;AACzB,cAAIC,kBAAkBD,OAAOE,WAAP,EAAtB;AACAH,4BAAkB,EAACC,QAAQC,eAAT,EAA0BrU,aAAa,KAAvC,EAAlB;AACA,eAAKzB,gBAAL,CAAsBsI,IAAtB,CAA2BsN,eAA3B;AACH;AAd6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgB9B,WAAKI,sBAAL,GAA8B,EAA9B;;AAhB8B;AAAA;AAAA;;AAAA;AAmB9B,+BAAuB,KAAK7S,WAAL,CAAiB0M,MAAjB,CAAwB,KAAKnF,uBAA7B,CAAvB,wIAA+E;AAAA,cAAtEZ,UAAsE;;AAC3E,cAAImM,YAAYnM,WAAWN,sBAAX,CAAkCE,SAAlC,CAA4CwM,MAA5C,CAAmD,CAAnD,CAAhB;;AAEA,cAAI,CAAC,KAAKF,sBAAL,CAA4BG,QAA5B,CAAqCF,SAArC,CAAL,EAAuD;AACnD,iBAAKD,sBAAL,CAA4B1N,IAA5B,CAAiC2N,SAAjC;AACH;AACJ;AAzB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4B9B,WAAKhW,YAAL,GAAoB,EAApB;;AA5B8B;AAAA;AAAA;;AAAA;AA8B9B,+BAAwB,KAAKD,gBAA7B,wIAA+C;AAAA,cAAtCoW,WAAsC;;AAC3C;;AAEA,cAAI,KAAKJ,sBAAL,CAA4BG,QAA5B,CAAqCC,WAArC,CAAJ,EAAwD;AACtDA,wBAAY3U,WAAZ,GAA0B,IAA1B;AACA,iBAAKxB,YAAL,CAAkBqI,IAAlB,CAAuB8N,WAAvB;AACD,WAHD,MAGO;AACLA,wBAAY3U,WAAZ,GAA0B,KAA1B;AACA,iBAAKxB,YAAL,CAAkBqI,IAAlB,CAAuB8N,WAAvB;AACD;AACJ;AAxC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA0C9B,+BAAwB,KAAKnW,YAA7B,wIAA2C;AAAA,cAAlCmW,WAAkC;;AACvC,cAAIC,EAAEF,QAAF,CAAW,KAAKH,sBAAhB,EAAwCI,YAAYP,MAApD,CAAJ,EAAiE;AAC7DO,wBAAY3U,WAAZ,GAA0B,IAA1B;AACH;AACJ;AA9C6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CjC,KAvkEM;AAwkEP6U,sBAAkB,0BAAShQ,KAAT,EAAgB;AAC9B,UAAI,KAAKjF,QAAT,EAAmB;AAAA;AAAA;AAAA;;AAAA;;AAEjB,iCAAuB,KAAK8B,WAA5B,wIAAyC;AAAA,gBAAhC2G,UAAgC;;AACvC,gBAAIyM,WAAW,KAAf;AACA,gBAAIzM,WAAW0M,SAAf,EAA0B;AACxB,kBAAIC,MAAM3M,WAAW0M,SAAX,CAAqBE,kBAArB,CAAwCna,EAAlD;AACA,kBAAI6R,UAAUiI,EAAEF,QAAF,CAAWM,GAAX,EAAgB,KAAKpV,QAArB,CAAd;AACA,kBAAI+M,OAAJ,EAAa;AACXmI,2BAAW,IAAX;;AAEA,qBAAKpV,mBAAL,CAAyBmH,IAAzB,CAA8BwB,UAA9B;AACD;AACF;;AAED,gBAAIA,WAAW6M,qBAAX,IAAoC,CAACJ,QAAzC,EAAmD;;AAE/C,kBAAIK,MAAM9M,WAAW6M,qBAAX,CAAiCE,gBAAjC,CAAkD,CAAlD,EAAqDC,aAA/D;AACA,kBAAI1I,UAAUiI,EAAEF,QAAF,CAAWS,GAAX,EAAgB,KAAKvV,QAArB,CAAd;AACA,kBAAI+M,OAAJ,EAAa;AACPmI,2BAAW,IAAX;AACA,qBAAKpV,mBAAL,CAAyBmH,IAAzB,CAA8BwB,UAA9B;AACL;AAEJ;AAEF;AAzBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BjB,aAAK6E,kBAAL;AAED,OA7BD,MA6BO;;AAEH,aAAKxN,mBAAL,GAA2B,KAAKgC,WAAhC;AACA,aAAKyL,mBAAL;AACH;AAEF,KA5mEI;AA6mELmI,2BAAuB,+BAASzQ,KAAT,EAAgB;AACvC,WAAKjF,QAAL,GAAgB,EAAhB;AACA,WAAKF,mBAAL,GAA2B,KAAKgC,WAAhC;AACA,WAAKwL,kBAAL;AACA,WAAKC,mBAAL;AACC;AAlnEI;AAzHL,CAAR","file":"mainEs2015.js","sourcesContent":["\"use strict\";\n// ready translated locales\n//Vue.http.headers.common['Access-Control-Allow-Origin'] = 'https://tss-be.med.uottawa.ca/';\n//Vue.http.headers.common['Access-Control-Request-Method'] = 'GET,PUT,POST,DELETE';\n//Vue.http.headers.common['Access-Control-Allow-Headers'] = 'Content-Type';\n\n// Make the application configuarable - later, this should happen during the build and be transparent to the programmer.\n// Later, this will be imported, and a different version of the file will be used for each build.\nvar env = 'prod';\n\nvar envs = {\n\t'prod': {\n  \t'fomsso': 'https://fomsso.med.uottawa.ca/',\n    'uniweb': 'https://uniweb-service.med.uottawa.ca/',\n    'be': 'https://tss-be.med.uottawa.ca/'\n  },\n\t'staging': {\n  \t'fomsso': 'https://sfomsso.ca',\n    'uniweb': 'https://suniweb.ca',\n    'be': 'https://sbe.ca'\n  }\n}\n\n// Assign to variables to use in the code\nvar be_url = envs[env].be;\nvar uniweb_url = envs[env].uniweb;\nvar fomsso_url = envs[env].fomsso;\n\nvar locales = {\n  en: {\n    message: {\n      \"ADMINMESSAGE\": \"Message\",\n      \"ADMITTED-INTO\": \"Admitted into:\",\n      \"ADMITTED\": \"Have you been admitted into a graduate program at Faculty of Medicine of the University of Ottawa?\",\n      \"ARTICLE-TITLE\": \"Article title:\",\n      \"ASSISTANCE\": \"Need assistance? Visit\",\n      \"ATTACH-ANOTHER\": \"attach another\",\n      \"ATTACH\": \"attach\",\n      \"AVAILABLE-TO-SUPERVISE\": \"Available to supervise \",\n      \"BELOW\": \"Below you will see a list of faculty members who are currently accepting students to supervise. Enter keywords to narrow down the list.\",\n      \"BIOGRAPHY\": \"Biography\",\n      \"CANCEL\": \"Cancel\",\n      \"CHANGE-AVAILABILITY\": \"Change availability\",\n      \"CHANGE-PW\": \"Change your password\",\n      \"CHECK-INBOX\": \"Please check your inbox.\",\n      \"CHOOSE-PW\": \"Please click the following link to choose a new password:\",\n      \"CLEAR\": \"Clear\",\n      \"CLOSE\": \"Close\",\n      \"CODE\": \"Verification code:\",\n      \"CONFERENCE-DATE\": \"Conference Date:\",\n      \"CONFERENCE-NAME\": \"Conference Name:\",\n      \"CONFERENCE-PUBLICATIONS\": \"Conference Publications\",\n      \"CONT-CREATE\": \" where you may continue creating your account.\",\n      \"CONT-RESET\": \" where you may continue resetting your password.\",\n      \"CONTACT-CONVERSATIONS\": \"View conversation with \",\n      \"CONTACT\": \"Contact\",\n      \"CONTINUE-CREATING-ACCOUNT\": \"Please click the following link to continue creating your account:\",\n      \"CONTINUE\": \"Continue\",\n      \"CONV-WITH\": \"Conversation with\",\n      \"CONVERSATIONS\": \"Conversations\",\n      \"CREATE-ACCOUNT\": \"Create account\",\n      \"CREATE-ACCOUNT-FAILED\": \"We have failed to create your account, please verify that the information entered is correct.\",\n      \"CREATE-PW\": \"Enter password:\",\n      \"CREATE-YOUR-ACCOUNT\": \"Create your account\",\n      \"CREATE-YOUR-PROFILE\": \"Create your profile\",\n      \"CURRENTLY-AVAILABLE\": \"Currently available to supervise \",\n      \"CV-WORD-PDF\": \"(Microsoft Word or PDF format):\",\n      \"CV\": \"CV\",\n      \"DEVELOPPED-BY\": \" - Developed by Medtech \",\n      \"DO-HAVE\": \"I have a uOttawa username\",\n      \"DONT-FORGET\": \"Don’t forget to:\",\n      \"DONT-HAVE\": \"I do not have a uOttawa username\",\n      \"EDIT-AVAILABILITY\": \"Edit availability\",\n      \"EDIT-NAME\": \"Edit name\",\n      \"EDIT-ORGANIZATION-TYPE\": \"Edit Organization Type\",\n      \"EDIT-PROFILE\": \"Edit your profile\",\n      \"EMAIL-SENT-VERIFICATION-CODE\": \" which contains a verification code needed to continue with creating your account.\",\n      \"EMAIL-SENT\": \"An email message has been sent to \",\n      \"EMAIL\": \"Email address:\",\n      \"EMAILED-LINK\": \"We’ve emailed you a link at\",\n      \"ENGLISH\": \"English\",\n      \"ENTER-EMAIL-ADDRESS\": \"enter your email address\",\n      \"ENTER-EMAIL-INSTRUCTIONS\": \"Enter your email address and press Continue, and we will check to see if an account exists for that email address.\",\n      \"ENTER-EMAIL\": \"Enter your email:\",\n      \"ENTER-MESSAGE\": \"Enter your message below.\",\n      \"ENTER-NAME\": \"enter name\",\n      \"ENTER-NEW-PW\": \"Please enter your new password.\",\n      \"ENTER-PASSWORD\": \"Please enter your password\",\n      \"ENTER-PW\": \". Please enter your password.\",\n      \"ENTER-VERIFICATION-CODE\": \"enter your verification code\",\n      \"ENTER-YOUR-PASSWORD\": \"enter your password\",\n      \"ERROR\": \"An error occurred while loading the researchers!\",\n      \"EXISTING-ACCOUNT\": \"Not certain whether you have an existing account?\",\n      \"EXT\": \"ext:\",\n      \"FACULTY-ADDRESS\": \"Faculty of Medicine <br> Roger Guindon Hall<br> Room<br> 451 Smyth Road <br>Ottawa, ON K1H 8M5\",\n      \"FACULTY-OF-MEDICINE\": \"Faculty of Medicine\",\n      \"FILTER-INTERESTS\": \"Filter Interests:\",\n      \"FILTERED-INTERESTS\": \"Filtered Interests:\",\n      \"FOR-ASSISTANCE\": \" For assistance, please contact\",\n      \"FORGOT-PW\": \"Forgot password\",\n      \"FUNDING-CLINICAL-RESEARCH\": \"Clinical research project: \",\n      \"FUNDING-END-DATE\": \"End date: \",\n      \"FUNDING-GRANT-TYPE\": \"Grant type: \",\n      \"FUNDING-TITLE\": \"Title: \",\n      \"FUNDING-PROJECT-DESCRIPTION\": \"Project description: \",\n      \"FUNDING-PROGRAM-NAME\": \"Program name: \",\n      \"FUNDING-PROGRAM-ORGANIZATION\": \"Program organization: \",\n      \"FUNDING-START-DATE\": \"Start date: \",\n      \"FUNDING-TYPE\": \"Funding type: \",\n      \"FREE-TEXT\": \"Free text search:\",\n      \"FRENCH\": \"Français\",\n      \"GO\": \"Go\",\n      \"GRAD-STUDIES\": \"Graduate and Postdoctoral Studies\",\n      \"GRAD-STUDIES-OFFICE\": \"Graduate and Postdoctoral Studies Office\",\n      \"GRANT\": \"Grants\",\n      \"HAVE-OR-CREATE\": \", you must have or create an account. Not certain whether you have an existing account?\",\n      \"HELP-DESK\": \"<a href='http://www.med.uottawa.ca/medtech/help/' target='_blank'>Help desk</a>.\",\n      \"HELP-URL\": \"http://www.med.uottawa.ca/medtech/help/\",\n      \"HIDE-PW\": \"Hide password\",\n      \"HOME\": \"Home\",\n      \"HOURS-DATE-SUMMER\": \"June 1st to August 31st <br> Monday to Friday <br> 9 a.m. to 3:30 p.m\",\n      \"HOURS-DATE\": \"September 1st to May 31st <br> Monday to Friday <br> 9 a.m. to 4:30 p.m. \",\n      \"HOURS-DAY\": \"Monday to Friday\",\n      \"HOURS-TIME-SUMMER\": \"9 a.m. to 3:30 p.m\",\n      \"HOURS-TIME\": \"9 a.m. to 4:30 p.m.\",\n      \"HOURS\": \"Hours of Operation\",\n      \"IF-COPY-PASTE\": \"If you copied and pasted a link from an email, please make sure you didn’t miss any characters, and try again.\",\n      \"IF-DONT-RECEIVE\": \"If you do not receive the email within an hour, we can\",\n      \"IN-ORDER-TO-CONTACT-RESEARCHER\": \"In order to contact a researcher,\",\n      \"IN-ORDER-TO-CONTACT\": \"In order to contact \",\n      \"INCLUDE-INFO\": \"Include information on your research experience and academic background\",\n      \"INITIAL\": \"Initial communication with\",\n      \"INTRODUCE\": \"Introduce yourself.\",\n      \"INVALID-KEY\": \"Invalid key\",\n      \"IS-INVALID\": \" is invalid.\",\n      \"JOURNAL-ARTICLES\": \"Journal Articles\",\n      \"LANGUAGE-DISCLAIMER\": \"English version not available. French version follows:\",\n      \"LANGUAGE-SELECTION\": \"Language selection\",\n      \"LEVEL\": \"Level applying for:\",\n      \"LINK-AND-CODE\": \"A link and verification code have been sent to you at\",\n      \"LOG-IN-FAILED\": \"The login failed with the credentials provided. Please reenter and try again.\",\n      \"LOG-IN-FAILED-RESET\": \"The login failed with the credentials provided.\",\n      \"LOG-IN-OR-CREATE\": \" please log in (or create an account)\",\n      \"LOG-IN\": \"Log in\",\n      \"LOG-OUT\": \"Log out\",\n      \"LOGIN-RESEARCHER\" : \"You must login to view your conversations\",\n      \"MARK-READ\": \"Mark as read\",\n      \"MESSAGE-FOLLOWS\": \"Message from student follows. Write ABOVE THIS LINE to reply.\",\n      \"MESSAGE\": \"Message:\",\n      \"MSC\": \"M.Sc.\",\n      \"NAME\": \"Name:\",\n      \"NEW-MESSAGES\": \" new messages\",\n      \"NEW-PW\": \"Welcome back to Thesis Supervisor Search. We recently received a request for a new password for this email address.\",\n      \"NEW-UNREAD-MESSAGES\": \"You have new unread messages from \",\n      \"NO-NEW-UNREAD-MESSAGES\": \"You have no new messages from \",\n      \"NO\": \"No\",\n      \"NOT-ADMITTED-YET\": \"Not currently accepted into a program\",\n      \"NOT-CURRENTLY-AVAILABLE\": \"I am not currently available to supervise\",\n      \"NOT-LOGGED-IN\": \"You are not logged in\",\n      \"NOT-MONITORED\": \"Please note this account is not monitored. If you have questions, please visit\",\n      \"OTTAWA\": \"Ottawa, ON K1H 8M5\",\n      \"PASSWORD\": \"Password:\",\n      \"PHD\": \"Ph.D.\",\n      \"PROFILE\": \"Profile\",\n      \"PROGRAM\": \"Program:\",\n      \"PROOFREAD\": \"Proofread.\",\n      \"PROVIDE-INFO\": \"Please provide some information about yourself.\",\n      \"PUBLICATION-DATE\": \"Publication date:\",\n      \"PUBLICATION-TITLE\": \"Publication title:\",\n      \"PUBLICATIONS\": \"Publications\",\n      \"PW\": \"Password:\",\n      \"REMEMBER-ME\": \"Remember me\",\n      \"REMOVE\": \"remove\",\n      \"RESEARCH-DESCRIPTION\": \"Research Description\",\n      \"RESEARCH-INTERESTS\": \"Research interests\",\n      \"RESEARCHER-PROFILE\": \"Researcher profile\",\n      \"RESEND-EMAIL\": \"Resend Email\",\n      \"RESEND\": \"resend it to you\",\n      \"RESET-IT\": \"Reset it \",\n      \"RESULTS\": \" results\",\n      \"RGN\": \"Roger Guindon Hall\",\n      \"ROOM\": \"Room\",\n      \"SAVE-MESSAGE\": \"Save Message\",\n      \"SAVE\": \"Save\",\n      \"SEARCH\": \"Search\",\n      \"SEE-ATTACHED\": \"see attached\",\n      \"SELECT-PROGRAM\": \"Select program\",\n      \"SELECT-RESEARCH\": \"Select research interests:\",\n      \"SELECT\": \"Select\",\n      \"SEND-MESSAGE\": \"Send Message\",\n      \"SEND\": \"Send\",\n      \"SENT-ON\": \"Sent on: \",\n      \"SENT\": \"SENT:\",\n      \"SHOWING\": \"Showing \",\n      \"SKIP\": \"Skip to main content\",\n      \"SMYTH\": \"451 Smyth Road\",\n      \"STARTING-FROM\":\"as of \",\n      \"STATE-INTERESTS\": \"State your interests clearly and how they match with the Faculty member.\",\n      \"STUDENT-PROFILE\": \"Student profile\",\n      \"THANK-YOU\": \"Thank you for your interest in the University of Ottawa. At the Faculty of Medicine of the University of Ottawa, we teach to heal.\",\n      \"THE-KEY\": \"A problem has occurred: the key \",\n      \"THIS-ADDRESS-NOT-EXIST\": \" does not exist in our records. To proceed, click \\\"Create account\\\".\",\n      //\"THIS-ADDRESS-NOT-EXIST\": \" does not exist in our records. To proceed, click \\\"Create account\\\". A confirmation will be sent to this address.\",\n      \"THIS-ADDRESS\": \"This address \",\n      \"THIS-MESSAGE\": \"This message will be visible to administrators of the Graduate and Postdoctoral Studies Office of the Faculty of Medicine.\",\n      \"THIS-PROFILE\": \"This profile will be visible to researchers you communicate with, as well as administrators of the Graduate and Postdoctoral Studies Office of the Faculty of Medicine.\",\n      \"THIS-WILL-BE-USERNAME\": \"This will be your username.\",\n      \"TIPS\": \"Tips\",\n      \"TO-CONTACT\": \"To contact\",\n      \"TO-RESET-PASSWORD\": \"To reset your password, please enter your new password.\",\n      \"TOGGLE-NAVIGATION\": \"Toggle navigation\",\n      \"TRANSCRIPTS-WORD-PDF\": \"(Microsoft Word or PDF format. Unofficial transcripts are acceptable):\",\n      \"TRANSCRIPTS\": \"Transcripts\",\n      \"TRY-AGAIN\": \", and try again.\",\n      \"TSS\": \"Thesis Supervisor Search\",\n      \"TY\": \"Thank You.\",\n      \"UNREAD\": \"Unread \",\n      \"USERNAME\": \"Username:\",\n      \"VERIFICATION\": \"Verification code:\" ,\n      \"VIEW-CONV\": \"View conversation online:\",\n      \"VIEW-CONVERSATIONS\": \"View conversations\",\n      \"VIEW-MESSAGES\": \"View older messages\",\n      \"VIEW-PROFILE\": \"View profile\",\n      \"VIEW-PW\": \"View password\",\n      \"VIEWED-ON\": \"Viewed on: \",\n      \"VIEWED-UNREAD\": \"VIEWED: UNREAD\",\n      \"VIEWED\": \"Viewed:\",\n      \"VISIBLE\": \"Replies will be visible to administrators of the Graduate and Postdoctoral Studies Office of the Faculty of Medicine.\",\n      \"VISIT-WEBSITE\": \"Visit website \",\n      \"WE-WILL-GUIDE\": \"We will guide you through the search for your thesis supervisor.\",\n      \"WE-WILL\": \"We will guide you through the search for your thesis supervisor.\",\n      \"WELCOME-BACK\": \"Welcome back\",\n      \"WELCOME-TO\": \"Welcome to Thesis Supervisor Search \",\n      \"WELCOME\": \"Welcome\",\n      \"WHICH\": \"Which one?\",\n      \"YES\": \"Yes\",\n      \"YOU-HAVE\": \"You have \",\n      \"YOUR-CODE\": \"Your verification code is\"\n    }\n  },\n  fr: {\n    message: {\n      \"ADMINMESSAGE\": \"Message\",\n      \"ADMITTED-INTO\": \"Admis en :\",\n      \"ADMITTED\": \"Avez-vous été admis dans un programme d’études supérieures à la Faculté de médecine de l’Université d’Ottawa?\",\n      \"ARTICLE-TITLE\": \"Le titre de l'article :\",\n      \"ASSISTANCE\": \"Besoin d’aide? Visitez le\",\n      \"ATTACH-ANOTHER\": \"joindre un autre relevé\",\n      \"ATTACH\": \"joindre\",\n      \"AVAILABLE-TO-SUPERVISE\": \"Disponible pour superviser \",\n      \"BELOW\": \"Vous trouverez ci-dessous une liste des membres du corps professoral qui sont disponible pour diriger des étudiants. Entrez des mots-clés pour cibler votre recherche.\",\n      \"BIOGRAPHY\": \"Biographie\",\n      \"CANCEL\": \"Annuler\",\n      \"CHANGE-AVAILABILITY\": \"Changer votre disponibilité\",\n      \"CHANGE-PW\": \"Modifier votre mot de passe\",\n      \"CHECK-INBOX\": \"Veuillez vérifier votre boîte de réception.\",\n      \"CHOOSE-PW\": \"Cliquez sur le lien suivant pour choisir un nouveau mot de passe :\",\n      \"CLEAR\": \"Effacer\",\n      \"CLOSE\": \"Fermer\",\n      \"CODE\": \"Code de vérification :\",\n      \"CONFERENCE-DATE\": \"Date de la conférence :\",\n      \"CONFERENCE-NAME\": \"Nom de la conférence:\",\n      \"CONFERENCE-PUBLICATIONS\": \"Articles de conférence\",\n      \"CONT-CREATE\": \". Vous pourrez poursuivre la création de votre compte.\",\n      \"CONT-RESET\": \". Vous pourrez poursuivre la réinitialisation de votre mot de passe.\",\n      \"CONTACT-CONVERSATIONS\": \"Voir la discussion avec \",\n      \"CONTACT\": \"Contacter\",\n      \"CONTINUE-CREATING-ACCOUNT\": \"Cliquez sur le lien suivant pour poursuivre la création de votre compte :\",\n      \"CONTINUE\": \"Continuer\",\n      \"CONV-WITH\": \"Conversation avec\",\n      \"CONVERSATIONS\": \"Conversations\",\n      \"CREATE-ACCOUNT\": \"Créer un compte\",\n      \"CREATE-ACCOUNT-FAILED\": \"Nous n'avons pas réussi à créer votre compte, vérifiez que les informations saisies sont correctes.\",\n      \"CREATE-PW\": \"Entrer un mot de passe :\",\n      \"CREATE-YOUR-ACCOUNT\": \"Créer un compte\",\n      \"CREATE-YOUR-PROFILE\": \"Créez votre profil\",\n      \"CURRENTLY-AVAILABLE\": \"Je suis actuellement disponible pour superviser \",\n      \"CV-WORD-PDF\": \"(format Microsoft Word ou PDF) :\",\n      \"CV\": \"CV\",\n      \"DEVELOPPED-BY\": \" - Développé par Medtech\",\n      \"DO-HAVE\": \"J’ai un nom d’utilisateur uOttawa\",\n      \"DONT-FORGET\": \"N’oubliez pas de :\",\n      \"DONT-HAVE\": \"Je n’ai pas de nom d’utilisateur uOttawa\",\n      \"EDIT-AVAILABILITY\": \"Modifier la disponibilité\",\n      \"EDIT-NAME\": \"modifier votre nom\",\n      \"EDIT-ORGANIZATION-TYPE\": \"Modifier le type d'organisation\",\n      \"EDIT-PROFILE\": \"Modifier votre profil\",\n      \"EMAIL-SENT-VERIFICATION-CODE\": \" qui contient un code de vérification nécessaire pour poursuivre la création de votre compte.\",\n      \"EMAIL-SENT\": \"Un courriel a été envoyé à \",\n      \"EMAIL\": \"Adresse courriel :\",\n      \"EMAILED-LINK\": \"Nous avons envoyé un lien à\",\n      \"ENGLISH\": \"English\",\n      \"ENTER-EMAIL-ADDRESS\": \"entrer votre adresse courriel\",\n      \"ENTER-EMAIL-INSTRUCTIONS\": \"Entrez votre adresse courriel et appuyez sur continuer, et nous allons vérifier pour voir si un compte existe pour cette adresse courriel.\",\n      \"ENTER-EMAIL\": \"Entrez votre adresse courriel :\",\n      \"ENTER-MESSAGE\": \"Inscrivez votre message ci-dessous.\",\n      \"ENTER-NAME\": \"entrez le nom\",\n      \"ENTER-NEW-PW\": \"Entrer votre nouveau mot de passe.\",\n      \"ENTER-PASSWORD\": \"Entrez votre mot de passe\",\n      \"ENTER-PW\": \". Entrez votre mot de passe.\",\n      \"ENTER-VERIFICATION-CODE\": \"entrer votre code de vérification\",\n      \"ENTER-YOUR-PASSWORD\": \"entrer votre mot de passe\",\n      \"ERROR\": \"Une erreur est survenue lors du chargement des chercheurs!\",\n      \"EXISTING-ACCOUNT\": \"Vous ne savez pas si vous avez un compte?\",\n      \"EXT\": \"poste :\",\n      \"FACULTY-ADDRESS\": \"Faculty of Medicine <br> Roger Guindon Hall<br> Room<br> 451 Smyth Road <br>Ottawa, ON K1H 8M5\",\n      \"FACULTY-OF-MEDICINE\": \"Faculté de médecine\",\n      \"FILTER-INTERESTS\": \"Filtrer les intérêts :\",\n      \"FILTERED-INTERESTS\": \"Les intérêts filtrés:\",\n      \"FOR-ASSISTANCE\": \"Pour de l'aide, s'il vous plaît contacter\",\n      \"FORGOT-PW\": \"J’ai oublié mon mot de passe\",\n      \"FREE-TEXT\": \"Recherche en texte libre :\",\n      \"FRENCH\": \"Français\",\n      \"FUNDING-CLINICAL-RESEARCH\": \"Projet de recherche clinique : \",\n      \"FUNDING-END-DATE\": \"Date de fin : \",\n      \"FUNDING-GRANT-TYPE\": \"Type de subvention : \",\n      \"FUNDING-TITLE\": \"Titre : \",\n      \"FUNDING-PROJECT-DESCRIPTION\": \"Description du projet : \",\n      \"FUNDING-PROGRAM-NAME\": \"Nom du programme : \",\n      \"FUNDING-PROGRAM-ORGANIZATION\": \"Organisation du programme : \",\n      \"FUNDING-START-DATE\": \"Date de début : \",\n      \"FUNDING-TYPE\": \"Type de financement : \",\n      \"GO\": \"Allez-y\",\n      \"GRAD-STUDIES\": \"Bureau des études supérieures et postdoctorales\",\n      \"GRAD-STUDIES-OFFICE\": \"Bureau des études supérieures et postdoctorales\",   \n      \"GRANT\": \"Subventions\",\n      \"HAVE-OR-CREATE\": \", vous devez posséder un compte ou en créer un.\",\n      \"HELP-DESK\": \"<a href='http://www.med.uottawa.ca/medtech/help/' target='_blank'>Help desk</a>\",\n      \"HIDE-PW\": \"cacher le mot de passe\",\n      \"HOME\": \"Accueil\",\n      \"HOURS-DATE-SUMMER\": \"du 1 Juin au 31 août <br> du lundi au vendredi <br> de 9h à 15h30\",\n      \"HOURS-DATE\": \"du 1 septembre au 31 mai <br> du lundi au vendredi <br> de 9h à 16h30\",\n      \"HOURS-DAY\": \"du lundi au vendredi\",\n      \"HOURS-TIME-SUMMER\": \"de 9h à 15h30\",\n      \"HOURS-TIME\": \"de 9h à 16h30\",\n      \"HOURS\": \"Heures d'ouverture\",\n      \"IF-COPY-PASTE\": \"Si vous avez copié-collé le lien depuis un courriel, veuillez vérifier si vous avez sélectionné tous les caractères, puis réessayez.\",\n      \"IF-DONT-RECEIVE\": \"Si vous ne recevez pas le courriel dans l’heure qui suit, nous pouvons vous\",\n      \"IN-ORDER-TO-CONTACT-RESEARCHER\": \"Pour communiquer avec des professeurs, \",\n      \"IN-ORDER-TO-CONTACT\": \"Pour communiquer avec \",\n      \"INCLUDE-INFO\": \"ajouter des informations sur votre expérience de recherche et votre formation universitaire;\",\n      \"INITIAL\": \"Communication initiale avec\",\n      \"INTRODUCE\": \"vous presenter;\",\n      \"INVALID-KEY\": \"Clé non valide\",\n      \"IS-INVALID\": \"» n’est pas valide.\",\n      \"JOURNAL-ARTICLES\": \"Articles de revue\",\n      \"LANGUAGE-DISCLAIMER\": \"Version française non disponible. Version anglaise suit :\",\n      \"LANGUAGE-SELECTION\": \"Sélection de la langue\",\n      \"LEVEL\": \"Niveau d’études demandé :\",\n      \"LINK-AND-CODE\": \"Un lien et un code de vérification ont été envoyés à\",\n      \"LOG-IN-FAILED\": \"La connexion a échoué avec les informations d'identification que vous avez fournies. S'il vous plaît re entrer et essayer à nouveau.\",\n      \"LOG-IN-FAILED-RESET\": \"La connexion a échoué avec les informations d'identification que vous avez fournies.\",\n      \"LOG-IN-OR-CREATE\": \"ouvrez une session (ou créez-vous un compte)\",\n      \"LOG-IN\": \"Ouvrez une session\",\n      \"LOG-OUT\": \"Se déconnecter\",\n      \"LOGIN-RESEARCHER\" : \"Vous devez vous connecter pour voir vos conversations\",\n      \"MARK-READ\": \"Marqué comme lu\",\n      \"MESSAGE-FOLLOWS\": \"Le message d’un étudiant suit. Répondez SOUS CETTE LIGNE.\",\n      \"MESSAGE\": \"Message :\",\n      \"MSC\": \"M. Sc.\",\n      \"NAME\": \"Nom :\",\n      \"NEW-MESSAGES\": \" nouveaux messages\",\n      \"NEW-PW\": \"Bienvenue dans l’outil de recherche d’un directeur de thèse. Nous avons reçu récemment une demande de nouveau mot de passe à cette adresse courriel.\",\n      \"NEW-UNREAD-MESSAGES\": \"Vous avez de nouveaux messages non lus de \",\n      \"NO-NEW-UNREAD-MESSAGES\": \"Vous n'avez pas de nouveaux messages non lus de \",\n      \"NO\": \"Non\",\n      \"NOT-ADMITTED-YET\": \"Pas actuellement admis à un programme.\",\n      \"NOT-CURRENTLY-AVAILABLE\": \"Je ne suis pas actuellement disponible pour superviser\",\n      \"NOT-LOGGED-IN\": \"Vous n'êtes pas connecté\",\n      \"NOT-MONITORED\": \"Veuillez noter que ce compte n’est pas surveillé. Si vous avez des questions, visitez le\",\n      \"OTTAWA\": \"Ottawa, ON K1H 8M5\",\n      \"PASSWORD\": \"Mot de passe :\",\n      \"PHD\": \"Ph. D.\",\n      \"PROFILE\": \"Profil\",\n      \"PROGRAM\": \"Programme :\",\n      \"PROOFREAD\": \"Passer en revue votre demande.\",\n      \"PROVIDE-INFO\": \"Veuillez fournir des informations sur vous.\",\n      \"PUBLICATION-DATE\": \"Date de la publication :\",\n      \"PUBLICATION-TITLE\": \"Titre de la publication :\",\n      \"PUBLICATIONS\": \"Publications\",\n      \"PW\": \"Mot de passe :\",\n      \"REMEMBER-ME\": \"Se souvenir de moi\",\n      \"REMOVE\": \"supprimer\",\n      \"RESEARCH-DESCRIPTION\": \"Description de la recherche\",\n      \"RESEARCH-INTERESTS\": \"Intérêts de recherche\",\n      \"RESEARCHER-PROFILE\": \"Profil du superviseur \",\n      \"RESEND-EMAIL\": \"Envoyer le courriel à nouveau\",\n      \"RESEND\": \"l’envoyer à nouveau\",\n      \"RESET-IT\": \"Réinitialiser le \",\n      \"RESULTS\": \" résultats\",\n      \"RGN\": \"Pavillon Roger Guindon\",\n      \"ROOM\": \"Pièce\",\n      \"SAVE\": \"Sauvegarder\",\n      \"SEARCH\": \"Recherche\",\n      \"SEE-ATTACHED\": \"voir ci-joint\",\n      \"SELECT-PROGRAM\": \"Sélectionnez un programme\",\n      \"SELECT-RESEARCH\": \"Sélectionnez des intérêts de recherche :\",\n      \"SELECT\": \"Sélectionnez\",\n      \"SEND-MESSAGE\": \"Envoyer le message\",\n      \"SEND\": \"Envoyer\",\n      \"SENT-ON\": \"Envoyé le : \",\n      \"SENT\": \"ENVOYÉ :\",\n      \"SHOWING\": \"Affichage de \",\n      \"SKIP\": \"Passer au contenu principal\",\n      \"SMYTH\": \"451 chemin smyth\",\n      \"STARTING-FROM\":\"à partir de : \",\n      \"STATE-INTERESTS\": \"indiquer clairement vos intérêts et leur lien avec le professeur ou la professeure;\",\n      \"STUDENT-PROFILE\": \"Profil de l’étudiant\",\n      \"THANK-YOU\": \"Nous vous remercions de l’intérêt que vous témoignez envers l’Université d’Ottawa. À la Faculté de médecine de l’Université d’Ottawa, nous enseignons à guérir.\",\n      \"THE-KEY\": \"Un problème est survenu : la clé «\",\n      \"THIS-ADDRESS-NOT-EXIST\": \" n’apparaît pas dans nos dossiers. Pour continuer, cliquez sur « Créer un compte ».\",\n      //\"THIS-ADDRESS-NOT-EXIST\": \" n’apparaît pas dans nos dossiers. Pour continuer, cliquez sur « Créer un compte ». Un message de confirmation sera envoyé à cette adresse.\",\n      \"THIS-ADDRESS\": \"Cette adresse \",\n      \"THIS-MESSAGE\": \"Ce message sera visible pour les administrateurs du Bureau des études supérieures et postdoctorales de la Faculté de médecine.\",\n      \"THIS-PROFILE\": \"Ce profil sera visible pour les chercheurs avec lesquels vous communiquerez, de même que pour les administrateurs du Bureau des études supérieures et postdoctorales de la Faculté de médecine.\",\n      \"THIS-WILL-BE-USERNAME\": \"Ce sera votre nom d’utilisateur.\",\n      \"TIPS\": \"Conseils\",\n      \"TO-CONTACT\": \"Pour communiquer avec\",\n      \"TO-RESET-PASSWORD\": \"S'il vous plaît entrer votre nouveau mot de passe afain de réinitialisation de votre mot de passe.\",\n      \"TOGGLE-NAVIGATION\": \"Basculer la navigation\",\n      \"TRANSCRIPTS-WORD-PDF\": \"(format Microsoft Word ou PDF. Les relevés de notes non officiels sont acceptés) :\",\n      \"TRANSCRIPTS\": \"Relevés de notes\",\n      \"TRY-AGAIN\": \", essayez de nouveau.\",\n      \"TSS\": \"Recherche d’un directeur de thèse\",\n      \"TY\": \"Merci.\",\n      \"UNREAD\": \"Non lus \",\n      \"USERNAME\": \"Nom d’utilisateur :\",\n      \"VERIFICATION\": \"Code de vérification :\",\n      \"VIEW-CONV\": \"Lisez la conversation en ligne :\",\n      \"VIEW-CONVERSATIONS\": \"Voir les conversations\",\n      \"VIEW-MESSAGES\": \"Voir anciens messages\",\n      \"VIEW-PROFILE\": \"Voir le profil\",\n      \"VIEW-PW\": \"voir le mot de passe\",\n      \"VIEWED-ON\": \"Lu le : \",\n      \"VIEWED\": \"Viewed:\",\n      \"VISIBLE\": \"Les réponses seront visibles pour les administrateurs du Bureau des études supérieures et postdoctorales de la Faculté de médecine.\",\n      \"VISIT-WEBSITE\": \"Visitez le site internet \",\n      \"WE-WILL-GUIDE\": \"Nous vous guiderons au long du processus de recherche d’un directeur de thèse.\",\n      \"WE-WILL\": \"Nous vous guiderons au long du processus de recherche d’un directeur de thèse.\",\n      \"WELCOME-BACK\": \"Bienvenue\",\n      \"WELCOME-TO\": \"Bienvenue dans l’outil de recherche d’un directeur de thèse\",\n      \"WELCOME\": \"Bienvenue\",\n      \"WHICH\": \"Lequel?\",\n      \"YES\": \"Oui\",\n      \"YOU-HAVE\": \"Vous avez \",\n      \"YOUR-CODE\": \"Votre code de vérification est\"\n      }\n  }\n}\n\n// install plugin\nVue.use(VueI18n);\n\n\n// set lang\nvar defaultLanguage = $('html').attr('lang');\nVue.config.lang = defaultLanguage;\n\n// set locales\nObject.keys(locales).forEach(function (lang) {\n  Vue.locale(lang, locales[lang])\n})\n\n\n\nVue.component(\"researcher-component\", {\n       template: \"<h2 role='heading' aria-level='2'>Researcher area</h2>\",\n       props: [\"role\"],\n})\n\nVue.component(\"conversation-component\", {\n       template: \"<h2 role='heading' aria-level='2'>Conversations</h2>\",\n       props: [\"conversations\"],\n})\n\n\n\n\nVue.component('admin-component', {\n  template: '\\\n    <div v-once>\\\n      <h2 role=\"heading\" aria-level=\"2\">Thesis Supervisor Search</h2>\\\n      <h3 role=\"heading\" aria-level=\"3\">Student Reports</h3>\\\n      <table class=\"sorttable table table-sm\">\\\n      <caption>Profiles Created, by month (last 12 months)</caption>\\\n      <thead>\\\n      <th>Apr 2015</th>\\\n      <th>May 2015</th>\\\n      <th>Jun 2015</th>\\\n      <th>Jul 2015</th>\\\n      <th>Aug 2015</th>\\\n      <th>Sep 2015</th>\\\n      <th>Oct 2015</th>\\\n      <th>Nov 2015</th>\\\n      <th>Dec 2015</th>\\\n      <th>Jan 2016</th>\\\n      <th>Feb 2016</th>\\\n      <th>Mar 2016</th>\\\n      </thead>\\\n      <tbody>\\\n      <td>8</td>\\\n      <td>3</td>\\\n      <td>12</td>\\\n      <td>0</td>\\\n      <td>3</td>\\\n      <td>2</td>\\\n      <td>5</td>\\\n      <td>1</td>\\\n      <td>9</td>\\\n      <td>2</td>\\\n      <td>6</td>\\\n      <td>8</td>\\\n      </tbody>\\\n      </table>\\\n      <table class=\"sorttable table table-sm\">\\\n      <caption>Students in the system</caption>\\\n      <thead>\\\n      <tr>\\\n      <th>Profile Creation</th>\\\n      <th>Name</th>\\\n      <th>Email</th>\\\n      <th>Student Number</th>\\\n      <th>Masters Ph.D.</th>\\\n      <th>Talked with...</th>\\\n      <th>Message Sent</th>\\\n      </tr>\\\n      </thead>\\\n      <tbody>\\\n      <tr>\\\n      <td>2016-03-20</td>\\\n      <td>Sam Lacroix</td>\\\n      <td>slacroix@gmail.com</td>\\\n      <td></td>\\\n      <td>Ph.D.</td>\\\n      <td>Lena Hunger</td>\\\n      <td>2</td>\\\n      </tr>\\\n      <tr>\\\n      <td>2016-03-17</td>\\\n      <td>Kenneth Frinst</td>\\\n      <td>frinst@hotmail.com</td>\\\n      <td></td>\\\n      <td>Ms.C.</td>\\\n      <td>Francine Prudhomme</td>\\\n      <td>6</td>\\\n      </tr>\\\n      <tr>\\\n      <td>2016-03-29</td>\\\n      <td>Sally Anders</td>\\\n      <td>sanders@uottawa.ca</td>\\\n      <td>81229339</td>\\\n      <td>Ph.D.</td>\\\n      <td>LenaHunger, Francine Prudhomme</td>\\\n      <td>3</td>\\\n      </tr>\\\n      <tr>\\\n      <td colspan=\"3\">Total Averages</td>\\\n      <td>1 internal, 2 externals</td>\\\n      <td>1 M.Sc., 2 Ph.D.</td>\\\n      <td>Mean: 1.3 researchers,  Median: 2 researchers, </td>\\\n      <td>Mean: 3.7, Median: 3</td>\\\n      </tr>\\\n      </tbody>\\\n      </table>\\\n      <hr>\\\n      <h3 role=\"heading\" aria-level=\"3\">Supervisor Reports</h3>\\\n      <table class=\"sorttable table table-sm\">\\\n      <caption>Responses</caption>\\\n      <thead>\\\n      <th>Name</th>\\\n      <th>Mean Response Time (days)</th>\\\n      <th>Median Response Time (days)</th>\\\n      <th>Unreturned Contacts</th>\\\n      </thead>\\\n      <tbody>\\\n      <tr>\\\n      <td>Shawn Aaron</td>\\\n      <td>2.6</td>\\\n      <td>2</td>\\\n      <td>0</td>\\\n      </tr>\\\n      <tr>\\\n      <td>Steffany Bennett</td>\\\n      <td>2.2</td>\\\n      <td>2</td>\\\n      <td>5</td>\\\n      </tr>\\\n      <tr>\\\n      <td>Jacques Bradwejn</td>\\\n      <td>193.5</td>\\\n      <td>102</td>\\\n      <td>15</td>\\\n      </tr>\\\n      <tr>\\\n      <td>Paul Bragg</td>\\\n      <td>3.5</td>\\\n      <td>3</td>\\\n      <td>2</td>\\\n      </tr>\\\n      </tbody>\\\n      </table>\\\n    </div>\\\n  '\n})\n\n\n\n\n\nVue.component(\"student-component\", {\n       template: \"<h2 role='heading' aria-level='2'>Student area</h2>\",\n       props: [\"role\"],\n})\n\nVue.component(\"student-profile-component\", {\n       template: \"<h2 role='heading' aria-level='2'>Student Profile</h2>\",\n       props: [\"profile\"],\n})\n\n// var selint = new Vue();\n\nVue.component(\"interests-component\", {\n      template: '<li><label><input type=\"checkbox\"  @click=\"toggle\"> {{ myInterests }}<span class=\"counter\"></span></label></li>',\n      props: ['myInterests'],\n      // props: {\n      //   name: 'myInterests',\n      //   model: Object\n      // },\n      methods: {\n        toggle: function (e) {\n          // console.log('checked');\n\n        }\n      }\n})\n\n// Text truncation function, found at http://codereview.stackexchange.com/questions/92801/truncating-text-with-jquery-but-keep-the-html-formatting\nfunction cutKeepingTags (elem, reqCount) {\n  var grabText = '',\n      missCount = reqCount;\n  $(elem).contents().each(function() {\n    switch (this.nodeType) {\n      case Node.TEXT_NODE:\n        // Get node text, limited to missCount.\n        grabText += this.data.substr(0,missCount);\n        missCount -= Math.min(this.data.length, missCount);\n        break;\n      case Node.ELEMENT_NODE:\n        // Explore current child:\n        var childPart = cutKeepingTags(this, missCount);\n        grabText += childPart.text;\n        missCount -= childPart.count;\n        break;\n    }\n    if (missCount == 0) {\n      // We got text enough, stop looping.\n      return false;\n    }\n  });\n  return {\n    text:\n      // Wrap text using current elem tag.\n      elem.outerHTML.match(/^<[^>]+>/m)[0]\n      + grabText\n      + '</' + elem.localName + '>',\n    count: reqCount - missCount\n  };\n}\n\n\n\nVue.component('short-description', {\n  props: ['desc', 'lang'],\n  template: '<div v-html=shortdesc></div>',\n\n  computed: {\n    shortdesc: function () {\n      let returnval;\n      if (this.lang === 'fr') {\n        if (this.desc.fr) {\n          returnval = this.truncate(this.desc.fr,300);\n        } else {\n          returnval = '<div class=\"disclaimer\">' + this.$t(\"message.LANGUAGE-DISCLAIMER\") + '</div>' + this.truncate(this.desc.en,300);\n        }\n      } else {\n        if (this.desc.en) {\n          returnval = this.truncate(this.desc.en,300);\n        } else {\n          returnval = '<div class=\"disclaimer\">' + this.$t(\"message.LANGUAGE-DISCLAIMER\") + '</div>' + this.truncate(this.desc.fr,300);\n        }\n      }\n      return returnval;\n    }\n  },\n\n  methods: {\n    truncate: function (inputText, reqCount) {\n      var elem =  $(\"<div>\"+inputText+\"</div>\")[0]; // Convert string into JQuery object\n      var truncated = cutKeepingTags(elem, reqCount);\n      var outputText = $(truncated.text).html();\n      if (truncated.count == reqCount) { // Text was (probably) truncated\n        return outputText + \"&hellip;\";\n      } else {\n        return outputText;\n      }\n    }\n  }\n})\n\nnew Vue({\n    el: '#app',\n    data: {\n                allConversations: [],\n        allUnreadCount: 0,\n        alpha: [],\n        alphaButtonArray: [],\n        alphabuttons: [],\n        availableDate: null,\n        body: [],\n        clickedLoginBtn: false,\n        clickedResearcher: [],\n        clickedResearcherAcademicUnit: '',\n        clickedResearcherId: '',\n        clickedResearcherName: '',\n        clickedResearcherPositionTitle: '',\n        clickedResearcherUsername: '',\n        contactedResearcherId: '',\n        conversationResearchers: [],\n        createAccountFailed: false,\n        cv: {},\n        cvFiles: '',\n        cvStudent: {},\n        email: null,\n        fileName: '',\n        filteredResearchers: [],\n        filteredResearchersAvailability: [],\n        freeText: '',\n        hasConversations: false,\n        interestsChoices : [],\n        internal: false,\n        isAvailable: false,\n        isSelected: false,\n        isUnAvailable: false,\n        key: '12345',\n        levelOfInstruction: '',\n        loading: true,\n        loggedIn: false,\n        loginFailed: false,\n        loginState: 'notStarted',\n        message: '',\n        messageList: [],\n        model: Object,\n        name: '',\n        noReply: false,\n        password: '',\n        profile: false,\n        programCode: '',\n        programName: '',\n        programs: [],\n        rememberMe: false,\n        researcherAvailability: {},\n        researcherAvailabilityArr: [],\n        researcherAvailableId: null,\n        researcherConversations: [],\n        researcherInterests: [],\n        researcherIsAvailable: false,\n        researcherName: '',\n        researchers : null,\n        result:{},\n        role: 'unknown',\n        selectedInterestLeaf: [],\n        selectedInterests: [],\n        selectedResearcherConversations: [],\n        student_profile_array: [],  \n        student_profile: null,\n        studentConversations: [],\n        studentCv: [],\n        studentHasCv: false,\n        studentHasTranscripts: false,\n        studentID: '',\n        studentName: '',\n        studentProfile: [],\n        students: null,\n        studentTranscripts: [],\n        theName: '',\n        theResearcherTalkedToStudent: false,\n        theSelectedLanguage: 'en',\n        token: {},\n        transcripts: {},\n        transcriptsStudent: {},\n        unread: false,\n        uoUser: false,\n        user: {\"role\": \"unknown\"},\n        userGuid: '',\n        userId: '',\n        username: '',\n        userName: '',\n        userRole: [],\n        verificationCode: '',\n        viewPasswordClicked: false\n        \n    },\n    created: function () {\n    \n      this.name = this.retrieve('name', this.name);\n      this.email = this.retrieve('email',this.email);\n      this.role = this.retrieve('role',this.role);\n      this.userId = this.retrieve('userId',this.userId);\n      this.username = this.retrieve('username', this.userName);\n      console.log('this.username created ' + this.username);\n      this.internal = (this.retrieve('internal',this.internal) === 'true'); // Convert to boolean. Coerce types if necessary.\n      this.loggedIn = (this.retrieve('loggedIn',this.loggedIn) === 'true'); // Convert to boolean. Coerce types if necessary.\n      this.loginState = this.retrieve('loginState',this.loginState);\n      this.profile = (this.retrieve('profile',this.profile) === 'true'); // Convert to boolean. Coerce types if necessary.\n      // var studentProfileString = this.retrieve('studentProfile',this.studentProfile.join());\n      // this.studentProfile = studentProfileString.split(',');\n      this.hasConversations = (this.retrieve('hasConversations',this.hasConversations) === 'true'); // Convert to boolean. Coerce types if necessary.\n      this.allUnreadCount = this.retrieve('allUnreadCount',this.allUnreadCount);\n      this.rememberMe = this.retrieve('rememberMe',this.rememberMe);\n      this.theSelectedLanguage = this.retrieve('theSelectedLanguage',this.theSelectedLanguage);\n\n      // set lang\n      $('html').attr('lang', this.theSelectedLanguage);\n      Vue.config.lang = this.theSelectedLanguage;\n      document.title = 'uOttawa ' + this.$t('message.FACULTY-OF-MEDICINE') + ' ' + this.$t('message.TSS'); // Keep this synchronized with the actual <title> element please\n\n      this.getResearchers();\n      this.getPrograms();\n\n    },\n    methods: {\n\n      store: function(storeVariable, localVariable) {\n        sessionStorage.setItem(storeVariable,localVariable);\n        if (this.rememberMe) {\n          localStorage.setItem(storeVariable,localVariable);\n        }\n      },\n\n      retrieve: function(retrieveVariable, localVariable) {\n        var retrieveValue = localStorage.getItem(retrieveVariable);\n        if (retrieveValue === null) {\n          retrieveValue = sessionStorage.getItem(retrieveVariable);\n          if (retrieveValue === null) {\n            retrieveValue = localVariable;\n          }\n        }\n        return retrieveValue;\n      },\n\n      viewProfile: function(event) {\n        event.preventDefault();\n        $('#editName').removeClass('in');\n        $('#modalStudentProfile').modal('show');\n      },\n      viewConversations: function (event) {\n        event.preventDefault();\n        $('#modalConversations').modal('show');\n      },\n      uploadCv: function (username, event) {\n        event.preventDefault();\n        //var students_id = parseInt(userId);\n        var student_username = username;\n        var files = event.target.files;\n        var file = new FormData();\n        file.append('cv', files[0]);\n        //var url = 'https://tss-be.med.uottawa.ca/';\n        var url = be_url;\n        //var url = \"https://tss-be.med.uottawa.ca/\";\n        var modelRoute = 'students/'+student_username+'/cvs';\n        var fileUrl = url+modelRoute;\n\n\n        this.$http.post(fileUrl, file, {\n              headers: {\n               'Content-Type': 'multipart/form-data',\n              }\n            }).then((response) => {\n                // success callback\n\n                //this.$nextTick(function () {\n                  this.getCv(student_username);\n                //})\n\n\n        }, (response) => {\n                //error callback\n                // console.log('error uploading your cv ' + response.status);\n                // console.log(response);\n                // console.log(response.headers);\n        });\n\n      },\n      viewStudentProfile: function(studentUsername) {\n        console.log('view student profile clicked');\n        console.log('studentUsername ' + studentUsername);\n        this.getStudentProfile(studentUsername);     \n      },\n      hidePassword: function (event) {\n         event.preventDefault();\n         $('.pass').find('input[type=\"text\"]').attr(\"type\", \"password\");\n         this.viewPasswordClicked = false;\n\n      },\n      viewPassword: function (event) {\n         event.preventDefault();\n         $('.pass').find('input[type=\"password\"]').attr(\"type\", \"text\");\n         this.viewPasswordClicked = true;\n      },\n      getCv: function (username, event) {\n\n            //var students_id = userId;\n            var student_username = username;\n            //var url = 'https://tss-be.med.uottawa.ca/';\n            var url = be_url ;\n\n            //var url = \"https://tss-be.med.uottawa.ca/\";\n            var modelRoute = 'students/'+student_username+'/cvs/';\n            var urlRoute = url+modelRoute;\n\n            this.$http.get(urlRoute).then((response) => {\n                // success callback\n                this.studentCv = response;\n                this.processCv();\n\n            }, (response) => {\n                //error callback\n                // console.log('error getting cv ' + response.status);\n            });\n      },\n      processCv: function () {\n\n            var file = [];\n\n            for (var cv of this.studentCv.data) {\n                        var name = cv;\n                        var filename = cv;\n                        var fileObj = {filename};\n                        file.push(filename);\n                        this.studentHasCv = true;\n            }\n\n            this.cvStudent = file;\n      },\n      deleteCv: function (username, filename, event) {\n          //// console.log('use clicked delete cv');\n          //var students_id = userId;\n          var student_username = username;\n          console.log('this.username ' + this.username);\n          console.log('student_username ' + student_username);\n          var fileName;\n          fileName = encodeURIComponent(filename);\n          //var url = 'https://tss-be.med.uottawa.ca/';\n          //var url = \"https://tss-be.med.uottawa.ca/\";\n          var url = be_url ;\n          var file = 'students/'+student_username+'/cvs/'+fileName;\n          var fileUrl = url+file;\n\n          this.$http.delete(fileUrl).then((response) => {\n                // success callback\n                // set studentHasCv to false\n                this.studentHasCv = false;\n\n            }, (response) => {\n                //error callback\n                // console.log('error deleting cv ' + response.status);\n            });\n\n      },\n      uploadTranscripts: function (username, event) {\n\n        event.preventDefault();\n        //var students_id = parseInt(userId);\n        var student_username = username;\n        var files = event.target.files;\n        var file = new FormData();\n        file.append('transcript', files[0]);\n        //var url = 'https://tss-be.med.uottawa.ca/';\n        var url = \"https://tss-be.med.uottawa.ca/\";\n        var modelRoute = 'students/'+student_username+'/transcripts';\n        var fileUrl = url+modelRoute;\n\n        this.$http.post(fileUrl, file ).then((response) => {\n                // success callback\n                this.getTranscripts(student_username);\n\n        }, (response) => {\n                //error callback\n                // console.log('error uploading your transcripts ' + response.status);\n                // console.log(response);\n        });\n\n      },\n      getTranscripts: function (username, event) {\n\n            //var students_id = userId;\n            var student_username = username;\n            //var url = 'https://tss-be.med.uottawa.ca/';\n            //var url = \"https://tss-be.med.uottawa.ca/\";\n            var url = be_url ;\n            var modelRoute = 'students/'+student_username+'/transcripts';\n            var urlRoute = url+modelRoute;\n\n            this.$http.get(urlRoute).then((response) => {\n                // success callback\n                this.studentTranscripts = response;\n                this.processTranscripts();\n\n            }, (response) => {\n                //error callback\n                // console.log('error posting availability ' + response.status);\n            });\n      },\n      processTranscripts: function () {\n            var files = [];\n\n            for (var transcript of this.studentTranscripts.data) {\n                        var name = transcript;\n                        files.push(name);\n                        this.studentHasTranscripts = true;\n            }\n\n            this.transcriptsStudent = {files};\n      },\n      deleteTranscript: function (username, filename, event) {\n          var clickedTranscript= event.target;\n          //var students_id = userId;\n          var student_username = username;\n          console.log('this.username ' + this.username);\n          console.log('student_username ' + student_username);\n          var fileName;\n          fileName = encodeURIComponent(filename);\n          //var url = 'https://tss-be.med.uottawa.ca/';\n          var url = be_url ;\n          // var url = \"https://tss-be.med.uottawa.ca/\";\n          var file = 'students/'+student_username+'/transcripts/'+fileName;\n          var fileUrl = url+file;\n\n\n          this.$http.delete(fileUrl).then((response) => {\n\n            this.getTranscripts(student_username);      \n\n          }, (response) => {\n          //       //error callback\n            // console.log('error deleting cv ' + response.status);\n          });\n\n      },\n      viewResearcherProfile: function(id, event) {\n\n        event.preventDefault;\n        console.log('clickedresearcher');\n        console.log(this.clickedResearcher);\n        var researcherPositionTitle;\n        var researcherAcademicUnit;\n        var researcherId;\n        var researcherName;\n        var selectedResearcherId = id;\n        this.clickedResearcherId =  selectedResearcherId;\n        this.clickedResearcher = [];\n\n        $('#newmessage').val('');\n\n        for ( var selR of this.researchers) {\n\n          if (selR.id === selectedResearcherId) {\n            // // console.log(selR.membership_information.first_name + ' ' + selR.membership_information.last_name);\n            this.clickedResearcher.push(selR);\n            console.log('this.clickedResearcher');\n            console.log(this.clickedResearcher);\n            this.clickedResearcherName = selR.membership_information.first_name + ' ' + selR.membership_information.last_name;\n            //this.clickedResearcherUsername = selR.membership_information.email.match(/.+?(?=@uottawa.ca)/g);\n            //console.log('this.clickedResearcherUsername ' + this.clickedResearcherUsername);      \n            break;\n          }\n\n        }\n\n        if (this.clickedResearcher.length == 0) {\n          // console.log (\"Researcher [\" + selectedResearcherId + \"] not found\");\n        } else {\n          \n          $('#modalResearcherProfile').modal('show');\n\n          if (this.role !== '') {\n              //user logged in\n              //check if user has a profile\n              if (this.profile === true) {\n                $('#modalResearcherProfile').modal('show');\n                //check if user has started a conversation with researcher\n                this.checkStudentTalkedToResearcher();\n              }  else {\n                $('#modalStudentProfile').modal('show');\n              }\n\n          } else {\n              //user not logged in\n              $('#modalResearcherProfile').modal('show');\n          }\n        }\n      },\n      checkStudentTalkedToResearcher: function() {\n\n          for (var student of this.studentConversations) {\n\n                  for (var researcher of student.talkedWith) {\n\n                        var clickedResearcherId = parseInt(this.clickedResearcherId);\n\n                        if (researcher.researcherid === clickedResearcherId) {\n                              this.theResearcherTalkedToStudent = true;\n                              break;\n                        } else {\n                              this.theResearcherTalkedToStudent = false;\n                        }\n                  }\n          }\n\n      },\n      login: function(event) {\n        event.preventDefault();\n        // this.clickedResearcher;\n        this.clickedLoginBtn = true;\n        this.clickedResearcher = [];\n        this.clickedResearcherName = '';\n\n        console.log('this.clickedLoginBtn ' + this.clickedLoginBtn);\n        $('#email').val('');\n        $('#thePassword').val('');\n        $('#username').val('');\n        $('#password').val('');\n        $('#modalLogin').modal('show');\n      },\n      contactResearcher: function(event) {\n        $('#modalLogin').modal('show');\n      },\n      getResearcherAvailability: function (researcherId) {\n\n        var theUrl = 'https://tss-be.med.uottawa.ca';\n        var modelRoute = '/researchers/'+researcherId;\n\n        var urlRoute = theUrl + modelRoute;\n\n        this.$http.get(urlRoute).then((response) => {\n          // success callback\n          this.researcherAvailability = response;\n          console.log('this.researcherAvailability');\n          console.log(this.researcherAvailability);\n          var availableDate = this.researcherAvailability.data.available_date;\n          console.log('availableDate ' + availableDate);\n          var today = new Date(); \n          today = this.formatDate(today);\n          console.log('today ' + today);\n          if (availableDate > today) {\n            this.processResearcherAvailability(researcherId, availableDate);\n          }\n\n        });\n      },\n      checkResearcherSelected: function(researcher) {\n        return researcher.selected == true;\n      },\n      findGrantTitle: function(researcher) {\n        return researcher.funding_title;\n      },\n      processResearcherAvailability: function(researcherId, availableDate) {\n\n        for ( var researcher of this.researchers) {\n          console.log('process availability for loop');\n          if (researcher.id == researcherId) {  \n            console.log('process availability condition if');\n            researcher.available_date = availableDate;\n            console.log('process availability researcher.available_date ' + researcher.available_date);\n            console.log('process availability availableDate ' + availableDate);\n            console.log('researcher');\n            console.log(researcher);\n            console.log(' in loop this.researchers');\n            console.log(this.researchers);\n            break;\n          } \n        }\n        console.log('this.researchers');\n        console.log(this.researchers);\n      },\n      saveAvailability: function (id, event) {\n        var userId = id;\n        var availableDate = $('#date').val().trim();\n        var availabilityContent = {};\n        var researcherAvailable = $('#availability').find('input:checked').val();\n        if (researcherAvailable === 'Available') {\n          this.researcherIsAvailable = true;\n        } else {\n          this.researcherIsAvailable = false;\n        }\n\n        var isAvailable = this.researcherIsAvailable;\n        availabilityContent = {userId, isAvailable, availableDate};\n        //var url = 'http://10.80.128.37:4002';\n        var url = be_url ;\n        var urlRoute = url;\n\n        this.$http.post(urlRoute, availabilityContent ).then((response) => {\n                // success callback\n                this.researcherIsAvailable = true;\n                return this.researcherIsAvailable;\n            }, (response) => {\n                //error callback\n                this.researcherIsAvailable = false;\n                return this.researcherIsAvailable;\n            });\n      },\n      saveMessage: function (event) {\n        var userId = this.userId; //researcher of student\n        var student_username = this.username;\n        console.log('student_username ' + student_username);\n        var body = $('#newmessage').val();\n        var messageContent = {};\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth()+1; //January is 0!\n        var guid = this.userGuid;\n        var researcher_uniweb_number = this.clickedResearcherId;\n        var researcher_username = this.clickedResearcherUsername;\n        console.log('researcher_username ' + researcher_username);\n        var researcher_name = this.clickedResearcherName;\n        var students_id = parseInt(userId);\n        var student_name = this.name;\n        var is_from_student;\n        if (this.role === 'student') {\n            is_from_student = true;\n        } else {\n            is_from_student = false;\n        }\n\n        var yyyy = today.getFullYear();\n        if(dd<10){\n            dd='0'+dd\n        }\n        if(mm<10){\n            mm='0'+mm\n        }\n\n      var sentDT = dd+'/'+mm+'/'+yyyy;\n      messageContent = {researcher_name, researcher_username, student_username, student_name, body, is_from_student }; //isFromStudent boolean\n      //var url = 'https://tss-be.med.uottawa.ca/'; // (staging)\n      //var url = \"https://tss-be.med.uottawa.ca/\";\n      var url = be_url;\n      var modelRoute = 'messages/';\n      var fileUrl = url+modelRoute;\n\n         this.$http.post(fileUrl, messageContent ).then((response) => {\n                // success callback\n                this.$nextTick(function () {\n                  if (this.role === 'student') {\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    return this.hasConversations;\n\n                  } else if (this.role === 'researcher') {\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    return this.hasConversations;\n\n                  } else {\n                    return;\n                  }\n\n                })\n        }, (response) => {\n                //error callback\n                this.hasConversations = false;\n                this.store('hasConversations',this.hasConversations);\n                return this.hasConversations;\n        });\n\n      },\n\n      messageRead: function (id, researcherId, researcherName, studentUsername, studentName, body, isFromStudent, event) {\n            // console.log('mark message as read');\n            event.preventDefault();\n\n            var researcher_uniweb_number = parseInt(researcherId);\n            var researcher_name = researcherName;\n            //var students_id = parseInt(studentId);\n            var student_name = studentName;\n            var student_username = studentUsername;\n            console.log('student_username ' + student_username);\n            var read_date;\n            var today = new Date();\n            var read_date;\n            console.log('message id ' + id);\n            read_date = today.toISOString();\n\n            var body = body;\n\n            var is_from_student = isFromStudent;\n\n            var content = {researcher_uniweb_number, researcher_name, student_username, student_name, body, is_from_student, read_date};\n\n\n        //var url = 'https://tss-be.med.uottawa.ca/'; // (staging)\n        //var url = \"https://tss-be.med.uottawa.ca/\";\n        var url = be_url;\n        var modelRoute = 'messages/'+id;\n        var fileUrl = url+modelRoute;\n\n\n        this.$http.put(fileUrl, content).then((response) => {\n                // success callback\n\n            this.$nextTick(function () {\n                this.unread = false;\n                this.getMessageList();\n                //$('#modalConversations').modal('hide');\n                return this.unread;\n            })\n\n        }, (response) => {\n                //error callback\n                // console.log('error saving message ' + response.status);\n                // console.log('response');\n                // console.log(response);\n                this.unread = true;\n                return this.unread;\n        });\n\n\n\n      },\n      sendInitialMessage: function (id, studentUsername, studentName, event) {\n\n        var userId = this.userId; //researcher or student\n        var body = $('#newmessage').val();\n        console.log('body');\n        console.log(body);\n        var messageContent = {};\n        var is_from_student;\n        var researcher_uniweb_number;\n        var position_title;\n        var academic_unit;\n        var researcher_name;\n        var students_id;\n        var student_name = studentName;\n        var id = id;\n        var student_username;\n\n\n        if (this.role === 'student') {\n\n            is_from_student = true;\n\n            if (this.clickedResearcherId === '') {\n              researcher_uniweb_number = id;\n              console.log('researcher_uniweb_number' + researcher_uniweb_number);\n\n            } else {\n              researcher_uniweb_number = this.clickedResearcherId;\n              console.log('researcher_uniweb_number' + researcher_uniweb_number);\n            }\n\n            if (this.clickedResearcherName === '') {\n                  researcher_name = $('#researcherName').val().trim();\n                  console.log('researcher_name' + researcher_name);\n            } else {\n                  researcher_name = this.clickedResearcherName;\n                  console.log('researcher_name' + researcher_name);\n            }\n\n            position_title = this.clickedResearcherPositionTitle;\n            academic_unit = this.clickedResearcherAcademicUnit;\n            students_id = parseInt(userId);\n            student_name = studentName;\n            console.log('student_name' + student_name);\n            student_username = studentUsername; \n            console.log('student_username' + student_username);\n\n        } else {\n\n            is_from_student = false; \n            researcher_uniweb_number = this.userId;\n            researcher_name = this.name;\n            //students_id = parseInt(studentId);\n            student_username = studentUsername;\n            student_name = studentName;\n        }\n\n        researcher_uniweb_number = parseInt(researcher_uniweb_number);\n        messageContent = {researcher_uniweb_number, researcher_name, student_username, student_name, body, is_from_student}; //isFromStudent boolean\n        console.log('messageContent');\n        console.log(messageContent);\n        //var url = 'https://tss-be.med.uottawa.ca:4101/'; // (staging)\n        var url = be_url;\n        //var url = \"https://tss-be.med.uottawa.ca/\";\n        var modelRoute = 'messages/';\n        var fileUrl = url+modelRoute;\n\n        this.$http.post(fileUrl, messageContent).then((response) => {\n                // success callback\n                this.$nextTick(function () {\n                  if (this.role === 'student') {\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    this.theResearcherTalkedToStudent = true;\n                    $('#modalResearcherProfile').modal('hide');\n                    console.log('HIDE MODAL RESEARCHER PROFILE IF ROLE IS STUDENT');\n                    $('#modalConversations').modal('hide');\n\n                    this.getMessageList();\n                    return this.theResearcherTalkedToStudent, this.hasConversations;  \n                    \n                  } else if (this.role === 'researcher') {\n\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    this.theResearcherTalkedToStudent = true;\n                    $('#modalResearcherProfile').modal('hide');\n                    console.log('HIDE MODAL RESEARCHER PROFILE IF ROLE RESEARCHER');\n                    $('#modalConversations').modal('hide');\n                    this.getMessageList();\n                    return this.theResearcherTalkedToStudent, this.hasConversations;\n\n                  } else {\n                    return;\n                  }\n                })\n\n\n        }, (response) => {\n                //error callback\n                // console.log('error saving message ' + response.status);\n                // console.log('response');\n                // console.log(response);\n                this.theResearcherTalkedToStudent = false;\n                this.hasConversations = false;\n                this.store('hasConversations',this.hasConversations);\n                return this.theResearcherTalkedToStudent, this.hasConversations;\n\n        });\n      },\n      sendMessage: function (studentUserId, id, studentUsername, studentName, event) {\n\n        var userId = this.userId; //researcher or student\n        var textareaId = '#newmessage-' +studentUserId;\n        console.log(textareaId);\n        var body = $(textareaId).val();\n        console.log('body');\n        console.log(body);\n        var messageContent = {};\n        var is_from_student;\n        var researcher_uniweb_number;\n        var position_title;\n        var academic_unit;\n        var researcher_name;\n        var students_id;\n        var student_name = studentName;\n        var id = id;\n        var student_username;\n\n\n        if (this.role === 'student') {\n\n            is_from_student = true;\n\n            if (this.clickedResearcherId === '') {\n              researcher_uniweb_number = id;\n              console.log('researcher_uniweb_number' + researcher_uniweb_number);\n\n            } else {\n              researcher_uniweb_number = this.clickedResearcherId;\n              console.log('researcher_uniweb_number' + researcher_uniweb_number);\n            }\n\n            if (this.clickedResearcherName === '') {\n                  researcher_name = $('#researcherName').val().trim();\n                  console.log('researcher_name' + researcher_name);\n            } else {\n                  researcher_name = this.clickedResearcherName;\n                  console.log('researcher_name' + researcher_name);\n            }\n\n            position_title = this.clickedResearcherPositionTitle;\n            academic_unit = this.clickedResearcherAcademicUnit;\n            students_id = parseInt(userId);\n            student_name = studentName;\n            console.log('student_name' + student_name);\n            student_username = studentUsername; \n            console.log('student_username' + student_username);\n\n        } else {\n\n            is_from_student = false; \n            researcher_uniweb_number = this.userId;\n            researcher_name = this.name;\n            //students_id = parseInt(studentId);\n            student_username = studentUsername;\n            console.log('student_username ' + student_username);\n            student_name = studentName;\n            console.log('student_name ' + student_name);\n        }\n\n        researcher_uniweb_number = parseInt(researcher_uniweb_number);\n        messageContent = {researcher_uniweb_number, researcher_name, student_username, student_name, body, is_from_student}; //isFromStudent boolean\n        console.log('messageContent');\n        console.log(messageContent);\n        //var url = 'https://tss-be.med.uottawa.ca:4101/'; // (staging)\n        //var url = \"https://tss-be.med.uottawa.ca/\";\n        var url = be_url;\n        var modelRoute = 'messages/';\n        var fileUrl = url+modelRoute;\n\n        this.$http.post(fileUrl, messageContent).then((response) => {\n                // success callback\n                this.$nextTick(function () {\n                  if (this.role === 'student') {\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    this.theResearcherTalkedToStudent = true;\n                   \n                    //$('#modalConversations').modal('hide');\n                    $('#modalConversations textarea').val('');\n                    this.getMessageList();\n                    return this.theResearcherTalkedToStudent, this.hasConversations;  \n                    \n                  } else if (this.role === 'researcher') {\n\n                    this.hasConversations = true;\n                    this.store('hasConversations',this.hasConversations);\n                    this.theResearcherTalkedToStudent = true;  \n                    //$('#modalConversations').modal('hide');\n                    $('#modalConversations textarea').val('');\n                    this.getMessageList();\n                    return this.theResearcherTalkedToStudent, this.hasConversations;\n\n                  } else {\n                    return;\n                  }\n                })\n\n\n        }, (response) => {\n                //error callback\n                // console.log('error saving message ' + response.status);\n                // console.log('response');\n                // console.log(response);\n                this.theResearcherTalkedToStudent = false;\n                this.hasConversations = false;\n                this.store('hasConversations',this.hasConversations);\n                return this.theResearcherTalkedToStudent, this.hasConversations;\n\n        });\n      },\n      updateProfile: function(username, event) {\n\n        var profileContent = {};\n        var name = $('#name').val().trim();\n        console.log('var name ' + name);\n        this.name = name;\n        this.store('name', this.name);\n        //var name = this.retrieve('name', this.name);\n        console.log('name ' + this.name);\n        var email = this.email;\n        this.username = this.retrieve('username', this.username);\n        console.log('update profile username ' + this.username);\n        \n        var level_of_instruction = this.levelOfInstruction;\n        console.log('level_of_instruction ' + level_of_instruction);\n\n        var program_code = $('#StudentProfile .showSelectMenu select option:selected').val();\n        var parsed_program_code=parseInt(program_code);\n        console.log('parsed_program_code ' + parsed_program_code);\n        console.log('isNaN(parsed_program_code ' + isNaN(parsed_program_code));\n        if(isNaN(parsed_program_code)) {\n            parsed_program_code=0;\n\n        }\n        //  $('#StudentProfile .showSelectMenu select').find(\"option[value=\" + program_code +\"]\").attr('selected', true);\n        // console.log(\"select \"+  $('#StudentProfile .showSelectMenu select').find(\"option[value=\" + program_code +\"]\").val());\n        profileContent = {name, email, level_of_instruction, program_code: parsed_program_code}; //cv  transcript  path\n\n        console.log(profileContent);\n\n\n        //var theurl = 'https://tss-be.med.uottawa.ca/'\n        //var theurl = 'https://tss-be.med.uottawa.ca/'\n        var theurl = be_url;\n\n        var modelRoute = 'students/'+ username;\n        var url = theurl+modelRoute;\n\n\n        this.$http.put(url, profileContent ).then((response) => {\n\n                // success callback\n                this.$nextTick(function () {\n                  console.log('this.username ' + this.username);\n                  this.getStudent(this.username);\n                })\n        }, (response) => {\n                //error callback\n                console.log('error saving profile ' + response.status);\n        });\n\n      },\n      createProfile: function(username, event) {\n\n        // console.log('save profile clicked');\n        //this.userId = id;\n\n        var profileContent = {};\n        //var name = $('#StudentProfile').find('#name').val().trim();\n        this.name = this.retrieve('name', this.name)\n        var name = this.name;\n        console.log('name ' + this.name);\n        this.username = username;\n        console.log('username ' + this.username);\n\n        this.store('username',this.username);\n\n        //this.retrieve('name',this.name);\n\n        var application = 'TSS';\n        var email = this.email; \n        var level_of_instruction = $('#StudentProfile .active').find('input[name=\"level_of_instruction\"]').val();\n        console.log('level_of_instruction ' + level_of_instruction);\n\n        var program_code = $('#StudentProfile .showSelectMenu select option:selected').val();\n        var parsed_program_code=parseInt(program_code);\n        if(isNaN(parsed_program_code)) {\n            parsed_program_code=0;\n         }\n        // console.log(\"progcode \"+program_code);\n        program_code = parseInt(program_code);\n        if(isNaN(program_code)) {\n          program_code=0;\n        }\n\n        profileContent = {name, email, username, level_of_instruction, program_code}; //cv  transcript  path\n        //var url = 'https://tss-be.med.uottawa.ca';\n        //var url = 'https://tss-be.med.uottawa.ca/'\n        var url = be_url;\n\n\n        var modelRoute = 'students';\n        var fileUrl = url+modelRoute;\n\n        this.$http.post(fileUrl, profileContent ).then((response) => {\n                // success callback\n\n                if (this.internal === true) {\n\n                  this.loggedIn = true;\n                  this.store('loggedIn',this.loggedIn);\n\n                  this.$nextTick(function () {\n                    this.readUserRole(email);\n                  })\n\n                } else {\n\n                  console.log('external students');\n                  var url = fomsso_url +\"register\";\n                  var credentials = {'username': this.username, 'password': this.password, 'application': application, 'name': this.name };\n                  this.$http.post(url, credentials).then((response) => {\n                    // success\n                    console.log('credentials');\n                    console.log(credentials);\n                    this.token = response.headers('token');\n                    console.log('this.token');\n                    console.log(this.token);\n                    this.user = this.parseJwt(this.token);\n                    var email = this.user.email;\n                    this.loggedIn = true;\n                    this.store('loggedIn',this.loggedIn);\n                    this.createAccountFailed = false;\n\n                    //hide profile modal\n                    $('#modalStudentProfile').modal('hide');     \n\n                    this.$nextTick(function () {\n                     this.readUserRole(email);\n                    })\n      \n\n                  }, (response) => {\n                      //error callback   \n                       console.log(response);\n                       console.log(response.status);\n                       this.updateStateEngine('EmailFound');\n                  });\n\n                }\n                 \n        \n\n        }, (response) => {\n                //error callback\n                console.log(response);\n                console.log('error saving profile ' + response.status);\n        });\n\n      },\n      buttonClickUpdateChecked: function(value, event) { // called when an interest is selected in treeview/list\n\n        this.isSelected = false;\n        var theValue = value;\n        var theIndex;\n        // theValue = theValue.toLowerCase();\n\n        if (theValue) {\n            console.log('theValue ' + theValue);\n            var interestChoicesObj = {};\n            this.isSelected = true;\n            var isFound = false;\n\n            for (var interestObj of this.interestsChoices) {\n\n              console.log('interestObj');\n              console.log(interestObj);\n\n              if (interestObj.theValue ===  theValue) {\n                isFound = true;\n                break;\n              }\n\n            }\n\n            if (isFound === false) {\n              console.log('is value in the interestChoices');\n              console.log($.inArray(theValue, this.interestsChoices) == '-1');  \n              console.log( this.interestsChoices);\n\n              theIndex = $.inArray(theValue, this.selectedInterests);\n              interestChoicesObj = {theIndex, theValue};\n              this.interestsChoices.push(interestChoicesObj);\n              console.log('theIndex ' +theIndex);\n              $('#interests-' + theIndex).prop('checked', true);\n            }\n\n        } else {\n            this.isSelected = false;\n            index = $.inArray(theValue, this.selectedInterests);\n            index = index.toString;\n            $('#interests-'+ index).prop('checked', false);\n        }\n\n        this.filterResearchers();\n        this.extractAlphaFilter();\n        this.refreshFilteredList();\n      },\n      updateChecked: function(value, index, event) { // called when an interest is selected in treeview/list\n\n            this.isSelected = false;\n            var theValue = value;\n            var theIndex = index;\n\n            if (event.target.checked) {\n\n                  event.target.checked = true;\n                  $(event.target).prop('checked', true);\n                  var interestChoicesObj = {};\n                  this.isSelected = true;\n\n                  if ($.inArray(theValue, this.interestsChoices)=='-1') {\n                      interestChoicesObj = {theIndex, theValue};\n                      this.interestsChoices.push(interestChoicesObj);\n                      // console.log(this.interestsChoices);\n                  }\n\n\n            } else {\n                  event.target.checked = false; // set event.target to not selected (false)\n                  this.isSelected = false; // set this.selected to false\n\n                  for ( var choice of this.interestsChoices) {\n                        var indexx = this.interestsChoices.indexOf(choice);\n\n                        if (theIndex === choice.theIndex && event.target.checked === false) {\n                         this.interestsChoices.splice(indexx, 1);\n\n                         $('#interests-' + theIndex).prop('checked', false);\n\n                        }\n                  }\n            }\n\n        this.filterResearchers();\n        this.extractAlphaFilter();\n        this.refreshFilteredList();\n\n      },\n      createInterestList: function () {\n          this.selectedInterests = [];\n          for (var researcher of this.researchers) {\n\n\n                  if (researcher.research_interests != null) {\n\n                    for (var anInterest of researcher.research_interests) {\n\n                      if (anInterest != null) {\n\n                        var leaf = anInterest.interest[1];\n                        //var lowercaseLeaf = leaf.toLowerCase();\n\n                        if ($.inArray(leaf, this.selectedInterests)=='-1') {\n                            this.selectedInterests.push(leaf);\n                        }\n\n                       this.selectedInterests.sort();\n\n                      //  this.selectedInterests.sort(function (a, b) {\n                      //       return a.localeCompare(b, 'fr', {'sensitivity': 'base'});\n                      //  });\n\n                        \n\n                      } else {\n\n                        // console.log('anInterest is null');\n\n                      }\n\n                    }\n\n                  } else {\n                    // console.log('researcher does not have interests');\n                  }\n\n                }\n\n        },\n        toggleLanguage: function(event) {\n          event.preventDefault();\n\n          if (this.theSelectedLanguage === 'en') {\n            var newLang = 'fr';\n          } else {\n            var newLang = 'en';\n          }\n\n          $('html').attr('lang', newLang);\n          Vue.config.lang = newLang;\n          document.title = 'uOttawa ' + this.$t('message.FACULTY-OF-MEDICINE') + ' ' + this.$t('message.TSS'); // Keep this synchronized with the actual <title> element please\n          this.theSelectedLanguage = newLang;\n          this.store('theSelectedLanguage',this.theSelectedLanguage);\n        },\n        getStudents: function() {\n\n            var modelRoute = '/students';\n            //var url = \"https://tss-be.med.uottawa.ca/\";\n            var url = \"https://tss-be.med.uottawa.ca/\"\n            var fileUrl = url+modelRoute;\n            // console.log('fileUrl ' + fileUrl);\n            this.username = this.retrieve('username', this.userName);\n            console.log('this.username ' + this.username);\n\n            this.$http.get(fileUrl).then((response) => {\n                // success callback\n\n                this.students = response.data;;\n                this.processStudents();\n\n                this.$nextTick(function () {\n                this.getCv(this.username);\n                this.getTranscripts(this.username);\n                })\n\n            }, (response) => {\n                // error callback\n                // console.log('error');\n            });\n\n        },\n         processStudents: function() {\n          //check if this.students is empty or not\n          //Filter this.students to find a matche for this.userId\n          var student = this.students.filter((item) => item.id === this.userId);\n          //check if student with id matches this.userId\n          if (student.length > 0) {\n              this.getStudent(this.userId);\n          } else {\n              $('#modalStudentProfile').modal('show');\n          }\n\n        },\n        getStudentProfile: function(username) {\n          var student_username = username;\n          console.log('getStudent student_username ' + student_username);\n          var modelRoute = '/students/' + student_username;\n          var theurl = \"https://tss-be.med.uottawa.ca\";\n          var url = theurl+modelRoute;\n\n          this.$http.get(url).then((response) => {\n                // success callback\n                  this.student_profile = response.data;\n                  console.log('this.student_profile');\n                  console.log(this.student_profile);\n                  this.process_student_profile(student_username);\n          }, (response) => {\n                // error callback\n                console.log('error');\n                console.log(response);\n                console.log(response.status);\n          });\n\n        },\n        process_student_profile: function(username) {\n          var student_username = username;\n          console.log('student_username' + student_username);\n          console.log('student_username ' + student_username);\n          if (this.student_profile) { \n            this.student_profile_array = [];\n            this.student_profile_array.push(this.student_profile);\n            console.log('this.student_profile_array ' + this.student_profile_array);\n            this.getCv(student_username);\n            this.getTranscripts(student_username);\n            $(\"#modalViewStudentProfile\").modal('show');\n          }\n        },\n        getStudent: function(username) {\n            var student_username = username;\n            console.log('getStudent student_username ' + student_username);\n            \n            var modelRoute = '/students/' + student_username;\n            //var theurl = \"https://tss-be.med.uottawa.ca/\";\n            var theurl = \"https://tss-be.med.uottawa.ca\";\n            var url = theurl+modelRoute;\n\n            this.$http.get(url).then((response) => {\n                // success callback\n                  this.student = response.data;\n                  console.log('this.student');\n                  console.log(this.student);\n                  this.processStudentProfile(student_username);\n            }, (response) => {\n                // error callback\n                // console.log('error');\n            });\n\n        },\n        processStudentProfile: function(username) {\n            var userID = parseInt(this.userId);\n            var student_username = username;\n            console.log('student_username' + student_username);\n            console.log('student_username ' + student_username);\n\n            if (this.student) {\n                  console.log('this.student !!!!!!!!!');\n                  console.log(this.student);\n                  this.profile = true;\n                  console.log('this.profile ' + this.profile);\n                  this.studentProfile = [];\n                  this.store('profile',this.profile);\n                  this.studentProfile.push(this.student);\n                  console.log('this.studentProfile');\n                  console.log(this.studentProfile);\n                  this.getCv(student_username);\n                  this.getTranscripts(student_username);\n                   \n                  // this.store('studentProfile',this.studentProfile.join());\n\n\n                  for (var item of this.studentProfile) {\n                    // TODO: replace with \"var item = this.student;\"?\n                      //this.name = item.name;\n                      //this.store('name',this.name);\n                      this.name = item.name;\n                      this.store('name',this.name);\n\n                      // console.log('this.name ' + this.name);\n                      this.levelOfInstruction = item.level_of_instruction;\n                      if(this.levelOfInstruction === 'msc'){\n                        //   console.log('level msc');\n                        //   $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"msc\"]').prop('checked', true);\n                        //   $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"phd\"]').prop('checked', false);\n                        $('.r2').addClass('active');\n                        $('.r1').removeClass('active');\n\n                       \n                      //   // console.log('msc');\n\n                      } else {\n                        //   console.log('level phd');\n                        //   $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"phd\"]').prop('checked', true);\n                        //   $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"msc\"]').prop('checked', false);\n                        $('.r1').addClass('active');\n                        $('.r2').removeClass('active');\n\n                      }\n\n\n\n                      $('#StudentProfile').find('.showSelectMenu').hide();\n\n\n                      this.programCode = item.program_code;\n                      console.log('programCode ' + this.programCode);\n                      if(this.programCode != 0){\n                        console.log('item.program_code  1' + item.program_code);\n                        //$('#StudentProfile, #viewStudentProfile').find('#yes').prop(\"checked\", true);\n                        $('.yes').addClass('active');\n                        $('.no').removeClass('active');\n                        $('#StudentProfile, #viewStudentProfile').find('.showSelectMenu').show();\n                        $('#StudentProfile, #viewStudentProfile').find('select').val(this.programCode).change();\n                        // console.log(\"code\"+item.program_code);\n\n                      }else{\n                        console.log('item.program_code 2' + this.programCode);\n                        //$('#StudentProfile, #viewStudentProfile').find('#no').prop(\"checked\", true);\n                        $('.yes').removeClass('active');\n                        $('.no').addClass('active');\n                      }\n\n                  }\n\n                  // console.log('student profile exists');       \n                  if (this.internal === true) {\n                    console.log('internal student');    \n                    $('#modalStudentProfile').modal('hide');\n                    $('#modalLogin').modal('hide');   \n                  } else {\n                    console.log('external student');   \n                    this.updateStateEngine('EmailFound');\n                  }\n\n                  \n                  this.getMessageList();    \n                             \n           \n            } else {\n                  this.profile = false;\n                  this.store('profile',this.profile);\n                  $('#modalLogin').modal('hide');\n                  $('#modalStudentProfile').modal('show');\n\n            }\n\n        },\n        getResearchers: function() {\n            //var fileUrl = 'app/data/professors.json';\n            //var url = 'https://uniweb-service.med.uottawa.ca/professors';\n            var url = uniweb_url + \"professors\";\n            //var url = \"https://uniweb-service.med.uottawa.ca/\"; \n            var theResearchers = [];\n\n            // GET request\n            this.$http.get(url).then((response) => {\n                // success callback\n                this.researchers = response.data;\n                //console.log(this.researchers);\n                this.processUniwebFeed();\n            }, (response) => {\n                // error callback\n                // console.log('error');\n            });\n        },\n        onCreateAccount: function() {\n            this.username = $(\"#email\").val().toLowerCase().trim();\n            console.log('this.usernam ' + this.username);\n            this.password = $(\"#thePassword\").val().trim();\n            this.name = $(\"#fullname\").val().trim();\n            this.store('name',this.name);\n            console.log('name ' +this.name);\n            var email = this.username;\n            this.store('username',this.username);\n  \n            var application = \"TSS\";\n\n            if (this.password !== '' && this.username !== '' && this.name !== '') {\n                  \n                  $('#modalLogin').modal('hide');\n                  $('#modalStudentProfile').modal('show');   \n            \n            } else {\n                  //display alert credantial missing\n                  this.createAccountFailed = true;\n                  $('#externalcreateAccountFailedAlert').show();\n                  this.updateStateEngine('EmailNotFound');\n                  //this.updateStateEngine('EmailFound');\n                  //return false;\n            }\n\n        },\n        onVerifyEmail: function (event) {\n          var email = $('#email').val().toLowerCase().trim();\n          console.log('email ' + email);\n          this.email = email;\n          this.store('email',this.email);\n          this.internal = false;\n          this.store('internal',this.internal); \n          console.log('this.internal' + this.internal);\n          this.readUserRole(email);\n        },\n        onValidateVerificationCode: function (event) {\n\n            var enteredVerificationCode = $(\"#verificationCode\").val().trim();\n\n            if (enteredVerificationCode === this.key) {\n\n                  // console.log('Email is verified');\n            } else {\n                  // console.log('Email is NOT verified');\n            }\n        },\n        onEmailPassword: function(event) {\n\n            this.username = $(\"#email\").val().toLowerCase().trim();\n            console.log('this.username ' + this.username);\n            this.password = $(\"#thePassword\").val().trim();\n            var application = \"TSS\";\n\n            if (this.password !== '' && this.username !== '') {\n                  // console.log('onEmailPassword');\n                  var email = this.username;\n\n                  $('#modalLogin').modal('hide');\n\n                  //var url = \"https://fomsso.med.uottawa.ca/auth\";\n\n                  var url = fomsso_url + \"auth\";\n\n                  var credentials = {'username': this.username, 'password': this.password, 'application': application};\n\n                  this.$http.post(url, credentials).then((response) => {\n                      // success callback\n                      console.log(response.data);\n                      console.log(response.status);\n                      console.log(response.headers);\n                      this.token = response.headers('token');\n                      console.log('this.token');\n                      console.log(this.token);\n                      this.user = this.parseJwt(this.token);\n                      var email = this.user.email;\n                     \n                      \n                      if ($('#fullname').val() !== undefined ) {\n                        this.name = $('#fullname').val().trim();\n                        console.log('name ' + this.name);\n                        this.store('name', this.name);\n                      }\n                      \n                      this.store('username', this.username);\n                      $('#modalLogin').modal('hide');\n                      this.loggedIn = true;\n                      this.store('loggedIn', this.loggedIn);\n                      console.log('this.loggedIn ' + this.loggedIn);\n                      this.loginFailed = false;\n\n                      // if (this.role === '') {\n                      //   this.profile = false;\n                      //   this.store('profile',this.profile);\n                      //   $('#modalStudentProfile').modal('show');\n                      // } else {\n                      this.readUserRole(email);\n                      //}\n\n                  }, (response) => {\n                      console.log('login failed');\n                      this.loginFailed = true;    \n                      $('#externalLoginFailedAlert').show();\n                      console.log('this.loginFailed ' + this.loginFailed );\n                      this.updateStateEngine('EmailNotFound');\n                      //return this.loginFailed;\n                  });\n            } else {\n                  console.log('login failed no username or password');\n                  this.loginFailed = true;    \n                  console.log('this.loginFailed ' + this.loginFailed );\n                  return false, this.loginFailed;\n            }\n\n        },\n        processExternalUser: function() {\n\n            this.userId = \"1\";\n            this.store('userId',this.userId);\n            this.name = this.retrieve('name', this.name);\n            var email = localStorage.getItem('email'); // should this be \"var email = this.email;\"?\n            this.getStudent(this.userId);\n  \n            if (this.userRole === 'student')  {\n               $('#modalLogin').modal('hide');\n            }  else {\n               $('#modalLogin').modal('hide');\n               $('#modalStudentProfile').modal('show');\n            }\n\n        },\n        updateStateEngine: function(newState) {\n          this.loginState = newState;\n          this.store('loginState',this.loginState);\n        },\n        onTryAgain: function(event) {\n          this.updateStateEngine('EmailSent');\n        },\n        onResendEmail: function () {\n            this.updateStateEngine('ResetSent')\n        },\n\n        postEmail: function(email) {\n              var modelRoute = '/students';\n              var student = { email: 'nancy_f_hebert@hotmail.com'};\n              // console.log(student);\n        },\n        onVerificationCode: function(event) {\n          var verificationCode = $('#verificationCode').val().trim();\n\n          if (verificationCode === this.key) {\n            this.updateStateEngine('EmailFound');\n          } else {\n            this.updateStateEngine('InvalidKey');\n          }\n\n        },\n        getMessageList: function() {\n          var modelRoute = 'messages';\n          //var url = 'https://tss-be.med.uottawa.ca/'; //(staging)\n          var url = \"https://tss-be.med.uottawa.ca/\";\n          var url = be_url;\n          var fileUrl = url+modelRoute\n\n          this.$http.get(fileUrl).then((response) => {\n                // success callback\n\n                this.messageList = response.data;\n                console.log('get messagelist this.messageList');\n                console.log(this.messageList);\n          \n                if (this.role === 'student') {\n                    console.log('student messages');\n                    this.getStudentConversations();\n\n                } else if (this.role === 'researcher') {\n                    console.log('researcher message');\n                    //this.$nextTick(function () {\n                    this.getResearcherConversations();\n                    //})\n\n                } else {\n                  return;\n                }\n\n              });\n\n        },\n        onModalClose: function () {\n            console.log('click close modal');\n            $('#modalStudentProfile').on('[data-dismiss=\"modal\"]', function () {\n              console.log('hidden event fired!');\n              $('#newmessage').val('');\n            });\n        },\n        getPrograms: function () {\n\n            var modelRoute = 'gs_programs';\n            //var url = 'https://tss-be.med.uottawa.ca/';\n            //var url = \"https://tss-be.med.uottawa.ca/\";\n            var url = be_url;\n            var fileUrl = url+modelRoute\n\n            this.$http.get(fileUrl).then((response) => {\n                this.programs = response.data;\n            });\n\n        },\n        getResearcherConversations: function () {\n\n          this.conversationResearchers = [];\n          \n          if (!this.researchers) { return; }\n\n            for (var researcher of this.researchers) {\n              \n              if (researcher.id === this.userId) {\n\n                var researcherID = parseInt(researcher.id);\n                var conversations = this.messageList.filter((item) => item.researcher_uniweb_number === researcherID);\n\n                if (conversations.length > 0) {\n                  this.hasConversations = true;\n                  this.store('hasConversations',this.hasConversations);\n\n                  var result = this.groupBy(conversations, function(item)\n                    {\n                      return [item.researcher_uniweb_number, item.student_name];\n                    });\n\n                  var studentname;\n                  var studentemail;\n                  var studentUserId;\n                  var studentusername;\n                  var studentArr = [];\n                  var studentObj = {};\n                  \n                  for (var oneconversations of result) {\n         \n                    for ( var conversation of oneconversations) {\n \n                        studentname = conversation.student_name;\n                        studentusername = conversation.student_username;\n                        studentUserId = studentusername.match(/^[^@]*/g)[0]; \n                        studentemail = conversation.email;\n                        studentObj = {studentUserId, studentname, studentusername, studentemail};\n\n                        if (conversation.read_date === null) {\n                              this.noReply = true;     \n                        } else {\n                              this.noReply = false;\n                        }\n\n                        studentArr.push(studentObj);\n\n                    }\n\n\n                    //console.log('studentname ' + studentname);\n                    //var propertyNameGuid = 'guid';\n                    //var propertyValueGuid;\n                    //propertyValueGuid = guid;\n                    //oneconversations[propertyNameGuid] = propertyValueGuid;\n\n                    //var propertyNameStudentId = 'studentId';\n                    //var propertyValueStudentId;\n                    //propertyValueStudentId = studentid;\n                    //oneconversations[propertyNameStudentId] = propertyValueStudentId;\n\n                    var propertyNameStudentName = 'name';\n                    var propertyValueStudentName;\n                    propertyValueStudentName = studentname;\n                    oneconversations[propertyNameStudentName] = propertyValueStudentName;\n                    \n                    var propertyNameStudentUserName = 'username';\n                    var propertyValueStudentUserName;\n                    propertyValueStudentUserName = studentusername;\n                    oneconversations[propertyNameStudentUserName] = propertyValueStudentUserName;\n\n                    var propertyNameStudentId = 'studentUserId';\n                    var propertyValueStudentId;\n                    propertyValueStudentId = studentUserId;\n                    oneconversations[propertyNameStudentId] = propertyValueStudentId;\n\n                    var propertyNameTalkedWith = 'talkedWith';\n                    var propertyValueTalkedWith = {};\n                    propertyValueTalkedWith = studentObj;\n                    oneconversations[propertyNameTalkedWith] = propertyValueTalkedWith;\n                         \n                  }\n\n                  var propertyName = 'conversations';\n                  var propertyValue = [];\n                  propertyValue = result;\n                  researcher[propertyName] = propertyValue;\n\n                  var propertyNameTalkedWith = 'talkedWith';\n                  var propertyValueTalkedWith = [];\n                  propertyValueTalkedWith= studentArr;\n                  researcher[propertyNameTalkedWith] = propertyValueTalkedWith;\n\n                  \n                  this.conversationResearchers.push(researcher);\n\n                  var cntr = 0;\n                  for (var c of conversations) {\n\n                   if ( c.read_date === null && c.is_from_student === true) {\n                            cntr = cntr + 1;\n                    }\n\n                    this.allUnreadCount = cntr;\n                    this.store('allUnreadCount',this.allUnreadCount);\n                  }\n\n                  var pNew = 'newCounter';\n                  researcher[pNew] = cntr;\n\n                  if (cntr > 0) {\n                    researcher.isUnread = true;\n                    this.unread = true;\n                  } else {\n                    researcher.isUnread = false;\n                    this.unread = false;\n                  }\n\n                } else {\n                    researcher.isUnread = false;\n                    this.unread = false\n                }\n\n              }\n\n            }\n\n\n        },\n        formatDate: function(date) {\n\n          var date = new Date(date);\n          var year  = pad(date.getFullYear());\n          var month = pad(date.getMonth() + 1);\n          var day   = pad(date.getDate());\n          var formattedDate = year +'-'+ month +'-'+ day;\n\n          function pad(numb) {\n            return (numb < 10 ? '0' : '') + numb;\n          }\n\n          return formattedDate;\n        },\n        getStudentConversations: function () {\n\n          var conversations;\n          var researcher;\n          var userId = parseInt(this.userId);\n          var student_username = this.student.username;\n\n          this.studentConversations = [];\n\n          if (this.studentProfile) { \n            console.log('has student profile');\n                for (var student of this.studentProfile) {\n                  \n                  conversations = this.messageList.filter((item) => item.student_username === student_username);\n                  console.log('conversations');\n                  console.log(conversations);\n\n                    if (conversations.length > 0 && this.username === student_username) {\n                      console.log('we have conversations');\n\n\n                      this.hasConversations = true;\n                      this.store('hasConversations', this.hasConversations);\n\n                      var result = this.groupBy(conversations, function(item) {\n                            return [item.researcher_uniweb_number];\n                      });\n\n                      var researcherid;\n                      var researcherArr = [];\n                      var researcherObj = {};\n                      var researcherId;\n                      var researcherName;\n                      var researcherPositionTitle;\n                      var researcherAcademicUnit;\n                      var studentUserId;\n                      var studentUsername;\n                      var researcherHasReplied = false;\n\n                        for (var theconversations of result) {\n\n                          for ( var aConversation of theconversations) {\n\n                            researcherid = aConversation.researcher_uniweb_number;\n\n                            studentUsername = aConversation.student_username;\n                            studentUserId = studentUsername.match(/^[^@]*/g)[0]; \n\n                            if (aConversation.is_from_student === false)   {\n                              researcherHasReplied = true;\n                            }  \n\n\n                            if (aConversation.read_date === null) {\n                              this.noReply = true;     \n                            } else {\n                              this.noReply = false;\n                            }\n\n                            for (var researcher of this.researchers) {\n\n                              var researcherId = parseInt(researcher.id);\n                              if ( researcherId === researcherid) {\n                                    researcherName = researcher.membership_information.first_name + ' ' + researcher.membership_information.last_name;\n                                    researcherPositionTitle = researcher.membership_information.position_title[1];\n                                    researcherAcademicUnit = researcher.membership_information.academic_unit[1];\n                                    researcherObj = {studentUserId, researcherid, researcherName, researcherPositionTitle, researcherAcademicUnit, researcherHasReplied};\n                                    researcherArr.push(researcherObj);\n\n                                  var propertyNameTalkedWith = 'talkedWith';\n                                  var propertyValueTalkedWith = {};\n                                  propertyValueTalkedWith = researcherObj;\n                                  theconversations[propertyNameTalkedWith] = propertyValueTalkedWith;\n                              }\n                            }\n\n                          }\n\n                        }\n\n              \n                      var propertyName = 'conversations';\n                      var propertyValue = [];\n                      propertyValue = result;\n                      student[propertyName] = propertyValue;\n                      // this.store('studentProfile',this.studentProfile.join());\n\n                      var propertyNameTalkedWith = 'talkedWith';\n                      var propertyValueTalkedWith = [];\n                      propertyValueTalkedWith = researcherArr;\n                      student[propertyNameTalkedWith] = propertyValueTalkedWith;\n\n                      // this.store('studentProfile',this.studentProfile.join());\n                      \n\n                      this.studentConversations.push(student);\n                      // console.log('this.studentConversations');\n                      // console.log(this.studentConversations);\n\n                      this.checkStudentTalkedToResearcher();\n\n                      var cntr = 0;\n                      for (var c of conversations) {\n                        if ( c.read_date === null && c.is_from_student === false) {\n                            console.log('c.read_date === null && c.is_from_student === false');\n                            cntr = cntr + 1;\n                        }\n\n                        this.allUnreadCount = cntr;\n                        this.store('allUnreadCount',this.allUnreadCount);\n                        console.log('this.allUnreadCount ' + this.allUnreadCount);\n                      }\n\n\n                      var pNew = 'newCounter';\n                      student[pNew] = cntr;\n                      // this.store('studentProfile',this.studentProfile.join());\n                      if (cntr > 0) {\n                        console.log('if cntr greater than 0');\n                        student.isUnread = true;\n                        // this.store('studentProfile',this.studentProfile.join());\n                        this.unread = true;\n                        console.log('this.unread' + this.unread);\n\n                      } else {\n                        console.log('if cntr NOT greater than 0');\n                        student.isUnread = false;\n                        // this.store('studentProfile',this.studentProfile.join());\n                        this.unread = false;\n                        console.log('this.unread' + this.unread);\n                      }\n\n                    } else {\n                      console.log('we do not conversations');\n                      student.isUnread = false;\n                      // this.store('studentProfile',this.studentProfile.join());\n                      this.unread = false\n                    }\n\n                }\n            } else {\n                 console.log('does not have student profile');\n                  return false;\n            }\n\n            console.log('this.studentConversations');\n            console.log(this.studentConversations);\n\n        },\n        groupBy: function( array , f ) {\n            var groups = {};\n            array.forEach( function( o )\n            {\n              var group = JSON.stringify( f(o) );\n              groups[group] = groups[group] || [];\n              groups[group].push( o );\n\n            });\n            return Object.keys(groups).map( function( group ) {\n              return groups[group];\n            })\n        },\n        radioLevelClick: function(level) {\n          var theLevel = level;\n          if(theLevel === 'msc'){\n            console.log('level msc');\n            $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"msc\"]').prop('checked', true);\n            $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"phd\"]').prop('checked', false);\n            $('.r2').addClass('active');\n            $('.r1').removeClass('active');\n\n          }else{\n            console.log('level phd');\n            $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"phd\"]').prop('checked', true);\n            $('input:radio[name=\"level_of_instruction\"]').filter('[value=\"msc\"]').prop('checked', false);\n            $('.r1').addClass('active');\n            $('.r2').removeClass('active');\n          }\n\n\n        },  \n        radioYesClick: function () {\n          // console.log('clicked yes');\n\n            $('.showSelectMenu').show();\n            $('.yes').addClass('active');\n            $('.no').removeClass('active');\n        },\n        radioNoClick: function () {\n          // console.log('clicked no');\n\n            $('.showSelectMenu').hide();\n            $('.yes').removeClass('active');\n            $('.no').addClass('active');\n            $('#StudentProfile .showSelectMenu select option:selected').val(\"\").change();\n\n        },\n        processUniwebFeed: function() { // called once by getResearchers\n            //this.filteredResearchers = this.researchers;\n\n            for (var researcher of this.researchers) {\n              researcher['available_date'] = '';\n              researcher['selected'] = true;\n              this.getResearcherAvailability(researcher.id);    \n            }\n\n            this.createInterestList();\n            this.extractAlphaFilter();\n            this.refreshFilteredList();\n            this.getMessageList();\n            $('#loading-message').remove();\n        },\n        parseJwt: function (jwtToken) {\n            var base64Url = jwtToken.split('.')[1];\n            var base64 = base64Url.replace('-', '+').replace('_', '/');\n            return JSON.parse(window.atob(base64));\n        },\n        logout: function (event) {\n            event.preventDefault();\n            localStorage.clear();\n            sessionStorage.clear();\n            this.token = {};\n            this.user.role= '';\n            this.role = '';\n            this.loggedIn = false;\n            this.loginFailed = false;\n            this.createAccountFailed = false;\n            this.username = '';\n            this.profile = false;\n            this.name = '';\n            this.studentConversations = [];\n            this.researcherConversations = [];\n            this.studentProfile = [];\n            this.studentHasCv = false;\n            this.studentHasTranscripts = false;\n            this.hasConversations = false; \n            this.theResearcherTalkedToStudent = false;\n            this.updateStateEngine('notStarted');\n        },\n        readUserRole: function (username) {\n\n            var theEmail = email;  \n            var email = this.email;\n            console.log(email);\n            this.username = username;\n            this.store('email',this.email);\n            email = encodeURIComponent(this.email);\n            \n            //var url = 'https://tss-be.med.uottawa.ca/';\n            //var url = 'https://tss-be.med.uottawa.ca/';\n            var url = be_url;\n            var modelRoute = 'roles/'+username;\n            var url = url+modelRoute;\n\n            this.$http.get(url).then((response) => {\n                // success callback\n                this.userRole = response;\n                this.processRole();\n\n            }, (response) => {\n                //error callback\n                // console.log('error getting role ' + response.status);\n\n            });\n\n        },\n        processRole: function () {\n            console.log('processRole');\n            console.log(this.userRole.data);   \n            this.role = this.userRole.data.role;\n            console.log('this.role ' + this.role);\n            this.store('role',this.role);\n\n            switch (this.role) {\n                  case 'student':\n                        console.log('role is student');                      \n                        if (this.internal === true) {\n                          this.loggedIn = true;\n                          this.store('loggedIn',this.loggedIn);   \n                          this.getStudent(this.username);\n                        } else {\n                            this.username = this.email;\n                            this.store('username',this.username);     \n                            console.log('this.username ' + this.username);   \n                            this.updateStateEngine('EmailFound');  \n                            this.getStudent(this.username);           \n                        }\n                        \n                        break; \n                  case 'researcher':\n                        console.log('role is researcher');\n                        //test if researcher logged in by clicking contact or login \n                        console.log('role is not student');\n                        $('#modalLogin').modal('hide');\n                        \n                        this.userId = this.userRole.data.id;  \n                        console.log('userId in processRole '  +this.userId );\n                        this.store('userId',this.userId); \n\n                        //this.updateStateEngine('EmailFound');\n\n                        this.loggedIn = true;\n                        this.store('loggedIn',this.loggedIn);   \n\n                        if (this.clickedLoginBtn === true) {\n                              console.log('clickedLogin');    \n                              this.getMessageList();\n                              // if (this.hasConversations === true ) {\n                              //       //check if researcher has conversations\n                              //       //hide login modal\n                              //       $('#modalLogin').modal('hide');\n                              //       //show conversations modal \n                              //       $('#modalConversations').modal('show');\n                              // } else {\n                              //       return false;\n                              // }\n                               \n                        } else {\n                              return;\n                        }\n                        break;\n                  case 'admin':\n                        //show admin screen\n                        console.log('role is admin');\n                        break;\n                  default: \n                        //role is empty\n                        this.profile = false;\n                        this.store('profile',this.profile);\n                        if (this.internal === true) {\n                          console.log('role is internal student');\n                          $('#modalLogin').modal('hide');\n                          $('#modalStudentProfile').modal('show');\n                        } else {\n                          console.log('role is external student');\n                          this.updateStateEngine('EmailNotFound');\n                        }\n                        \n                       \n                       \n                        \n            }\n                  //if role = student. true\n                        //look up student. \n                        //getStudent(username)\n                  //else if role = researcher. Use is not student, check role is researcher.\n                        //test if researcher logged in by clicking contact or login \n                        //getResearcherConversations\n                        //check if researcher has conversations\n                              //hide login modal\n                              //show conversations modal         \n                        //else. no conversations.\n                              //return false.\n                  //else user is admin.\n                        //show admin screen\n    \n\n\n            // if (this.role === '') {\n\n            //       if ( this.uoUser === true) {\n            //             this.profile = false;\n            //             this.store('profile',this.profile);\n            //             $('#modalLogin').modal('hide');\n            //             $('#modalStudentProfile').modal('show');\n\n            //       } else { // do we get to this branch?\n            //             this.updateStateEngine('EmailNotFound'); \n            //             this.loggedIn = false;\n            //             this.store('loggedIn',this.loggedIn);\n\n            //       }\n\n            // } else {\n                   \n            //       if ( this.uoUser === true) {     \n            //             $('#modalLogin').modal('hide');\n            //             this.updateStateEngine('EmailFound');\n            //             this.loggedIn = true;\n            //             this.store('loggedIn',this.loggedIn);    \n            //             this.getStudent(this.username); \n                         \n            //       } else { // do we get to this branch?\n            //           this.updateStateEngine('EmailFound');\n            //           this.loggedIn = true;\n            //           this.store('loggedIn',this.loggedIn);\n            //           this.getStudent(this.username); \n            //       }          \n            // }\n\n        },\n        authorize: function (username, password) {\n\n            this.username = $(\"#username\").val().toLowerCase().trim();\n            console.log('this.username ' + this.username);\n            this.password = $(\"#password\").val().trim();\n            var application = \"TSS\";\n    \n            //var url = \"https://fomsso.med.uottawa.ca/auth\";\n            var url = fomsso_url + \"auth\";\n            //var url = \"http://10.80.128.44:4005/auth\";\n            var credentials = {'username': this.username, 'password': this.password, 'application': application};\n            \n            this.$http.post(url, credentials).then((response) => {\n                // success callback\n                console.log('success');\n                console.log(this.username);\n                this.store('username', this.username);\n                this.userName = this.retrieve('username', this.username);\n                console.log('this.userName ' + this.userName);\n                this.token = response.headers('token');\n                console.log('this.token');\n                console.log(this.token);\n\n                this.user = this.parseJwt(this.token);\n                console.log(this.user);\n\n                var email = this.user.email;\n                this.email = email;\n                this.store('email',this.email); \n                this.name = this.user.name;\n                this.store('name',this.name); \n                \n               \n                this.uoUser = true;\n                this.internal = true;\n                this.store('internal',this.internal); \n                this.loginFailed = false;\n\n                this.readUserRole(this.userName);\n\n            }, (response) => {\n                //error callback\n                this.loginFailed = true;\n                $('#internalLoginFailedAlert').show();\n                this.loggedIn = false;\n                this.store('loggedIn',this.loggedIn);\n                return this.loginFailed, this.loggedIn;  \n            });   \n            this.rememberMe = $('#rememberMe').checked;\n            this.store('rememberMe',this.rememberMe);\n        }, \n\n        filterResearchers: function() { // This function finds the researchers that match the filter - called often\n              \n             \n              for (var researcher of this.researchers) {\n                \n                researcher['selected'] = false;\n\n                // check if we have any interests selected.\n                if (this.interestsChoices.length > 0) {\n\n                  var myInterests = researcher.research_interests;\n\n                  if (myInterests != null) {\n\n                        for (var selInterest of this.interestsChoices) {\n\n                            for (var anInterest of myInterests) {\n\n                                var theInterest = anInterest.interest[1];\n\n                                  if (selInterest.theValue === theInterest) {\n\n                                        //if (!_.includes(this.researchers, researcher)) {\n\n                                            researcher['selected'] = true;\n                                        //} \n                                        break;\n                                  }\n\n                            }\n\n                        }\n\n                  } \n\n                } else {\n                  console.log('this.interestsChoices.length < 0)');\n                  researcher['selected'] = true;\n                }\n\n              }\n             \n              this.extractAlphaFilter();\n\n       \n\n        },\n        refreshFilteredList: function() {\n          this.extractAlphaFilter();\n        },\n        extractAlphaFilter: function () {\n            // for each researcher\n            // extract 1st letter of last name\n            // enable corresponding letterbutton in html\n            // Creating object listing the letters of the alphabet\n          var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n          var alphabetButtons = {};\n\n          this.alphaButtonArray = [];\n\n          for (var letter of alphabet) {\n              var letterUppercase = letter.toUpperCase();\n              alphabetButtons = {letter: letterUppercase, isAvailable: false};\n              this.alphaButtonArray.push(alphabetButtons);\n          }\n\n          this.researcherLastInitials = [];\n\n         \n          for (var researcher of this.researchers.filter(this.checkResearcherSelected) ) {\n              var firstchar = researcher.membership_information.last_name.charAt(0);\n\n              if (!this.researcherLastInitials.includes(firstchar) ) {\n                  this.researcherLastInitials.push(firstchar);\n              }\n          }\n\n\n          this.alphabuttons = [];\n\n          for (var alphabutton of this.alphaButtonArray) {\n              //check if it matches with the researchersLastInitials\n\n              if (this.researcherLastInitials.includes(alphabutton) ) {\n                alphabutton.isAvailable = true;\n                this.alphabuttons.push(alphabutton);\n              } else {\n                alphabutton.isAvailable = false;\n                this.alphabuttons.push(alphabutton);\n              }\n          }\n\n          for (var alphabutton of this.alphabuttons) {\n              if (_.includes(this.researcherLastInitials, alphabutton.letter)) {\n                  alphabutton.isAvailable = true;\n              }\n          }\n      },\n      onFilterFreetext: function(event) {\n          if (this.freeText) {\n            \n            for (var researcher of this.researchers) {\n              var wasFound = false;\n              if (researcher.biography) {\n                var bio = researcher.biography.academic_biography.en;\n                var isFound = _.includes(bio, this.freeText);\n                if (isFound) {\n                  wasFound = true;\n\n                  this.filteredResearchers.push(researcher);\n                }\n              }\n\n              if (researcher.selected_publications && !wasFound) {\n\n                  var art = researcher.selected_publications.journal_articles[0].article_title;\n                  var isFound = _.includes(art, this.freeText);\n                  if (isFound) {\n                        wasFound = true;\n                        this.filteredResearchers.push(researcher);\n                  }\n\n              }\n\n            }\n\n            this.extractAlphaFilter();\n\n          } else {\n\n              this.filteredResearchers = this.researchers;\n              this.refreshFilteredList();\n          }\n\n        },\n        onFilterFreetextClear: function(event) {\n        this.freeText = '';\n        this.filteredResearchers = this.researchers;\n        this.extractAlphaFilter();\n        this.refreshFilteredList();\n        }\n    }\n  })\n\n"]}